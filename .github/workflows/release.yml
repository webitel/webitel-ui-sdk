name: Webitel UI release with docs

on:
  push:
    branches: [ master ]

permissions:
  actions: read
  pull-requests: write
  repository-projects: write

jobs:
  install_deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
#
#      - run: npm run test:unit
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: 'project'
#          path: .

  test:
    needs: [install_deps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

#      - uses: actions/download-artifact@v4
#        with:
#          name: 'project'

#      - run: chmod -R 777 .

      - run: npm run test:unit


  release:
    needs: [install_deps, test]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - run: chmod -R 777 .

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          name: "Webitel UI Release ${{ steps.package-version.outputs.current-version}}"
          body: "This is a release of Webitel UI version ${{ steps.package-version.outputs.current-version}}, built on ${{ github.run_date }}"
          generate_release_notes: true

  publish:
    needs: [install_deps, test]
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/download-artifact@v4
        with:
          name: 'project'

      - run: chmod -R 777 .

      - name: Check publish status
        id: check_publish
        uses: tehpsalmist/npm-publish-status-action@v1

      - name: Publish release
        id: publish_release
        if: ${{ steps.check_publish.outputs.exists == '0' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        run: |
          echo "Publishing release, ${{ steps.check_publish.outputs.exists }}"
          npm run build
          npm publish --access public

      - name: Report publish status
        if: ${{ steps.check_publish.outputs.exists == '1' }}
        run: echo "Package already published"

  build_docs:
    needs: [install_deps, test]
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/download-artifact@v4
        with:
          name: 'project'

      - run: chmod -R 777 .

      - name: Build docs
        run: npm run docs:build

      - uses: actions/upload-artifact@v4
        with:
          name: 'docs'
          path: docs/.vitepress/dist

  deploy:
      needs: build_docs
      permissions:
        pages: write      # to deploy to Pages
        id-token: write   # to verify the deployment originates from an appropriate source
      runs-on: ubuntu-latest
      steps:
        - name: setup Github Pages
          id: setup_pages
          uses: actions/configure-pages@v4

        - name: deploy to Github Pages
          id: deploy_pages
          uses: actions/deploy-pages@v4
          with:
            artifact_name: 'docs'

