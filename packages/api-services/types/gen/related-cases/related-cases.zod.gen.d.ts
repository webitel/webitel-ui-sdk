/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';
/**
 * @summary Update an existing related case
 */
export declare const updateRelatedCase2Params: zod.ZodObject<{
    'input.primary_case.id': zod.ZodString;
    etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    etag?: string;
    'input.primary_case.id'?: string;
}, {
    etag?: string;
    'input.primary_case.id'?: string;
}>;
export declare const updateRelatedCase2QueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updateRelatedCase2BodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCase2Body: zod.ZodObject<{
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
    }, {
        name?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    primaryCase?: {
        name?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}, {
    primaryCase?: {
        name?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}>;
export declare const updateRelatedCase2ResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCase2Response: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}>;
/**
 * @summary Update an existing related case
 */
export declare const updateRelatedCaseParams: zod.ZodObject<{
    'input.primary_case.id': zod.ZodString;
    etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    etag?: string;
    'input.primary_case.id'?: string;
}, {
    etag?: string;
    'input.primary_case.id'?: string;
}>;
export declare const updateRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updateRelatedCaseBodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCaseBody: zod.ZodObject<{
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
    }, {
        name?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    primaryCase?: {
        name?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}, {
    primaryCase?: {
        name?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}>;
export declare const updateRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}>;
/**
 * @summary List all related cases for a specific case
 */
export declare const listRelatedCasesParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    primary_case_etag?: string;
}, {
    primary_case_etag?: string;
}>;
export declare const listRelatedCasesQueryParams: zod.ZodObject<{
    page: zod.ZodOptional<zod.ZodNumber>;
    size: zod.ZodOptional<zod.ZodNumber>;
    q: zod.ZodOptional<zod.ZodString>;
    sort: zod.ZodOptional<zod.ZodString>;
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    ids: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    page?: number;
    sort?: string;
    ids?: string[];
    size?: number;
    fields?: string[];
    q?: string;
}, {
    page?: number;
    sort?: string;
    ids?: string[];
    size?: number;
    fields?: string[];
    q?: string;
}>;
export declare const listRelatedCasesResponseDataItemRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const listRelatedCasesResponse: zod.ZodObject<{
    data: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
        createdAt: zod.ZodOptional<zod.ZodString>;
        createdBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        primaryCase: zod.ZodOptional<zod.ZodObject<{
            color: zod.ZodOptional<zod.ZodString>;
            etag: zod.ZodOptional<zod.ZodString>;
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
            subject: zod.ZodOptional<zod.ZodString>;
            ver: zod.ZodOptional<zod.ZodNumber>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        }, {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        }>>;
        relatedCase: zod.ZodOptional<zod.ZodObject<{
            color: zod.ZodOptional<zod.ZodString>;
            etag: zod.ZodOptional<zod.ZodString>;
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
            subject: zod.ZodOptional<zod.ZodString>;
            ver: zod.ZodOptional<zod.ZodNumber>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        }, {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        }>>;
        relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
        updatedAt: zod.ZodOptional<zod.ZodString>;
        updatedBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        etag?: string;
        ver?: number;
        primaryCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relatedCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    }, {
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        etag?: string;
        ver?: number;
        primaryCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relatedCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    }>, "many">>;
    next: zod.ZodOptional<zod.ZodBoolean>;
    page: zod.ZodOptional<zod.ZodString>;
}, "strip", zod.ZodTypeAny, {
    next?: boolean;
    page?: string;
    data?: {
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        etag?: string;
        ver?: number;
        primaryCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relatedCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    }[];
}, {
    next?: boolean;
    page?: string;
    data?: {
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        etag?: string;
        ver?: number;
        primaryCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relatedCase?: {
            name?: string;
            id?: string;
            etag?: string;
            subject?: string;
            ver?: number;
            color?: string;
        };
        relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    }[];
}>;
/**
 * @summary Create a new related case
 */
export declare const createRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    primary_case_etag?: string;
}, {
    primary_case_etag?: string;
}>;
export declare const createRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const createRelatedCaseBodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const createRelatedCaseBody: zod.ZodObject<{
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}, {
    relatedCase?: {
        name?: string;
        id?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
    userId?: {
        name?: string;
        id?: string;
    };
}>;
export declare const createRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const createRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}>;
/**
 * @summary Delete a specific related case
 */
export declare const deleteRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
    etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    etag?: string;
    primary_case_etag?: string;
}, {
    etag?: string;
    primary_case_etag?: string;
}>;
export declare const deleteRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const deleteRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}>;
/**
 * @summary Retrieve a specific related case by ID
 */
export declare const locateRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
    etag: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    etag?: string;
    primary_case_etag?: string;
}, {
    etag?: string;
    primary_case_etag?: string;
}>;
export declare const locateRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const locateRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const locateRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }, {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    }>>;
    relationType: zod.ZodDefault<zod.ZodEnum<["RELATION_TYPE_UNSPECIFIED", "DUPLICATES", "IS_DUPLICATED_BY", "BLOCKS", "IS_BLOCKED_BY", "CAUSES", "IS_CAUSED_BY", "IS_CHILD_OF", "IS_PARENT_OF", "RELATES_TO"]>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}, {
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    etag?: string;
    ver?: number;
    primaryCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relatedCase?: {
        name?: string;
        id?: string;
        etag?: string;
        subject?: string;
        ver?: number;
        color?: string;
    };
    relationType?: "RELATION_TYPE_UNSPECIFIED" | "DUPLICATES" | "IS_DUPLICATED_BY" | "BLOCKS" | "IS_BLOCKED_BY" | "CAUSES" | "IS_CAUSED_BY" | "IS_CHILD_OF" | "IS_PARENT_OF" | "RELATES_TO";
}>;
