/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';
/**
 * @summary Update an existing related case
 */
export declare const updateRelatedCase2Params: zod.ZodObject<{
    'input.primary_case.id': zod.ZodString;
    etag: zod.ZodString;
}, zod.core.$strip>;
export declare const updateRelatedCase2QueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
}, zod.core.$strip>;
export declare const updateRelatedCase2BodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCase2Body: zod.ZodObject<{
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
}, zod.core.$strip>;
export declare const updateRelatedCase2ResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCase2Response: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
/**
 * @summary Update an existing related case
 */
export declare const updateRelatedCaseParams: zod.ZodObject<{
    'input.primary_case.id': zod.ZodString;
    etag: zod.ZodString;
}, zod.core.$strip>;
export declare const updateRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
}, zod.core.$strip>;
export declare const updateRelatedCaseBodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCaseBody: zod.ZodObject<{
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
}, zod.core.$strip>;
export declare const updateRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const updateRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
/**
 * @summary List all related cases for a specific case
 */
export declare const listRelatedCasesParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
}, zod.core.$strip>;
export declare const listRelatedCasesQueryParams: zod.ZodObject<{
    page: zod.ZodOptional<zod.ZodNumber>;
    size: zod.ZodOptional<zod.ZodNumber>;
    q: zod.ZodOptional<zod.ZodString>;
    sort: zod.ZodOptional<zod.ZodString>;
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
    ids: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
}, zod.core.$strip>;
export declare const listRelatedCasesResponseDataItemRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const listRelatedCasesResponse: zod.ZodObject<{
    data: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
        createdAt: zod.ZodOptional<zod.ZodString>;
        createdBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, zod.core.$strip>>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        primaryCase: zod.ZodOptional<zod.ZodObject<{
            color: zod.ZodOptional<zod.ZodString>;
            etag: zod.ZodOptional<zod.ZodString>;
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
            subject: zod.ZodOptional<zod.ZodString>;
            ver: zod.ZodOptional<zod.ZodNumber>;
        }, zod.core.$strip>>;
        relatedCase: zod.ZodOptional<zod.ZodObject<{
            color: zod.ZodOptional<zod.ZodString>;
            etag: zod.ZodOptional<zod.ZodString>;
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
            subject: zod.ZodOptional<zod.ZodString>;
            ver: zod.ZodOptional<zod.ZodNumber>;
        }, zod.core.$strip>>;
        relationType: zod.ZodDefault<zod.ZodEnum<{
            RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
            DUPLICATES: "DUPLICATES";
            IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
            BLOCKS: "BLOCKS";
            IS_BLOCKED_BY: "IS_BLOCKED_BY";
            CAUSES: "CAUSES";
            IS_CAUSED_BY: "IS_CAUSED_BY";
            IS_CHILD_OF: "IS_CHILD_OF";
            IS_PARENT_OF: "IS_PARENT_OF";
            RELATES_TO: "RELATES_TO";
        }>>;
        updatedAt: zod.ZodOptional<zod.ZodString>;
        updatedBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, zod.core.$strip>>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>>;
    next: zod.ZodOptional<zod.ZodBoolean>;
    page: zod.ZodOptional<zod.ZodString>;
}, zod.core.$strip>;
/**
 * @summary Create a new related case
 */
export declare const createRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
}, zod.core.$strip>;
export declare const createRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
}, zod.core.$strip>;
export declare const createRelatedCaseBodyRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const createRelatedCaseBody: zod.ZodObject<{
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    userId: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
}, zod.core.$strip>;
export declare const createRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const createRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
/**
 * @summary Delete a specific related case
 */
export declare const deleteRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
    etag: zod.ZodString;
}, zod.core.$strip>;
export declare const deleteRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const deleteRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
/**
 * @summary Retrieve a specific related case by ID
 */
export declare const locateRelatedCaseParams: zod.ZodObject<{
    primary_case_etag: zod.ZodString;
    etag: zod.ZodString;
}, zod.core.$strip>;
export declare const locateRelatedCaseQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
}, zod.core.$strip>;
export declare const locateRelatedCaseResponseRelationTypeDefault = "RELATION_TYPE_UNSPECIFIED";
export declare const locateRelatedCaseResponse: zod.ZodObject<{
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    etag: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    primaryCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relatedCase: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        etag: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        subject: zod.ZodOptional<zod.ZodString>;
        ver: zod.ZodOptional<zod.ZodNumber>;
    }, zod.core.$strip>>;
    relationType: zod.ZodDefault<zod.ZodEnum<{
        RELATION_TYPE_UNSPECIFIED: "RELATION_TYPE_UNSPECIFIED";
        DUPLICATES: "DUPLICATES";
        IS_DUPLICATED_BY: "IS_DUPLICATED_BY";
        BLOCKS: "BLOCKS";
        IS_BLOCKED_BY: "IS_BLOCKED_BY";
        CAUSES: "CAUSES";
        IS_CAUSED_BY: "IS_CAUSED_BY";
        IS_CHILD_OF: "IS_CHILD_OF";
        IS_PARENT_OF: "IS_PARENT_OF";
        RELATES_TO: "RELATES_TO";
    }>>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, zod.core.$strip>>;
    ver: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
