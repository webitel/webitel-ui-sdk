/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';
/**
 * @summary Retrieve a list of priorities or search priorities
 */
export declare const listPrioritiesQueryParams: zod.ZodObject<{
    page: zod.ZodOptional<zod.ZodNumber>;
    size: zod.ZodOptional<zod.ZodNumber>;
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    sort: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    q: zod.ZodOptional<zod.ZodString>;
    notInSla: zod.ZodOptional<zod.ZodString>;
    inSlaCond: zod.ZodOptional<zod.ZodString>;
}, "strip", zod.ZodTypeAny, {
    page?: number;
    sort?: string;
    id?: string[];
    size?: number;
    fields?: string[];
    q?: string;
    notInSla?: string;
    inSlaCond?: string;
}, {
    page?: number;
    sort?: string;
    id?: string[];
    size?: number;
    fields?: string[];
    q?: string;
    notInSla?: string;
    inSlaCond?: string;
}>;
export declare const listPrioritiesResponse: zod.ZodObject<{
    items: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        createdAt: zod.ZodOptional<zod.ZodString>;
        createdBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
        description: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        updatedAt: zod.ZodOptional<zod.ZodString>;
        updatedBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }, {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }>, "many">>;
    next: zod.ZodOptional<zod.ZodBoolean>;
    page: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    items?: {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }[];
    next?: boolean;
    page?: number;
}, {
    items?: {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }[];
    next?: boolean;
    page?: number;
}>;
/**
 * @summary Create a new priority
 */
export declare const createPriorityQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const createPriorityBody: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    description: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    description?: string;
    color?: string;
}, {
    name?: string;
    description?: string;
    color?: string;
}>;
export declare const createPriorityResponse: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}>;
/**
 * @summary Delete a priority
 */
export declare const deletePriorityParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const deletePriorityResponse: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}>;
/**
 * @summary Locate a priority by ID
 */
export declare const locatePriorityParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const locatePriorityQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const locatePriorityResponse: zod.ZodObject<{
    priority: zod.ZodOptional<zod.ZodObject<{
        color: zod.ZodOptional<zod.ZodString>;
        createdAt: zod.ZodOptional<zod.ZodString>;
        createdBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
        description: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
        updatedAt: zod.ZodOptional<zod.ZodString>;
        updatedBy: zod.ZodOptional<zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }, {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    priority?: {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    };
}, {
    priority?: {
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
        color?: string;
    };
}>;
/**
 * @summary Update an existing priority
 */
export declare const updatePriority2Params: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const updatePriority2QueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updatePriority2Body: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    description: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    description?: string;
    color?: string;
}, {
    name?: string;
    description?: string;
    color?: string;
}>;
export declare const updatePriority2Response: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}>;
/**
 * @summary Update an existing priority
 */
export declare const updatePriorityParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const updatePriorityQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updatePriorityBody: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    description: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    description?: string;
    color?: string;
}, {
    name?: string;
    description?: string;
    color?: string;
}>;
export declare const updatePriorityResponse: zod.ZodObject<{
    color: zod.ZodOptional<zod.ZodString>;
    createdAt: zod.ZodOptional<zod.ZodString>;
    createdBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodString>;
    name: zod.ZodOptional<zod.ZodString>;
    updatedAt: zod.ZodOptional<zod.ZodString>;
    updatedBy: zod.ZodOptional<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>>;
}, "strip", zod.ZodTypeAny, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}, {
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
    color?: string;
}>;
