/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';
/**
 * @summary Retrieve a list of sources or search sources
 */
export declare const listSourcesQueryParams: zod.ZodObject<{
    page: zod.ZodOptional<zod.ZodNumber>;
    size: zod.ZodOptional<zod.ZodNumber>;
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    sort: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    q: zod.ZodOptional<zod.ZodString>;
    type: zod.ZodOptional<zod.ZodArray<zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>, "many">>;
}, "strip", zod.ZodTypeAny, {
    page?: number;
    sort?: string;
    type?: ("TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL")[];
    id?: string[];
    size?: number;
    fields?: string[];
    q?: string;
}, {
    page?: number;
    sort?: string;
    type?: ("TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL")[];
    id?: string[];
    size?: number;
    fields?: string[];
    q?: string;
}>;
export declare const listSourcesResponseItemsItemDescriptionMax = 500;
export declare const listSourcesResponseItemsItemNameMin = 3;
export declare const listSourcesResponseItemsItemNameMax = 100;
export declare const listSourcesResponseItemsItemNameRegExp: RegExp;
export declare const listSourcesResponseItemsItemTypeDefault = "TYPE_UNSPECIFIED";
export declare const listSourcesResponse: zod.ZodObject<{
    items: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
        createdAt: zod.ZodString;
        createdBy: zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>;
        description: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodString;
        name: zod.ZodString;
        type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
        updatedAt: zod.ZodString;
        updatedBy: zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>;
    }, "strip", zod.ZodTypeAny, {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }, {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }>, "many">>;
    next: zod.ZodOptional<zod.ZodBoolean>;
    page: zod.ZodOptional<zod.ZodNumber>;
}, "strip", zod.ZodTypeAny, {
    items?: {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }[];
    next?: boolean;
    page?: number;
}, {
    items?: {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }[];
    next?: boolean;
    page?: number;
}>;
/**
 * @summary Create a new source
 */
export declare const createSourceQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const createSourceBodyDefault: {
    name: string;
    type: string;
};
export declare const createSourceBodyDescriptionDefault = "No description provided";
export declare const createSourceBodyDescriptionMax = 500;
export declare const createSourceBodyNameDefault = "New Source";
export declare const createSourceBodyNameMin = 2;
export declare const createSourceBodyNameMax = 100;
export declare const createSourceBodyNameRegExp: RegExp;
export declare const createSourceBodyTypeDefault = "TYPE_UNSPECIFIED";
export declare const createSourceBody: zod.ZodObject<{
    description: zod.ZodDefault<zod.ZodString>;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}>;
export declare const createSourceResponseDescriptionMax = 500;
export declare const createSourceResponseNameMin = 3;
export declare const createSourceResponseNameMax = 100;
export declare const createSourceResponseNameRegExp: RegExp;
export declare const createSourceResponseTypeDefault = "TYPE_UNSPECIFIED";
export declare const createSourceResponse: zod.ZodObject<{
    createdAt: zod.ZodString;
    createdBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodString;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
    updatedAt: zod.ZodString;
    updatedBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}>;
/**
 * @summary Delete a source
 */
export declare const deleteSourceParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const deleteSourceResponseDescriptionMax = 500;
export declare const deleteSourceResponseNameMin = 3;
export declare const deleteSourceResponseNameMax = 100;
export declare const deleteSourceResponseNameRegExp: RegExp;
export declare const deleteSourceResponseTypeDefault = "TYPE_UNSPECIFIED";
export declare const deleteSourceResponse: zod.ZodObject<{
    createdAt: zod.ZodString;
    createdBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodString;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
    updatedAt: zod.ZodString;
    updatedBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}>;
/**
 * @summary Locate a source by ID
 */
export declare const locateSourceParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const locateSourceQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const locateSourceResponseSourceDescriptionMax = 500;
export declare const locateSourceResponseSourceNameMin = 3;
export declare const locateSourceResponseSourceNameMax = 100;
export declare const locateSourceResponseSourceNameRegExp: RegExp;
export declare const locateSourceResponseSourceTypeDefault = "TYPE_UNSPECIFIED";
export declare const locateSourceResponse: zod.ZodObject<{
    source: zod.ZodOptional<zod.ZodObject<{
        createdAt: zod.ZodString;
        createdBy: zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>;
        description: zod.ZodOptional<zod.ZodString>;
        id: zod.ZodString;
        name: zod.ZodString;
        type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
        updatedAt: zod.ZodString;
        updatedBy: zod.ZodObject<{
            id: zod.ZodOptional<zod.ZodString>;
            name: zod.ZodOptional<zod.ZodString>;
        }, "strip", zod.ZodTypeAny, {
            name?: string;
            id?: string;
        }, {
            name?: string;
            id?: string;
        }>;
    }, "strip", zod.ZodTypeAny, {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }, {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    }>>;
}, "strip", zod.ZodTypeAny, {
    source?: {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    };
}, {
    source?: {
        type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
        name?: string;
        createdAt?: string;
        createdBy?: {
            name?: string;
            id?: string;
        };
        description?: string;
        id?: string;
        updatedAt?: string;
        updatedBy?: {
            name?: string;
            id?: string;
        };
    };
}>;
/**
 * @summary Update an existing source
 */
export declare const updateSource2Params: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const updateSource2QueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updateSource2BodyDefault: {
    name: string;
    type: string;
};
export declare const updateSource2BodyDescriptionDefault = "No description provided";
export declare const updateSource2BodyDescriptionMax = 500;
export declare const updateSource2BodyNameDefault = "New Source";
export declare const updateSource2BodyNameMin = 2;
export declare const updateSource2BodyNameMax = 100;
export declare const updateSource2BodyNameRegExp: RegExp;
export declare const updateSource2BodyTypeDefault = "TYPE_UNSPECIFIED";
export declare const updateSource2Body: zod.ZodObject<{
    description: zod.ZodDefault<zod.ZodString>;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}>;
export declare const updateSource2ResponseDescriptionMax = 500;
export declare const updateSource2ResponseNameMin = 3;
export declare const updateSource2ResponseNameMax = 100;
export declare const updateSource2ResponseNameRegExp: RegExp;
export declare const updateSource2ResponseTypeDefault = "TYPE_UNSPECIFIED";
export declare const updateSource2Response: zod.ZodObject<{
    createdAt: zod.ZodString;
    createdBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodString;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
    updatedAt: zod.ZodString;
    updatedBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}>;
/**
 * @summary Update an existing source
 */
export declare const updateSourceParams: zod.ZodObject<{
    id: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    id?: string;
}, {
    id?: string;
}>;
export declare const updateSourceQueryParams: zod.ZodObject<{
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
}, "strip", zod.ZodTypeAny, {
    fields?: string[];
}, {
    fields?: string[];
}>;
export declare const updateSourceBodyDefault: {
    name: string;
    type: string;
};
export declare const updateSourceBodyDescriptionDefault = "No description provided";
export declare const updateSourceBodyDescriptionMax = 500;
export declare const updateSourceBodyNameDefault = "New Source";
export declare const updateSourceBodyNameMin = 2;
export declare const updateSourceBodyNameMax = 100;
export declare const updateSourceBodyNameRegExp: RegExp;
export declare const updateSourceBodyTypeDefault = "TYPE_UNSPECIFIED";
export declare const updateSourceBody: zod.ZodObject<{
    description: zod.ZodDefault<zod.ZodString>;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    description?: string;
}>;
export declare const updateSourceResponseDescriptionMax = 500;
export declare const updateSourceResponseNameMin = 3;
export declare const updateSourceResponseNameMax = 100;
export declare const updateSourceResponseNameRegExp: RegExp;
export declare const updateSourceResponseTypeDefault = "TYPE_UNSPECIFIED";
export declare const updateSourceResponse: zod.ZodObject<{
    createdAt: zod.ZodString;
    createdBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
    description: zod.ZodOptional<zod.ZodString>;
    id: zod.ZodString;
    name: zod.ZodString;
    type: zod.ZodEnum<["TYPE_UNSPECIFIED", "CALL", "CHAT", "SOCIAL_MEDIA", "EMAIL", "API", "MANUAL"]>;
    updatedAt: zod.ZodString;
    updatedBy: zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodString>;
        name: zod.ZodOptional<zod.ZodString>;
    }, "strip", zod.ZodTypeAny, {
        name?: string;
        id?: string;
    }, {
        name?: string;
        id?: string;
    }>;
}, "strip", zod.ZodTypeAny, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}, {
    type?: "TYPE_UNSPECIFIED" | "CALL" | "CHAT" | "SOCIAL_MEDIA" | "EMAIL" | "API" | "MANUAL";
    name?: string;
    createdAt?: string;
    createdBy?: {
        name?: string;
        id?: string;
    };
    description?: string;
    id?: string;
    updatedAt?: string;
    updatedBy?: {
        name?: string;
        id?: string;
    };
}>;
