import { http } from 'msw';
import type { CasesLocateSLAConditionResponse, CasesSLACondition, CasesSLAConditionList } from '.././_models';
export declare const getCreateSLAConditionResponseMock: (overrideResponse?: Partial<CasesSLACondition>) => CasesSLACondition;
export declare const getDeleteSLAConditionResponseMock: (overrideResponse?: Partial<CasesSLACondition>) => CasesSLACondition;
export declare const getLocateSLAConditionResponseMock: (overrideResponse?: Partial<CasesLocateSLAConditionResponse>) => CasesLocateSLAConditionResponse;
export declare const getUpdateSLACondition2ResponseMock: (overrideResponse?: Partial<CasesSLACondition>) => CasesSLACondition;
export declare const getUpdateSLAConditionResponseMock: (overrideResponse?: Partial<CasesSLACondition>) => CasesSLACondition;
export declare const getListSLAConditionsResponseMock: (overrideResponse?: Partial<CasesSLAConditionList>) => CasesSLAConditionList;
export declare const getCreateSLAConditionMockHandler: (overrideResponse?: CasesSLACondition | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<CasesSLACondition> | CasesSLACondition)) => import("msw").HttpHandler;
export declare const getDeleteSLAConditionMockHandler: (overrideResponse?: CasesSLACondition | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<CasesSLACondition> | CasesSLACondition)) => import("msw").HttpHandler;
export declare const getLocateSLAConditionMockHandler: (overrideResponse?: CasesLocateSLAConditionResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<CasesLocateSLAConditionResponse> | CasesLocateSLAConditionResponse)) => import("msw").HttpHandler;
export declare const getUpdateSLACondition2MockHandler: (overrideResponse?: CasesSLACondition | ((info: Parameters<Parameters<typeof http.patch>[1]>[0]) => Promise<CasesSLACondition> | CasesSLACondition)) => import("msw").HttpHandler;
export declare const getUpdateSLAConditionMockHandler: (overrideResponse?: CasesSLACondition | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<CasesSLACondition> | CasesSLACondition)) => import("msw").HttpHandler;
export declare const getListSLAConditionsMockHandler: (overrideResponse?: CasesSLAConditionList | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<CasesSLAConditionList> | CasesSLAConditionList)) => import("msw").HttpHandler;
export declare const getSlaconditionsMock: () => import("msw").HttpHandler[];
