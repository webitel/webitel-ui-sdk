/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';
export declare const getTimelineParams: zod.ZodObject<{
    case_id: zod.ZodString;
}, zod.core.$strip>;
export declare const getTimelineQueryParams: zod.ZodObject<{
    page: zod.ZodOptional<zod.ZodNumber>;
    size: zod.ZodOptional<zod.ZodNumber>;
    q: zod.ZodOptional<zod.ZodString>;
    sort: zod.ZodOptional<zod.ZodString>;
    fields: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
    ids: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
    dateFrom: zod.ZodOptional<zod.ZodString>;
    dateTo: zod.ZodOptional<zod.ZodString>;
    type: zod.ZodOptional<zod.ZodArray<zod.ZodEnum<{
        chat: "chat";
        call: "call";
        email: "email";
    }>>>;
}, zod.core.$strip>;
export declare const getTimelineResponseDaysItemItemsItemTypeDefault = "chat";
export declare const getTimelineResponse: zod.ZodObject<{
    days: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
        callsCount: zod.ZodOptional<zod.ZodString>;
        chatsCount: zod.ZodOptional<zod.ZodString>;
        dayTimestamp: zod.ZodOptional<zod.ZodString>;
        emailsCount: zod.ZodOptional<zod.ZodString>;
        items: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
            call: zod.ZodOptional<zod.ZodObject<{
                closedAt: zod.ZodOptional<zod.ZodString>;
                duration: zod.ZodOptional<zod.ZodString>;
                files: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    mimeType: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                    size: zod.ZodOptional<zod.ZodString>;
                    startAt: zod.ZodOptional<zod.ZodString>;
                    stopAt: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>>;
                flowScheme: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                gateway: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                id: zod.ZodOptional<zod.ZodString>;
                isDetailed: zod.ZodOptional<zod.ZodBoolean>;
                isInbound: zod.ZodOptional<zod.ZodBoolean>;
                isMissed: zod.ZodOptional<zod.ZodBoolean>;
                participants: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>>;
                queue: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                totalDuration: zod.ZodOptional<zod.ZodString>;
                transcripts: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
                    file: zod.ZodOptional<zod.ZodObject<{
                        id: zod.ZodOptional<zod.ZodString>;
                        name: zod.ZodOptional<zod.ZodString>;
                    }, zod.core.$strip>>;
                    id: zod.ZodOptional<zod.ZodString>;
                    locale: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>>;
            }, zod.core.$strip>>;
            chat: zod.ZodOptional<zod.ZodObject<{
                closedAt: zod.ZodOptional<zod.ZodString>;
                duration: zod.ZodOptional<zod.ZodString>;
                flowScheme: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                gateway: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                    type: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                id: zod.ZodOptional<zod.ZodString>;
                isDetailed: zod.ZodOptional<zod.ZodBoolean>;
                isInbound: zod.ZodOptional<zod.ZodBoolean>;
                isMissed: zod.ZodOptional<zod.ZodBoolean>;
                participants: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>>;
                queue: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
            }, zod.core.$strip>>;
            createdAt: zod.ZodOptional<zod.ZodString>;
            email: zod.ZodOptional<zod.ZodObject<{
                attachments: zod.ZodOptional<zod.ZodArray<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    mime: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                    size: zod.ZodOptional<zod.ZodString>;
                    url: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>>;
                body: zod.ZodOptional<zod.ZodString>;
                cc: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
                from: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
                html: zod.ZodOptional<zod.ZodString>;
                id: zod.ZodOptional<zod.ZodString>;
                isDetailed: zod.ZodOptional<zod.ZodBoolean>;
                isInbound: zod.ZodOptional<zod.ZodBoolean>;
                owner: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                profile: zod.ZodOptional<zod.ZodObject<{
                    id: zod.ZodOptional<zod.ZodString>;
                    name: zod.ZodOptional<zod.ZodString>;
                }, zod.core.$strip>>;
                sender: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
                subject: zod.ZodOptional<zod.ZodString>;
                to: zod.ZodOptional<zod.ZodArray<zod.ZodString>>;
            }, zod.core.$strip>>;
            type: zod.ZodDefault<zod.ZodEnum<{
                chat: "chat";
                call: "call";
                email: "email";
            }>>;
        }, zod.core.$strip>>>;
    }, zod.core.$strip>>>;
    next: zod.ZodOptional<zod.ZodBoolean>;
    page: zod.ZodOptional<zod.ZodNumber>;
}, zod.core.$strip>;
export declare const getTimelineCounterParams: zod.ZodObject<{
    case_id: zod.ZodString;
}, zod.core.$strip>;
export declare const getTimelineCounterResponse: zod.ZodObject<{
    callsCount: zod.ZodOptional<zod.ZodString>;
    chatsCount: zod.ZodOptional<zod.ZodString>;
    dateFrom: zod.ZodOptional<zod.ZodString>;
    dateTo: zod.ZodOptional<zod.ZodString>;
    emailsCount: zod.ZodOptional<zod.ZodString>;
}, zod.core.$strip>;
