openapi: 3.0.0
info:
  title: service.proto
  version: version not set
servers: []
paths:
  /cases:
    get:
      parameters:
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of results per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Query string for searching cases.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: List of specific case IDs to retrieve.
          explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: 'Sorting criteria (e.g., field:asc).'
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Key-value pairs for additional filtering.
          explode: true
          in: query
          name: filters
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Contact ID for filtering cases.
          in: query
          name: contact_id
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: SearchCases
      summary: RPC method for searching cases.
    post:
      parameters:
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: CreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCreateCase'
        description: Input data for creating the case.
        required: true
      summary: RPC method for creating a new case.
  /cases/catalogs:
    get:
      parameters:
        - description: Page number for pagination
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of records per page
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sorting options by fields
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: List of IDs to filter the catalogs
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: 'Filter by state (true for active, false for inactive)'
          in: query
          name: state
          required: false
          schema:
            type: boolean
        - description: |-
            Filter by the depth of the hierarchy to retrieve services.
            The depth indicates how many ancestor levels of services
            will be included for each catalog.
            - A depth of 0 includes only the direct catalog.
            - A depth of 1 includes the catalog and its immediate services.
            - By default the depth is limited by 3,
              meaning all nested services and sub-services will be included.
          in: query
          name: depth
          required: false
          schema:
            format: int64
            type: string
        - description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          explode: true
          in: query
          name: sub_fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Filter catalogs with subservices
          in: query
          name: hasSubservices
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCatalogList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: ListCatalogs
      summary: Retrieve a list of catalogs or search catalogs
    post:
      parameters:
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCatalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: CreateCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCatalog'
        required: true
      summary: Create a new catalog
  '/cases/catalogs/{id}':
    delete:
      parameters:
        - description: ID of the catalog to be deleted
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCatalogList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: DeleteCatalog
      summary: Delete a catalog
    get:
      parameters:
        - description: ID of the catalog to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          explode: true
          in: query
          name: sub_fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateCatalogResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: LocateCatalog
      summary: Locate a catalog by ID
    patch:
      parameters:
        - description: ID of the catalog to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCatalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: UpdateCatalog2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCatalog'
        description: Input data for updating the catalog
        required: true
      summary: Update an existing catalog
    put:
      parameters:
        - description: ID of the catalog to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCatalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: UpdateCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCatalog'
        description: Input data for updating the catalog
        required: true
      summary: Update an existing catalog
  /cases/close_reason_groups:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          required: false
          schema:
            type: string
        - explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: q
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonGroupList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: ListCloseReasonGroups
      summary: Retrieve a list of close reason groups or search close reason groups
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: CreateCloseReasonGroup
      requestBody:
        $ref: '#/components/requestBodies/casesInputCloseReasonGroup'
      summary: Create a new close reason group
  '/cases/close_reason_groups/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: DeleteCloseReasonGroup
      summary: Delete a close reason group
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateCloseReasonGroupResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: LocateCloseReasonGroup
      summary: Locate a close reason group by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: UpdateCloseReasonGroup2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCloseReasonGroup'
        required: true
      summary: Update an existing close reason group
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: UpdateCloseReasonGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCloseReasonGroup'
        required: true
      summary: Update an existing close reason group
  '/cases/comments/{etag}':
    delete:
      parameters:
        - description: Identifier of the comment to delete.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to return after deletion.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: DeleteComment
      summary: Delete a specific comment by its etag
    get:
      parameters:
        - description: Identifier of the comment to retrieve.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Specific fields to return for the comment.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: LocateComment
      summary: Retrieve a specific comment by its etag
  '/cases/comments/{input.etag}':
    patch:
      parameters:
        - description: Identifier for the comment.
          in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: UpdateComment2
      requestBody:
        content:
          application/json:
            schema:
              example:
                text: My new comment
              properties:
                text:
                  description: Content of the comment.
                  type: string
              title: Data for the comment to update.
              type: object
        description: Data for the comment to update.
        required: true
      summary: Update a specific comment by its etag
    put:
      parameters:
        - description: Identifier for the comment.
          in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: UpdateComment
      requestBody:
        content:
          application/json:
            schema:
              example:
                text: My new comment
              properties:
                text:
                  description: Content of the comment.
                  type: string
              title: Data for the comment to update.
              type: object
        description: Data for the comment to update.
        required: true
      summary: Update a specific comment by its etag
  /cases/priorities:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Filter priorities that are not in filtered SLA
          in: query
          name: notInSla
          required: false
          schema:
            format: int64
            type: string
        - description: >-
            Filter priorities that are in filtered SlaCondition and not in
            current SLA
          in: query
          name: inSlaCond
          required: false
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesPriorityList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: ListPriorities
      summary: Retrieve a list of priorities or search priorities
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesPriority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: CreatePriority
      requestBody:
        $ref: '#/components/requestBodies/casesInputPriority'
      summary: Create a new priority
  '/cases/priorities/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesPriority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: DeletePriority
      summary: Delete a priority
    get:
      parameters:
        - description: ID of the priority to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocatePriorityResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: LocatePriority
      summary: Locate a priority by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesPriority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: UpdatePriority2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputPriority'
        required: true
      summary: Update an existing priority
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesPriority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: UpdatePriority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputPriority'
        required: true
      summary: Update an existing priority
  '/cases/related/{etag}':
    delete:
      parameters:
        - description: Identifier of the related case to delete.
          in: path
          name: etag
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: DeleteRelatedCase
      summary: Delete a specific related case
  /cases/services:
    get:
      parameters:
        - description: Page number for pagination
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of records per page
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Sorting options by fields
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: List of IDs to filter the services
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Filter services by catalog ID (required)
          in: query
          name: root_id
          required: false
          schema:
            format: int64
            type: string
        - description: 'Filter by state (true for active, false for inactive)'
          in: query
          name: state
          required: false
          schema:
            type: boolean
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesServiceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: ListServices
      summary: Retrieve a list of services or search services within a catalog
    post:
      parameters:
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesService'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: CreateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCreateService'
        required: true
      summary: Create a new service within a catalog
  '/cases/services/{id}':
    delete:
      parameters:
        - description: ID of the service to be deleted
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesServiceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: DeleteService
      summary: Delete a service
    get:
      parameters:
        - description: ID of the service to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateServiceResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: LocateService
      summary: Locate a service by ID
    patch:
      parameters:
        - description: ID of the service to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesService'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: UpdateService2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputService'
        description: Input data for updating the service
        required: true
      summary: Update an existing service
    put:
      parameters:
        - description: ID of the service to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesService'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Services
      operationId: UpdateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputService'
        description: Input data for updating the service
        required: true
      summary: Update an existing service
  /cases/slas:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLAList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: ListSLAs
      summary: Retrieve a list of SLAs or search SLA conditions
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: CreateSLA
      requestBody:
        $ref: '#/components/requestBodies/casesInputSLA'
      summary: Create a new SLA
  '/cases/slas/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: DeleteSLA
      summary: Delete an SLA
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateSLAResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: LocateSLA
      summary: Locate an SLA by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: UpdateSLA2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSLA'
        required: true
      summary: Update an existing SLA
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: UpdateSLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSLA'
        required: true
      summary: Update an existing SLA
  /cases/sources:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: |-
            Filter by source type.

             - TYPE_UNSPECIFIED: Unspecified source type.
             - CALL: Phone call source type.
             - CHAT: Chat source type.
             - SOCIAL_MEDIA: Social media source type.
             - EMAIL: Email source type.
             - API: API source type.
             - MANUAL: Manual source type.
          explode: true
          in: query
          name: type
          required: false
          schema:
            items:
              enum:
                - TYPE_UNSPECIFIED
                - CALL
                - CHAT
                - SOCIAL_MEDIA
                - EMAIL
                - API
                - MANUAL
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSourceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: ListSources
      summary: Retrieve a list of sources or search sources
    post:
      parameters:
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: CreateSource
      requestBody:
        $ref: '#/components/requestBodies/casesInputSource'
      summary: Create a new source
  '/cases/sources/{id}':
    delete:
      parameters:
        - description: The unique ID of the source to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: DeleteSource
      summary: Delete a source
    get:
      parameters:
        - description: The unique ID of the source to locate.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateSourceResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: LocateSource
      summary: Locate a source by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: UpdateSource2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSource'
        required: true
      summary: Update an existing source
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: UpdateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSource'
        required: true
      summary: Update an existing source
  /cases/statuses:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: ListStatuses
      summary: Retrieve a list of statuses or search statuses
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitelcasesStatus'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: CreateStatus
      requestBody:
        $ref: '#/components/requestBodies/casesInputStatus'
      summary: Create a new status
  '/cases/statuses/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitelcasesStatus'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: DeleteStatus
      summary: Delete a status
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateStatusResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: LocateStatus
      summary: Locate a status by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitelcasesStatus'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: UpdateStatus2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputStatus'
        required: true
      summary: Update an existing status
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitelcasesStatus'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: UpdateStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputStatus'
        required: true
      summary: Update an existing status
  '/cases/{case_etag}/comments':
    get:
      parameters:
        - description: Etag or ID of the case for which comments are requested.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of comments per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Query string for search.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Array of requested id.
          explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sorting order.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Fields to return for each comment.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseCommentList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: ListComments
      summary: Retrieve a list of comments associated with a specific case
    post:
      parameters:
        - description: Etag or ID of the case to which comments belong.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Result fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: PublishComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCaseComment'
        description: Comment to publish.
        required: true
      summary: Publish comment into a specific case
  '/cases/{case_etag}/communication':
    get:
      parameters:
        - description: Case identifier.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Query string for filtering results.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Number of records per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Sorting order.
          in: query
          name: sort
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesListCommunicationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: ListCommunications
      summary: |-
        Lists all communications linked to a specific case.
        Currently a feature for future development.
    post:
      parameters:
        - description: Case identifier.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLinkCommunicationResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: LinkCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCaseCommunication'
        description: Input data for the communications to link.
        required: true
      summary: Links a communication to a specific case.
  '/cases/{case_etag}/communication/{id}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Communication identifier.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesUnlinkCommunicationResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: UnlinkCommunication
      summary: Unlinks a communication from a specific case.
  '/cases/{case_etag}/files':
    get:
      parameters:
        - description: ID of the case to fetch files for (required).
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: The page number to retrieve.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of items per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Search term.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Array of requested id.
          explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sorting
          in: query
          name: sort
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseFileList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseFiles
      operationId: ListFiles
      summary: Retrieve a list of files associated with a case
  '/cases/{case_etag}/files/{id}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: The unique ID of the file to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesFile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseFiles
      operationId: DeleteFile
      summary: Delete a file
  '/cases/{case_etag}/links':
    get:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          required: false
          schema:
            type: string
        - explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          required: false
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLinkList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: ListLinks
      summary: With Case
    post:
      parameters:
        - description: new comment link
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: result fields needed on the front-end for each comment
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: input.etag
          required: false
          schema:
            type: string
        - in: query
          name: input.url
          required: false
          schema:
            type: string
        - in: query
          name: input.name
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: CreateLink
  '/cases/{case_etag}/links/{etag}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: etag
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: DeleteLink
    get:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: (id allowed)
          in: path
          name: etag
          required: true
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: LocateLink
  '/cases/{case_etag}/links/{input.etag}':
    patch:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: on return
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: UpdateLink2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                url:
                  type: string
              type: object
        required: true
    put:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: on return
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: UpdateLink
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                url:
                  type: string
              type: object
        required: true
  '/cases/{case_id}/timeline':
    get:
      parameters:
        - in: path
          name: case_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          required: false
          schema:
            type: string
        - in: query
          name: sort
          required: false
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: date_from
          required: false
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          required: false
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: type
          required: false
          schema:
            items:
              enum:
                - chat
                - call
                - email
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesGetTimelineResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseTimeline
      operationId: GetTimeline
  '/cases/{case_id}/timeline/counter':
    get:
      parameters:
        - in: path
          name: case_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesGetTimelineCounterResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CaseTimeline
      operationId: GetTimelineCounter
  '/cases/{etag}':
    delete:
      parameters:
        - description: Unique etag identifier of the case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the deleted case response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: DeleteCase
      summary: RPC method for deleting an existing case by its etag.
    get:
      parameters:
        - description: Unique etag identifier of the case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: LocateCase
      summary: RPC method to retrieve a specific case by its etag identifier.
  '/cases/{input.etag}':
    patch:
      parameters:
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: List of JSON fields to update.
          explode: true
          in: query
          name: x_json_mask
          required: false
          schema:
            items:
              type: string
            type: array
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: UpdateCase2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignee:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required, default from service or set by UI;'
                close:
                  $ref: '#/components/schemas/casesCloseInfo'
                  title: >-
                    create: not required; update: required only when case status
                    goes to the final state
                close_reason:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required;'
                contact_info:
                  title: 'create: not required;'
                  type: string
                description:
                  title: 'create: not required;'
                  type: string
                group:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: required, default is reporter or ui (if empty
                    recognize as anonymous);
                priority:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: not required, default first value from priority
                    lookup
                rate:
                  $ref: '#/components/schemas/casesRateInfo'
                  title: 'only for API, not UI'
                reporter:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/generalLookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/generalLookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: not required, default initial value from status
                    lookup or ui;
                status_condition:
                  $ref: '#/components/schemas/casesStatusCondition'
                subject:
                  title: 'create: required;'
                  type: string
              title: Input data with updated fields.
              type: object
        description: Input data with updated fields.
        required: true
      summary: RPC method for updating an existing case.
    put:
      parameters:
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: List of JSON fields to update.
          explode: true
          in: query
          name: x_json_mask
          required: false
          schema:
            items:
              type: string
            type: array
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: UpdateCase
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignee:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required, default from service or set by UI;'
                close:
                  $ref: '#/components/schemas/casesCloseInfo'
                  title: >-
                    create: not required; update: required only when case status
                    goes to the final state
                close_reason:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required;'
                contact_info:
                  title: 'create: not required;'
                  type: string
                description:
                  title: 'create: not required;'
                  type: string
                group:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: required, default is reporter or ui (if empty
                    recognize as anonymous);
                priority:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: not required, default first value from priority
                    lookup
                rate:
                  $ref: '#/components/schemas/casesRateInfo'
                  title: 'only for API, not UI'
                reporter:
                  $ref: '#/components/schemas/generalLookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/generalLookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/generalLookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/generalLookup'
                  title: >-
                    create: not required, default initial value from status
                    lookup or ui;
                status_condition:
                  $ref: '#/components/schemas/casesStatusCondition'
                subject:
                  title: 'create: required;'
                  type: string
              title: Input data with updated fields.
              type: object
        description: Input data with updated fields.
        required: true
      summary: RPC method for updating an existing case.
  '/cases/{input.primary_case.id}/related/{etag}':
    patch:
      parameters:
        - in: path
          name: input.primary_case.id
          required: true
          schema:
            format: int64
            type: string
        - description: Identifier of the related case to update.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: UpdateRelatedCase2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary_case:
                  description: Primary case details.
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                  type: object
                related_case:
                  $ref: '#/components/schemas/generalLookup'
                  description: Related case details.
                relation_type:
                  $ref: '#/components/schemas/casesRelationType'
                  description: Relation type.
              title: Input data for the related case update.
              type: object
        description: Input data for the related case update.
        required: true
      summary: Update an existing related case
    put:
      parameters:
        - in: path
          name: input.primary_case.id
          required: true
          schema:
            format: int64
            type: string
        - description: Identifier of the related case to update.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: UpdateRelatedCase
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary_case:
                  description: Primary case details.
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                  type: object
                related_case:
                  $ref: '#/components/schemas/generalLookup'
                  description: Related case details.
                relation_type:
                  $ref: '#/components/schemas/casesRelationType'
                  description: Relation type.
              title: Input data for the related case update.
              type: object
        description: Input data for the related case update.
        required: true
      summary: Update an existing related case
  '/cases/{primary_case_etag}/related':
    get:
      parameters:
        - description: Primary Case ID for which related cases are requested.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of related cases per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Query string for search.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Sorting order.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Fields to return for each related case.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Filter by ids
          explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: ListRelatedCases
      summary: List all related cases for a specific case
    post:
      parameters:
        - description: Primary case details.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: CreateRelatedCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesCreateInputRelatedCase'
        description: Input data for the related case.
        required: true
      summary: Create a new related case
  '/cases/{primary_case_etag}/related/{etag}':
    get:
      parameters:
        - description: Primary case identifier.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Identifier of the related case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to return in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesRelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: LocateRelatedCase
      summary: Retrieve a specific related case by ID
  '/close_reason_groups/{close_reason_group_id}/close_reasons':
    get:
      parameters:
        - description: Close reason group ID filter
          in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReasonList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: ListCloseReasons
      summary: Retrieve a list of close reasons or search close reasons
    post:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: CreateCloseReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCloseReason'
        required: true
      summary: Create a new close reason
  '/close_reason_groups/{close_reason_group_id}/close_reasons/{id}':
    delete:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: DeleteCloseReason
      summary: Delete a close reason
    get:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateCloseReasonResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: LocateCloseReason
      summary: Locate a close reason by ID
    patch:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: UpdateCloseReason2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCloseReason'
        required: true
      summary: Update an existing close reason
    put:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: UpdateCloseReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCloseReason'
        required: true
      summary: Update an existing close reason
  '/contacts/{contact_id}/cases':
    get:
      parameters:
        - description: Contact ID for filtering cases.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of results per page.
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Query string for searching cases.
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: List of specific case IDs to retrieve.
          explode: true
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: 'Sorting criteria (e.g., field:asc).'
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Key-value pairs for additional filtering.
          explode: true
          in: query
          name: filters
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesCaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: SearchCases2
      summary: RPC method for searching cases.
  '/slas/{sla_id}/sla_condition':
    post:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: CreateSLACondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSLACondition'
        required: true
      summary: Create a new SLACondition
  '/slas/{sla_id}/sla_condition/{id}':
    delete:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: DeleteSLACondition
      summary: Delete an SLACondition
    get:
      parameters:
        - description: Unique identifier of the SLACondition
          in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - description: Unique identifier of the SLACondition
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateSLAConditionResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: LocateSLACondition
      summary: Locate an SLACondition by ID
    patch:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: UpdateSLACondition2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSLACondition'
        required: true
      summary: Update an existing SLACondition
    put:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: UpdateSLACondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputSLACondition'
        required: true
      summary: Update an existing SLACondition
  '/slas/{sla_id}/sla_conditions':
    get:
      parameters:
        - description: Filter by SLA Id
          in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
        - description: Filter by SLACondition Id.
          in: query
          name: sla_condition_id
          required: false
          schema:
            format: int64
            type: string
        - description: filter by priority id
          in: query
          name: priority_id
          required: false
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesSLAConditionList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: ListSLAConditions
      summary: Retrieve a list of SLAConditions or search SLACondition conditions
  '/statuses/{status_id}/status':
    get:
      parameters:
        - description: Filter by Status Id.
          in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          required: false
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          required: false
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusConditionList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: ListStatusConditions
      summary: Retrieve a list of statuses or search status conditions
    post:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: CreateStatusCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputCreateStatusCondition'
        required: true
      summary: Create a new status condition
  '/statuses/{status_id}/status/{id}':
    delete:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: DeleteStatusCondition
      summary: Delete a status condition
    get:
      parameters:
        - description: ID of the status to be located
          in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - description: ID of the status condition to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesLocateStatusConditionResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: LocateStatusCondition
      summary: Locate a status condition by ID
    patch:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: UpdateStatusCondition2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputStatusCondition'
        required: true
      summary: Update an existing status condition
    put:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/casesStatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: UpdateStatusCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casesInputStatusCondition'
        required: true
      summary: Update an existing status condition
components:
  requestBodies:
    UpdateCaseInput:
      content:
        application/json:
          schema:
            properties:
              assignee:
                $ref: '#/components/schemas/generalLookup'
                title: 'create: not required, default from service or set by UI;'
              close:
                $ref: '#/components/schemas/casesCloseInfo'
                title: >-
                  create: not required; update: required only when case status
                  goes to the final state
              close_reason:
                $ref: '#/components/schemas/generalLookup'
                title: 'create: not required;'
              contact_info:
                title: 'create: not required;'
                type: string
              description:
                title: 'create: not required;'
                type: string
              group:
                $ref: '#/components/schemas/generalLookup'
                title: 'create: not required, default from service or set by UI;'
              impacted:
                $ref: '#/components/schemas/generalLookup'
                title: >-
                  create: required, default is reporter or ui (if empty
                  recognize as anonymous);
              priority:
                $ref: '#/components/schemas/generalLookup'
                title: 'create: not required, default first value from priority lookup'
              rate:
                $ref: '#/components/schemas/casesRateInfo'
                title: 'only for API, not UI'
              reporter:
                $ref: '#/components/schemas/generalLookup'
                title: 'create: required (if empty recognize as anonymous contact);'
              service:
                $ref: '#/components/schemas/generalLookup'
                title: on this field base many other readonly fields on return
              source:
                $ref: '#/components/schemas/generalLookup'
                title: source of the case
              status:
                $ref: '#/components/schemas/generalLookup'
                title: >-
                  create: not required, default initial value from status lookup
                  or ui;
              status_condition:
                $ref: '#/components/schemas/casesStatusCondition'
              subject:
                title: 'create: required;'
                type: string
            title: Input data with updated fields.
            type: object
      description: Input data with updated fields.
      required: true
    UpdateCommentInput:
      content:
        application/json:
          schema:
            example:
              text: My new comment
            properties:
              text:
                description: Content of the comment.
                type: string
            title: Data for the comment to update.
            type: object
      description: Data for the comment to update.
      required: true
    UpdateLinkInput:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
              url:
                type: string
            type: object
      required: true
    UpdateRelatedCaseInput:
      content:
        application/json:
          schema:
            properties:
              primary_case:
                description: Primary case details.
                properties:
                  name:
                    type: string
                title: Primary case details.
                type: object
              related_case:
                $ref: '#/components/schemas/generalLookup'
                description: Related case details.
              relation_type:
                $ref: '#/components/schemas/casesRelationType'
                description: Relation type.
            title: Input data for the related case update.
            type: object
      description: Input data for the related case update.
      required: true
    casesInputCatalog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputCatalog'
      description: Input data for updating the catalog
      required: true
    casesInputCloseReason:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputCloseReason'
      required: true
    casesInputCloseReasonGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputCloseReasonGroup'
      required: true
    casesInputPriority:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputPriority'
      required: true
    casesInputSLA:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputSLA'
      required: true
    casesInputSLACondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputSLACondition'
      required: true
    casesInputService:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputService'
      description: Input data for updating the service
      required: true
    casesInputSource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputSource'
      required: true
    casesInputStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputStatus'
      required: true
    casesInputStatusCondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casesInputStatusCondition'
      required: true
  schemas:
    casesAttachment:
      properties:
        id:
          format: int64
          type: string
        mime:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        url:
          type: string
      type: object
    casesCallEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        files:
          items:
            $ref: '#/components/schemas/casesCallFile'
            type: object
          type: array
        flow_scheme:
          $ref: '#/components/schemas/generalLookup'
        gateway:
          $ref: '#/components/schemas/generalLookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/generalLookup'
        total_duration:
          format: int64
          type: string
        transcripts:
          items:
            $ref: '#/components/schemas/casesTranscriptLookup'
            type: object
          type: array
      type: object
    casesCallFile:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        start_at:
          format: int64
          type: string
        stop_at:
          format: int64
          type: string
      type: object
    casesCase:
      description: Message representing a case.
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          description: Assignee responsible for resolving the case.
        author:
          $ref: '#/components/schemas/generalLookup'
          description: Author or reporter of the case.
        close:
          $ref: '#/components/schemas/casesCloseInfo'
          description: Close information (if applicable).
        close_reason_group:
          $ref: '#/components/schemas/generalLookup'
          description: 'Close reason group, immutable once set.'
        comments:
          $ref: '#/components/schemas/casesCaseCommentList'
          description: List of comments on the case.
        contact_info:
          description: Contact information for the case.
          type: string
        created_at:
          description: Creation timestamp (in milliseconds since Unix epoch).
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          description: Creator of the case.
        description:
          description: Detailed description of the case.
          type: string
        etag:
          description: Unique etag identifier.
          type: string
        files:
          $ref: '#/components/schemas/casesCaseFileList'
          description: List of attached files.
        group:
          $ref: '#/components/schemas/generalExtendedLookup'
          description: Group associated with the case.
        id:
          description: Unique case ID.
          format: int64
          type: string
        impacted:
          $ref: '#/components/schemas/generalLookup'
          description: Impacted contact (defaults to reporter if null).
        links:
          $ref: '#/components/schemas/casesCaseLinkList'
          description: List of attached links.
        name:
          description: Name of the case (may serve as an ID in docs).
          type: string
        planned_reaction_at:
          description: Planned reaction time (in milliseconds).
          format: int64
          type: string
        planned_resolve_at:
          description: Planned resolution time (in milliseconds).
          format: int64
          type: string
        priority:
          $ref: '#/components/schemas/casesPriority'
          description: Priority level of the case.
        rate:
          $ref: '#/components/schemas/casesRateInfo'
          description: Rating information.
        related:
          $ref: '#/components/schemas/casesRelatedCaseList'
          description: List of related cases.
        reporter:
          $ref: '#/components/schemas/generalLookup'
          description: Reporter of the issue (null if anonymous).
        role_ids:
          items:
            format: int64
            type: string
          title: System field
          type: array
        service:
          $ref: '#/components/schemas/generalLookup'
          description: Service associated with the case.
        sla:
          $ref: '#/components/schemas/generalLookup'
          description: SLA associated with the case.
        sla_condition:
          $ref: '#/components/schemas/generalLookup'
          description: List of SLA conditions.
        source:
          $ref: '#/components/schemas/casesSourceTypeLookup'
          description: Source of the case.
        status:
          $ref: '#/components/schemas/generalLookup'
          description: Current status of the case.
        status_condition:
          $ref: '#/components/schemas/casesStatusCondition'
          description: Status condition from status lookup.
        subject:
          description: Subject of the case.
          type: string
        timing:
          $ref: '#/components/schemas/casesTimingInfo'
          description: SLA timing details.
        updated_at:
          description: Last update timestamp (in milliseconds since Unix epoch).
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          description: Last updater of the case.
        ver:
          description: Version number of the case.
          format: int32
          type: integer
      type: object
    casesCaseComment:
      description: Represents a comment associated with a case.
      properties:
        author:
          $ref: '#/components/schemas/generalLookup'
          description: Contact-author of the comment.
        can_edit:
          description: Indicates if the comment can be edited by current user.
          type: boolean
        case_id:
          description: Optional relation to the associated case.
          format: int64
          type: string
        created_at:
          description: Timestamp (in milliseconds) of when the comment was created.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          description: User who created the comment.
        edited:
          description: >-
            Indicates if the comment was edited; true if created_at <
            updated_at.
          type: boolean
        etag:
          title: entity tag representing id + ver
          type: string
        id:
          description: 'Main identifier for read, update, and delete operations.'
          format: int64
          type: string
        role_ids:
          items:
            format: int64
            type: string
          title: System field
          type: array
        text:
          description: The content of the comment.
          type: string
        updated_at:
          description: Timestamp (in milliseconds) of the last update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          description: User who last updated the comment.
        ver:
          description: 'Version number of the comment, used for concurrency control.'
          format: int32
          type: integer
      type: object
    casesCaseCommentList:
      description: Contains a paginated list of comments.
      properties:
        items:
          description: List of comments on the current page.
          items:
            $ref: '#/components/schemas/casesCaseComment'
            type: object
          type: array
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    casesCaseCommunication:
      description: Represents a single case communication.
      properties:
        communication_id:
          description: External communication ID.
          type: string
        communication_type:
          $ref: '#/components/schemas/casesCaseCommunicationsTypes'
          description: 'Type of the communication (e.g., Chat, Call).'
        etag:
          description: Version of the communication record.
          type: string
        id:
          description: Database ID of the communication.
          format: int64
          type: string
        ver:
          description: Version of the communication record.
          format: int32
          type: integer
      type: object
    casesCaseCommunicationsTypes:
      default: NO_TYPE
      description: |-
        Enum to define types of case communications.

         - NO_TYPE: Default value, no type specified.
         - COMMUNICATION_CHAT: Communication type: Chat.
         - COMMUNICATION_CALL: Communication type: Call.
         - COMMUNICATION_EMAIL: Communication type: Email.
      enum:
        - NO_TYPE
        - COMMUNICATION_CHAT
        - COMMUNICATION_CALL
        - COMMUNICATION_EMAIL
      type: string
    casesCaseFileList:
      description: Contains a list of case files with pagination.
      properties:
        items:
          description: List of case files.
          items:
            $ref: '#/components/schemas/casesFile'
            type: object
          type: array
        next:
          description: Indicator if there is a next page.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    casesCaseLink:
      properties:
        author:
          $ref: '#/components/schemas/generalLookup'
          title: contact-author calculated on-flight (optional)
        created_at:
          format: int64
          title: unixmilli
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
        etag:
          title: 'main field required for read, update and delete'
          type: string
        id:
          format: int64
          type: string
        name:
          title: link name (optional)
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
        url:
          title: URL
          type: string
        ver:
          format: int32
          type: integer
      type: object
    casesCaseLinkList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesCaseLink'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int64
          type: string
      type: object
    casesCaseList:
      description: Response message containing a list of cases.
      properties:
        items:
          description: List of cases.
          items:
            $ref: '#/components/schemas/casesCase'
            type: object
          type: array
        next:
          description: Flag indicating if there are more pages.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    casesCaseTimelineEventType:
      default: chat
      enum:
        - chat
        - call
        - email
      type: string
    casesCatalog:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/generalLookup'
          title: Close reason group associated with the catalog
        code:
          title: Code for external integrations (optional)
          type: string
        created_at:
          format: int64
          title: Timestamp when the catalog was created
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: User who created the catalog
        description:
          title: Description of the catalog (optional)
          type: string
        id:
          format: int64
          title: Unique identifier for the catalog
          type: string
        name:
          title: Name of the catalog
          type: string
        prefix:
          title: Prefix used for case identification (optional)
          type: string
        searched:
          title: flag showing whether the catalog was searched
          type: boolean
        service:
          items:
            $ref: '#/components/schemas/casesService'
            type: object
          title: Service associated with the catalog
          type: array
        skills:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: Skills associated with the catalog
          type: array
        sla:
          $ref: '#/components/schemas/generalLookup'
          title: SLA associated with the catalog
        state:
          title: 'State of the catalog (true for active, false for inactive)'
          type: boolean
        status:
          $ref: '#/components/schemas/generalLookup'
          title: Status associated with the catalog
        teams:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: Teams associated with the catalog
          type: array
        updated_at:
          format: int64
          title: Timestamp when the catalog was last updated
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: User who last updated the catalog
      title: Catalog message represents the main catalog entity with metadata
      type: object
    casesCatalogList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesCatalog'
            type: object
          title: List of catalog items
          type: array
        next:
          title: Indicates if there are more pages
          type: boolean
        page:
          format: int32
          title: Page number for pagination
          type: integer
      title: CatalogList message contains a list of catalogs with pagination
      type: object
    casesChatEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        flow_scheme:
          $ref: '#/components/schemas/generalLookup'
        gateway:
          $ref: '#/components/schemas/generalExtendedLookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/generalLookup'
      type: object
    casesCloseInfo:
      description: Message representing close information for a case.
      properties:
        close_reason:
          $ref: '#/components/schemas/generalLookup'
          description: Lookup for the close reason.
        close_result:
          description: Result or reason for closing the case.
          type: string
      type: object
    casesCloseReason:
      properties:
        close_reason_group_id:
          format: int64
          title: Close Reason Group ID of the close reason
          type: string
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the close reason
        description:
          title: Description of the close reason
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the close reason
      title: CloseReason message represents a close reason entity with metadata
      type: object
    casesCloseReasonGroup:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason group
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the close reason group
        description:
          title: Description of the close reason group
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason group
          type: string
        name:
          title: Name of the close reason group
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason group
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the close reason group
      title: >-
        CloseReasonGroup message represents a close reason group entity with
        metadata
      type: object
    casesCloseReasonGroupList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesCloseReasonGroup'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        CloseReasonGroupList message contains a list of CloseReasonGroup items
        with pagination
      type: object
    casesCloseReasonList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesCloseReason'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        CloseReasonList message contains a list of CloseReason items with
        pagination
      type: object
    casesCreateCaseCloseInput:
      description: Structure for close information when a case is closed.
      properties:
        close_reason:
          $ref: '#/components/schemas/generalLookup'
          description: Close reason ID from lookup.
        close_result:
          description: Comment or reason for closing the case.
          type: string
      type: object
    casesCreateCaseRelatedCaseInput:
      description: Structure for related cases input when creating a case.
      properties:
        etag:
          description: Etag of the related case.
          type: string
        related_to:
          description: Identifier of the related case.
          type: string
        relation_type:
          $ref: '#/components/schemas/casesRelationType'
          description: 'Type of relation (e.g., duplicate, linked).'
      type: object
    casesCreateInputRelatedCase:
      description: Input for creating a related case.
      properties:
        related_case:
          $ref: '#/components/schemas/generalLookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/casesRelationType'
          description: Relation type between the cases.
      type: object
    casesDayTimeline:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          type: string
        day_timestamp:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
        items:
          items:
            $ref: '#/components/schemas/casesEvent'
            type: object
          type: array
      type: object
    casesEmailEvent:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/casesAttachment'
            type: object
          type: array
        body:
          title: plain text of email
          type: string
        cc:
          items:
            type: string
          title: array of ccs (email addresses)
          type: array
        from:
          items:
            type: string
          title: array of senders (email addresses)
          type: array
        html:
          title: html body of email
          type: string
        id:
          type: string
        is_detailed:
          title: reserved for the open
          type: boolean
        is_inbound:
          title: inbound/outbound email
          type: boolean
        owner:
          $ref: '#/components/schemas/generalLookup'
          title: Agent who sent/accepted
        profile:
          $ref: '#/components/schemas/generalLookup'
          title: email profile
        sender:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
        subject:
          type: string
        to:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
      type: object
    casesEvent:
      properties:
        call:
          $ref: '#/components/schemas/casesCallEvent'
        chat:
          $ref: '#/components/schemas/casesChatEvent'
        created_at:
          format: int64
          type: string
        email:
          $ref: '#/components/schemas/casesEmailEvent'
        type:
          $ref: '#/components/schemas/casesCaseTimelineEventType'
      type: object
    casesFile:
      description: Metadata for a file associated with a case.
      properties:
        author:
          $ref: '#/components/schemas/generalLookup'
        created_at:
          description: Creation timestamp in Unix milliseconds.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          description: Creator of the file.
        id:
          description: Storage file ID.
          format: int64
          type: string
        mime:
          description: MIME type of the file.
          type: string
        name:
          description: File name.
          type: string
        size:
          description: File size in bytes.
          format: int64
          type: string
        url:
          type: string
      type: object
    casesGetTimelineCounterResponse:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          title: defined event types
          type: string
        date_from:
          format: int64
          title: filter dates
          type: string
        date_to:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
      type: object
    casesGetTimelineResponse:
      properties:
        days:
          items:
            $ref: '#/components/schemas/casesDayTimeline'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    casesInputCase:
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          title: 'create: not required, default from service or set by UI;'
        close:
          $ref: '#/components/schemas/casesCloseInfo'
          title: >-
            create: not required; update: required only when case status goes to
            the final state
        close_reason:
          $ref: '#/components/schemas/generalLookup'
          title: 'create: not required;'
        contact_info:
          title: 'create: not required;'
          type: string
        description:
          title: 'create: not required;'
          type: string
        etag:
          type: string
        group:
          $ref: '#/components/schemas/generalLookup'
          title: 'create: not required, default from service or set by UI;'
        impacted:
          $ref: '#/components/schemas/generalLookup'
          title: >-
            create: required, default is reporter or ui (if empty recognize as
            anonymous);
        priority:
          $ref: '#/components/schemas/generalLookup'
          title: 'create: not required, default first value from priority lookup'
        rate:
          $ref: '#/components/schemas/casesRateInfo'
          title: 'only for API, not UI'
        reporter:
          $ref: '#/components/schemas/generalLookup'
          title: 'create: required (if empty recognize as anonymous contact);'
        service:
          $ref: '#/components/schemas/generalLookup'
          title: on this field base many other readonly fields on return
        source:
          $ref: '#/components/schemas/generalLookup'
          title: source of the case
        status:
          $ref: '#/components/schemas/generalLookup'
          title: >-
            create: not required, default initial value from status lookup or
            ui;
        status_condition:
          $ref: '#/components/schemas/casesStatusCondition'
        subject:
          title: 'create: required;'
          type: string
      type: object
    casesInputCaseComment:
      description: Input structure for creating or updating a case comment.
      example:
        text: My new comment
      properties:
        etag:
          description: Identifier for the comment.
          type: string
        text:
          description: Content of the comment.
          type: string
      type: object
    casesInputCaseCommunication:
      description: Represents input data for creating or linking a communication.
      properties:
        communication_id:
          description: External communication ID.
          type: string
        communication_type:
          $ref: '#/components/schemas/casesCaseCommunicationsTypes'
          description: Type of the communication.
      type: object
    casesInputCaseLink:
      properties:
        etag:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    casesInputCatalog:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/generalLookup'
          title: Close reason group ID associated with the catalog
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the catalog (optional)
          type: string
        name:
          title: Name of the catalog (required)
          type: string
        prefix:
          title: Prefix for case identification (optional)
          type: string
        skills:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: List of skill IDs associated with the catalog
          type: array
        sla:
          $ref: '#/components/schemas/generalLookup'
          title: SLA ID associated with the catalog
        state:
          title: 'State of the catalog (true for active, false for inactive)'
          type: boolean
        status:
          $ref: '#/components/schemas/generalLookup'
          title: Status ID associated with the catalog
        teams:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: List of team IDs associated with the catalog
          type: array
      title: >-
        InputCatalog message contains the fields for creating or updating a
        catalog
      type: object
    casesInputCloseReason:
      properties:
        description:
          title: Description of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
      title: InputCloseReason message for inputting close reason data
      type: object
    casesInputCloseReasonGroup:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    casesInputCreateCase:
      description: Input structure for creating a new case.
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          description: Optional assignee ID.
        close:
          $ref: '#/components/schemas/casesCreateCaseCloseInput'
          description: Optional close information.
        close_reason_group:
          $ref: '#/components/schemas/generalLookup'
          description: Optional close reason.
        contact_info:
          description: Optional contact information.
          type: string
        description:
          description: Optional description of the case.
          type: string
        group:
          $ref: '#/components/schemas/generalLookup'
          description: Optional group ID.
        impacted:
          $ref: '#/components/schemas/generalLookup'
          description: 'Required impacted user ID (default: reporter).'
        links:
          description: List of links attached to the case.
          items:
            $ref: '#/components/schemas/casesInputCaseLink'
            type: object
          type: array
        priority:
          $ref: '#/components/schemas/generalLookup'
          description: Optional priority level.
        rate:
          $ref: '#/components/schemas/casesRateInfo'
          description: API-only rating information.
        related:
          description: List of related cases.
          items:
            $ref: '#/components/schemas/casesCreateCaseRelatedCaseInput'
            type: object
          type: array
        reporter:
          $ref: '#/components/schemas/generalLookup'
          description: 'Required reporter ID (if empty, anonymous contact).'
        service:
          $ref: '#/components/schemas/generalLookup'
          description: Service ID (affects many other readonly fields).
        source:
          $ref: '#/components/schemas/generalLookup'
          description: Source of the case.
        status:
          $ref: '#/components/schemas/generalLookup'
          description: Initial case status (default from lookup or UI).
        subject:
          description: Required subject of the case.
          type: string
      type: object
    casesInputCreateService:
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          title: Assignee ID responsible for the service
        catalog_id:
          format: int64
          title: ID of the root catalog
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/generalExtendedLookup'
          title: Group ID responsible for the service
        name:
          title: Name of the service (required)
          type: string
        root_id:
          format: int64
          title: Parent catalog ID (required)
          type: string
        sla:
          $ref: '#/components/schemas/generalLookup'
          title: SLA ID associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
      type: object
    casesInputCreateStatusCondition:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    casesInputPriority:
      properties:
        color:
          title: Color of the priority
          type: string
        description:
          title: Description of the priority
          type: string
        name:
          title: Name of the priority
          type: string
      title: InputPriority message for creating a new priority
      type: object
    casesInputRelatedCase:
      description: Input for creating or updating a related case.
      properties:
        primary_case:
          $ref: '#/components/schemas/generalLookup'
          description: Primary case details.
        related_case:
          $ref: '#/components/schemas/generalLookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/casesRelationType'
          description: Relation type.
      type: object
    casesInputSLA:
      properties:
        calendar:
          $ref: '#/components/schemas/generalLookup'
          title: Calendar ID from the "Calendars" dictionary
        description:
          title: Description of the SLA
          type: string
        name:
          title: Name of the SLA
          type: string
        reaction_time:
          format: int64
          title: Reaction time
          type: string
        resolution_time:
          format: int64
          title: Resolution time
          type: string
        valid_from:
          format: int64
          title: Validity period for the SLA
          type: string
        valid_to:
          format: int64
          type: string
      title: InputSLA message for inputting SLA data
      type: object
    casesInputSLACondition:
      properties:
        name:
          type: string
        priorities:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: List of priority IDs for creation
          type: array
        reaction_time:
          format: int64
          type: string
        resolution_time:
          format: int64
          type: string
      title: InputSLACondition message for inputting SLACondition data
      type: object
    casesInputService:
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          title: Assignee ID responsible for the service
        catalog_id:
          format: int64
          title: The parent catalog (required)
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/generalExtendedLookup'
          title: Group ID responsible for the service
        name:
          title: Name of the service (required)
          type: string
        root_id:
          format: int64
          title: ID of the root catalog
          type: string
        sla:
          $ref: '#/components/schemas/generalLookup'
          title: SLA ID associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
      title: >-
        InputService message contains the fields for creating or updating a
        service
      type: object
    casesInputSource:
      properties:
        description:
          description: The description of the source.
          type: string
        name:
          description: The name of the source.
          type: string
        type:
          $ref: '#/components/schemas/casesSourceType'
          description: The source type of the source.
      type: object
    casesInputStatus:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    casesInputStatusCondition:
      properties:
        description:
          title: Description of the status condition
          type: string
        final:
          title: Final status condition
          type: boolean
        initial:
          title: Initial status condition
          type: boolean
        name:
          title: Name of the status condition
          type: string
      title: InputStatusCondition message for inputting status condition data
      type: object
    casesLinkCommunicationResponse:
      description: Response message after linking communications to a case.
      properties:
        data:
          description: List of linked communications.
          items:
            $ref: '#/components/schemas/casesCaseCommunication'
            type: object
          type: array
      type: object
    casesListCommunicationsResponse:
      description: Response message for listing communications linked to a case.
      properties:
        data:
          description: List of communications.
          items:
            $ref: '#/components/schemas/casesCaseCommunication'
            type: object
          type: array
        next:
          type: boolean
        page:
          description: Current page number.
          format: int32
          type: integer
      type: object
    casesLocateCatalogResponse:
      properties:
        catalog:
          $ref: '#/components/schemas/casesCatalog'
          title: The located catalog
      title: LocateCatalogResponse message contains a single catalog entity
      type: object
    casesLocateCloseReasonGroupResponse:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/casesCloseReasonGroup'
      title: >-
        LocateCloseReasonGroupResponse message contains a single close reason
        group entity
      type: object
    casesLocateCloseReasonResponse:
      properties:
        close_reason:
          $ref: '#/components/schemas/casesCloseReason'
      title: LocateCloseReasonResponse message contains a single close reason entity
      type: object
    casesLocatePriorityResponse:
      properties:
        priority:
          $ref: '#/components/schemas/casesPriority'
      title: LocatePriorityResponse message contains a single priority entity
      type: object
    casesLocateSLAConditionResponse:
      properties:
        sla_condition:
          $ref: '#/components/schemas/casesSLACondition'
      title: LocateSLAConditionResponse message contains a single SLACondition entity
      type: object
    casesLocateSLAResponse:
      properties:
        sla:
          $ref: '#/components/schemas/casesSLA'
      title: LocateSLAResponse message contains a single SLA entity
      type: object
    casesLocateServiceResponse:
      properties:
        service:
          $ref: '#/components/schemas/casesService'
          title: The located service
      title: LocateServiceResponse message contains a single service entity
      type: object
    casesLocateSourceResponse:
      description: Response message for locating a source.
      properties:
        source:
          $ref: '#/components/schemas/casesSource'
          description: The located source.
      type: object
    casesLocateStatusConditionResponse:
      properties:
        status:
          $ref: '#/components/schemas/casesStatusCondition'
      title: LocateStatusConditionResponse message contains a single status entity
      type: object
    casesLocateStatusResponse:
      properties:
        status:
          $ref: '#/components/schemas/webitelcasesStatus'
      title: LocateStatusResponse message contains a single status entity
      type: object
    casesPriority:
      properties:
        color:
          title: Color of the priority
          type: string
        created_at:
          format: int64
          title: CreatedAt timestamp of the priority
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the priority
        description:
          title: Description of the priority
          type: string
        id:
          format: int64
          title: Unique identifier of the priority
          type: string
        name:
          title: Name of the priority
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the priority
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the priority
      title: Priority message represents a priority entity with metadata
      type: object
    casesPriorityList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesPriority'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: PriorityList message contains a list of Priority items with pagination
      type: object
    casesRateInfo:
      description: Message representing rating information.
      properties:
        rating:
          description: Rating value.
          format: int64
          type: string
        rating_comment:
          description: Optional comment for the rating.
          type: string
      type: object
    casesRelatedCase:
      description: Represents a related case with its relationship details.
      properties:
        created_at:
          description: Timestamp (in milliseconds) of when the relation was created.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          description: User who created the relation.
        etag:
          description: Etag for the related case entity.
          type: string
        id:
          description: Unique identifier for the related case.
          format: int64
          type: string
        primary_case:
          $ref: '#/components/schemas/casesRelatedCaseLookup'
          description: Primary case details.
        related_case:
          $ref: '#/components/schemas/casesRelatedCaseLookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/casesRelationType'
          description: Relation type between cases.
        updated_at:
          description: Timestamp (in milliseconds) of the last update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          description: User who last updated the relation.
        ver:
          description: 'Version number of the related case, used for concurrency control.'
          format: int32
          type: integer
      type: object
    casesRelatedCaseList:
      description: Paginated list of related cases.
      properties:
        data:
          description: List of related cases on the current page.
          items:
            $ref: '#/components/schemas/casesRelatedCase'
            type: object
          type: array
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    casesRelatedCaseLookup:
      description: RelatedCaseLookup is created specifically to include the subject field.
      properties:
        color:
          title: colour ( calculated by attached priority )
          type: string
        etag:
          type: string
        id:
          format: int64
          title: id
          type: string
        name:
          title: name
          type: string
        subject:
          title: subject
          type: string
        ver:
          format: int32
          title: ver
          type: integer
      type: object
    casesRelationType:
      default: RELATION_TYPE_UNSPECIFIED
      description: Enum for relation types between cases.
      enum:
        - RELATION_TYPE_UNSPECIFIED
        - DUPLICATES
        - IS_DUPLICATED_BY
        - BLOCKS
        - IS_BLOCKED_BY
        - CAUSES
        - IS_CAUSED_BY
        - IS_CHILD_OF
        - IS_PARENT_OF
        - RELATES_TO
      type: string
    casesSLA:
      properties:
        calendar:
          $ref: '#/components/schemas/generalLookup'
          title: Calendar ID from the "Calendars" dictionary - required
        created_at:
          format: int64
          title: CreatedAt timestamp of the SLA
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the SLA
        description:
          title: Description of the SLA - optional
          type: string
        id:
          format: int64
          title: Unique identifier of the SLA
          type: string
        name:
          title: Name of the SLA - required
          type: string
        reaction_time:
          format: int64
          title: Reaction time - required
          type: string
        resolution_time:
          format: int64
          title: Resolution time - required
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the SLA
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the SLA
        valid_from:
          format: int64
          title: Validity period for the SLA - optional
          type: string
        valid_to:
          format: int64
          type: string
      title: SLA message represents an SLA entity with metadata
      type: object
    casesSLACondition:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the SLACondition
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the SLACondition
        id:
          format: int64
          title: Unique identifier of the SLACondition
          type: string
        name:
          title: Name of the SLACondition - required
          type: string
        priorities:
          items:
            $ref: '#/components/schemas/generalLookup'
            type: object
          title: >-
            Priorities associated with the SLACondition - fetched as Lookup
            entities [ Priority name + ID ]
          type: array
        reaction_time:
          format: int64
          title: Reaction time - required
          type: string
        resolution_time:
          format: int64
          title: Resolution time - required
          type: string
        sla_id:
          format: int64
          title: SLA ID associated with the SLACondition
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the SLACondition
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the SLACondition
      title: SLACondition message represents an SLACondition entity with metadata
      type: object
    casesSLAConditionList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesSLACondition'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        SLAConditionList message contains a list of SLACondition items with
        pagination
      type: object
    casesSLAList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesSLA'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: SLAList message contains a list of SLA items with pagination
      type: object
    casesService:
      properties:
        assignee:
          $ref: '#/components/schemas/generalLookup'
          title: Assignee responsible for the service
        catalog_id:
          format: int64
          title: Catalogs associated with the service
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        created_at:
          format: int64
          title: Timestamp when the service was created
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: User who created the service
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/generalExtendedLookup'
          title: Group responsible for the service
        id:
          format: int64
          title: Unique identifier for the service
          type: string
        name:
          title: Name of the service
          type: string
        root_id:
          format: int64
          title: ID of the parent catalog
          type: string
        searched:
          title: flag showing whether the catalog was searched
          type: boolean
        service:
          items:
            $ref: '#/components/schemas/casesService'
            type: object
          title: Service associated with the service
          type: array
        sla:
          $ref: '#/components/schemas/generalLookup'
          title: SLA associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
        updated_at:
          format: int64
          title: Timestamp when the service was last updated
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: User who last updated the service
      title: Service message represents a service entity within a catalog
      type: object
    casesServiceList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesService'
            type: object
          title: List of service items
          type: array
        next:
          title: Indicates if there are more pages
          type: boolean
        page:
          format: int32
          title: Page number for pagination
          type: integer
      title: ServiceList message contains a list of services with pagination
      type: object
    casesSource:
      description: Represents a source entity in the contact system.
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the source
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the source
        description:
          title: Description of the source
          type: string
        id:
          format: int64
          title: Unique identifier of the source
          type: string
        name:
          description: Case Source description goes here
          title: Case Source name goes here
          type: string
        type:
          $ref: '#/components/schemas/casesSourceType'
          title: Source type of the source
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the source
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the source
      required:
        - 'true'
      type: object
    casesSourceList:
      description: A list of sources.
      properties:
        items:
          description: List of sources.
          items:
            $ref: '#/components/schemas/casesSource'
            type: object
          type: array
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          format: int32
          type: integer
      type: object
    casesSourceType:
      default: TYPE_UNSPECIFIED
      description: |-
        Represents a source type for the source entity.

         - TYPE_UNSPECIFIED: Unspecified source type.
         - CALL: Phone call source type.
         - CHAT: Chat source type.
         - SOCIAL_MEDIA: Social media source type.
         - EMAIL: Email source type.
         - API: API source type.
         - MANUAL: Manual source type.
      enum:
        - TYPE_UNSPECIFIED
        - CALL
        - CHAT
        - SOCIAL_MEDIA
        - EMAIL
        - API
        - MANUAL
      type: string
    casesSourceTypeLookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/casesSourceType'
      type: object
    casesStatusCondition:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the status condition
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the status condition
        description:
          title: Description of the status condition
          type: string
        final:
          title: Final status condition
          type: boolean
        id:
          format: int64
          title: Unique identifier of the status condition
          type: string
        initial:
          title: Initial status condition
          type: boolean
        name:
          title: Name of the status condition
          type: string
        status_id:
          format: int64
          title: Status ID of the status condition
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the status condition
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the status condition
      title: StatusCondition message represents a status entity with metadata
      type: object
    casesStatusConditionList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/casesStatusCondition'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        StatusConditionList message contains a list of StatusCondition items
        with pagination
      type: object
    casesStatusList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitelcasesStatus'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: StatusList message contains a list of Status items with pagination
      type: object
    casesTimingInfo:
      description: Message representing SLA timing information.
      properties:
        difference_in_reaction:
          description: Difference between actual and planned reaction time.
          format: int64
          type: string
        difference_in_resolve:
          description: Difference between actual and planned resolution time.
          format: int64
          type: string
        reacted_at:
          description: Actual reaction timestamp (in milliseconds).
          format: int64
          type: string
        resolved_at:
          description: Actual resolution timestamp (in milliseconds).
          format: int64
          type: string
      type: object
    casesTranscriptLookup:
      properties:
        file:
          $ref: '#/components/schemas/generalLookup'
        id:
          format: int64
          type: string
        locale:
          type: string
      type: object
    casesUnlinkCommunicationResponse:
      description: Response message after unlinking a communication from a case.
      properties:
        affected:
          description: Affected rows.
          format: int64
          type: string
      type: object
    generalExtendedLookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    generalLookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    googlerpcStatus:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
            type: object
          type: array
        message:
          type: string
      type: object
    protobufAny:
      additionalProperties: {}
      properties:
        '@type':
          type: string
      type: object
    webitelcasesStatus:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason
          type: string
        created_by:
          $ref: '#/components/schemas/generalLookup'
          title: CreatedBy user of the close reason
        description:
          title: Description of the close reason
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason
          type: string
        updated_by:
          $ref: '#/components/schemas/generalLookup'
          title: UpdatedBy user of the close reason
      title: Status message represents a status entity with metadata
      type: object
tags:
  - name: Services
  - name: CaseComments
  - name: RelatedCases
  - name: CaseFiles
  - name: CaseLinks
  - name: Priorities
  - name: StatusConditions
  - name: Sources
  - name: SLAConditions
  - name: Cases
  - name: CaseCommunications
  - name: CaseTimeline
  - name: Catalogs
  - name: CloseReasons
  - name: CloseReasonGroups
  - name: SLAs
  - name: Statuses

