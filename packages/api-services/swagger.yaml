openapi: 3.0.0
info:
  contact:
    email: support@webitel.com
    name: Webitel
    url: 'https://webitel.com'
  license:
    name: MIT
  title: Webitel API
  version: 24.04.0
servers:
  - url: 'https://dev.webitel.com/api'
paths:
  '/acl/{object.name}/{object.id}':
    get:
      parameters:
        - description: display name
          in: path
          name: object.name
          required: true
          schema:
            type: string
        - description: identifier
          in: path
          name: object.id
          required: true
          schema:
            format: int64
            type: string
        - description: >-
            --- filters ---


            [optional] [FROM] each rule owner is any of role(s) id; user -or-
            role
          explode: true
          in: query
          name: grantor
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: '[optional] [TO] subject role(s) id; user -or- role'
          explode: true
          in: query
          name: grantee
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: '[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)'
          explode: true
          in: query
          name: granted
          schema:
            items:
              type: string
            type: array
        - description: '[optional] [TO] subject.name ILIKE ?q=; user -or- role'
          in: query
          name: q
          schema:
            type: string
        - description: |-
            ----- Select Options -------------------------

            attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            pagedResultsControl

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListAccessResponseV1'
          description: A successful response.
      tags:
        - AccessStore
      operationId: AccessStore_ListDefaultAccess
      summary: 'default: TODO: indicate objclass=default as a default rights repo'
  '/acl/{object.name}/{object.id}/grantor/{grantor}':
    patch:
      parameters:
        - description: display name
          in: path
          name: object.name
          required: true
          schema:
            type: string
        - description: identifier
          in: path
          name: object.id
          required: true
          schema:
            format: int64
            type: string
        - description: '[FOR] creator user/role'
          in: path
          name: grantor
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToggleDefaultAccessResponse'
          description: A successful response.
      tags:
        - AccessStore
      operationId: AccessStore_ToggleDefaultAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.AccessStore.ToggleDefaultAccessBody'
        required: true
      summary: Same as UpdateAccess except for DEFAULT access control system
  /agent/chats:
    get:
      parameters:
        - description: default
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
        - description: filter
          in: query
          name: only_closed
          schema:
            type: boolean
        - in: query
          name: only_unprocessed
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.GetAgentChatsResponse'
          description: A successful response.
      tags:
        - AgentChatService
      operationId: AgentChatService_GetAgentChats
  '/agent/chats/{chat_id}':
    patch:
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.MarkChatProcessedResponse'
          description: A successful response.
      tags:
        - AgentChatService
      operationId: AgentChatService_MarkChatProcessed
  /calendars:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCalendar'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: SearchCalendar
      summary: List of calendar
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: CreateCalendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateCalendarRequest'
        required: true
      summary: Create calendar
  /calendars/timezones:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTimezoneResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: SearchTimezones
      summary: List timezones
  '/calendars/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: DeleteCalendar
      summary: Remove calendar
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: ReadCalendar
      summary: Calendar item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CalendarService
      operationId: UpdateCalendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CalendarService.UpdateCalendarBody'
        required: true
      summary: Update calendar
  /call_center/agents:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: allow_channels
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: supervisor_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: region_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: auditor_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: is_supervisor
          schema:
            type: boolean
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: not_supervisor
          schema:
            type: boolean
        - explode: true
          in: query
          name: user_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: extension
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: not_team_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: not_skill_id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgent
      summary: List of Agent
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: CreateAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentRequest'
        required: true
      summary: Create Agent
  /call_center/agents/reports/call:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: time.from
          schema:
            format: int64
            type: string
        - in: query
          name: time.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - in: query
          name: q
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentCallStatisticsList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentCallStatistics
  /call_center/agents/reports/status:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: time.from
          schema:
            format: int64
            type: string
        - in: query
          name: time.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: status
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: utilization.from
          schema:
            format: int64
            type: string
        - in: query
          name: utilization.to
          schema:
            format: int64
            type: string
        - in: query
          name: has_call
          schema:
            type: boolean
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: region_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: supervisor_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: auditor_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStatsStatistic'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentStatusStatistic
  '/call_center/agents/reports/status/{agent_id}':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: time.from
          schema:
            format: int64
            type: string
        - in: query
          name: time.to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentStatusStatisticItem'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentStatusStatisticItem
  /call_center/agents/states/history:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: joined_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: joined_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - in: query
          name: from_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStateHistory'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentStateHistory
  '/call_center/agents/{agent_id}/pause_causes':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: allow_change
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ForAgentPauseCauseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchPauseCauseForAgent
  '/call_center/agents/{agent_id}/skills':
    delete:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: DeleteAgentSkills
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: SearchAgentSkill
      summary: List of AgentSkill
    patch:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: PatchAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentSkillService.PatchAgentSkillsBody
        required: true
    post:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: CreateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentSkillService.CreateAgentSkillBody
        required: true
      summary: Create AgentSkill
  '/call_center/agents/{agent_id}/skills/bulk':
    post:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateAgentSkillsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: CreateAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentSkillService.CreateAgentSkillsBody
        required: true
  '/call_center/agents/{agent_id}/skills/{id}':
    delete:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: DeleteAgentSkill
      summary: Remove AgentSkill
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: ReadAgentSkill
      summary: AgentSkill item
    patch:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: PatchAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentSkillService.PatchAgentSkillBody
        required: true
    put:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: UpdateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentSkillService.UpdateAgentSkillBody
        required: true
      summary: Update AgentSkill
  '/call_center/agents/{agent_id}/states/history':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: time_from
          schema:
            format: int64
            type: string
        - in: query
          name: time_to
          schema:
            format: int64
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStateHistory'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: AgentStateHistory
  '/call_center/agents/{agent_id}/states/waiting':
    patch:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSetStateResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: AgentSetState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.AgentSetStateBody'
        required: true
  '/call_center/agents/{agent_id}/statistics/queues':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentInQueueStatisticsList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentInQueueStatistics
  '/call_center/agents/{agent_id}/statistics/today':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTodayStatisticsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: AgentTodayStatistics
  '/call_center/agents/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: DeleteAgent
      summary: Remove Agent
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: ReadAgent
      summary: Agent item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: PatchAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.PatchAgentBody'
        required: true
      summary: Update Agent
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: UpdateAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.UpdateAgentBody'
        required: true
      summary: Update Agent
  '/call_center/agents/{id}/queues':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentInQueue
  '/call_center/agents/{id}/status':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Response'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: UpdateAgentStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.UpdateAgentStatusBody'
        required: true
      summary: Change agent status
  '/call_center/agents/{id}/teams':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentInTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchAgentInTeam
      summary: todo deprecated ?
  '/call_center/attempts/{attempt_id}':
    patch:
      parameters:
        - in: path
          name: attempt_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptResultResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: AttemptCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.AttemptCallbackBody'
        required: true
  /call_center/audit/forms:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
        - description: |-
            bool archive = 9;

            bool active = 11; // not archive
          in: query
          name: editable
          schema:
            type: boolean
        - in: query
          name: question
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: SearchAuditForm
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: CreateAuditForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAuditFormRequest'
        required: true
  '/call_center/audit/forms/{form_id}/rate':
    get:
      parameters:
        - in: path
          name: form_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: call_id
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: rated_user
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAuditRate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: SearchAuditRate
  '/call_center/audit/forms/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: DeleteAuditForm
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: ReadAuditForm
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: PatchAuditForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.PatchAuditFormBody'
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: UpdateAuditForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.UpdateAuditFormBody'
        required: true
  /call_center/audit/rate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: CreateAuditFormRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAuditFormRateRequest'
        required: true
  '/call_center/audit/rate/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: DeleteAuditRate
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: ReadAuditRate
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AuditFormService
      operationId: UpdateAuditRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.UpdateAuditRateBody'
        required: true
  /call_center/buckets:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - BucketService
      operationId: SearchBucket
      summary: List of Bucket
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - BucketService
      operationId: CreateBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateBucketRequest'
        required: true
      summary: Create Bucket
  '/call_center/buckets/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - BucketService
      operationId: DeleteBucket
      summary: Remove Bucket
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - BucketService
      operationId: ReadBucket
      summary: Bucket item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - BucketService
      operationId: UpdateBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.BucketService.UpdateBucketBody'
        required: true
      summary: Update Bucket
  /call_center/communication_type:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: channel
          schema:
            items:
              enum:
                - Undefined
                - Phone
                - Email
                - Messaging
              type: string
            type: array
        - in: query
          name: default
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: SearchCommunicationType
      summary: List of CommunicationType
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: CreateCommunicationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CommunicationTypeRequest'
        required: true
      summary: Create CommunicationType
  '/call_center/communication_type/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: DeleteCommunicationType
      summary: Remove CommunicationType
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: ReadCommunicationType
      summary: CommunicationType item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: PatchCommunicationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.CommunicationTypeService.PatchCommunicationTypeBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CommunicationTypeService
      operationId: UpdateCommunicationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.CommunicationTypeService.UpdateCommunicationTypeBody
        required: true
      summary: Update CommunicationType
  /call_center/list:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOfList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: SearchList
      summary: List of List
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: CreateList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateListRequest'
        required: true
      summary: Create List
  '/call_center/list/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: DeleteList
      summary: Remove list
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: ReadList
      summary: List item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: UpdateList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ListService.UpdateListBody'
        required: true
      summary: Update list
  '/call_center/list/{list_id}/communication':
    get:
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: expire_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: expire_at.to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOfListCommunication'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: SearchListCommunication
      summary: List of List
    post:
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: CreateListCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.ListService.CreateListCommunicationBody
        required: true
      summary: Create ListCommunication
  '/call_center/list/{list_id}/communication/{id}':
    delete:
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: DeleteListCommunication
      summary: Remove ListCommunication
    get:
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: ReadListCommunication
      summary: List item
    put:
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - ListService
      operationId: UpdateListCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.ListService.UpdateListCommunicationBody
        required: true
      summary: Update ListCommunication
  '/call_center/lookups/agents/skills/{agent_id}':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentSkillService
      operationId: SearchLookupAgentNotExistsSkill
      summary: SearchLookupAgentNotExistsSkill
  /call_center/lookups/agents/users:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentUser'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchLookupUsersAgentNotExists
      summary: SearchLookupAgentNotExistsUser
  /call_center/members:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: bucket_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: destination
          schema:
            type: string
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: stop_cause
          schema:
            items:
              type: string
            type: array
        - in: query
          name: priority.from
          schema:
            format: int64
            type: string
        - in: query
          name: priority.to
          schema:
            format: int64
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: attempts.from
          schema:
            format: int64
            type: string
        - in: query
          name: attempts.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int32
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: SearchMembers
      summary: Search of Member
  '/call_center/members/{id}':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: PatchMemberOne
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.PatchMemberOneBody'
        required: true
  /call_center/pause_causes:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: SearchAgentPauseCause
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: CreateAgentPauseCause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentPauseCauseRequest'
        required: true
  '/call_center/pause_causes/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: DeleteAgentPauseCause
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: ReadAgentPauseCause
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: PatchAgentPauseCause
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentPauseCauseService.PatchAgentPauseCauseBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentPauseCauseService
      operationId: UpdateAgentPauseCause
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.AgentPauseCauseService.UpdateAgentPauseCauseBody
        required: true
  /call_center/preset/query:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: section
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListPresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: SearchPresetQuery
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: CreatePresetQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreatePresetQueryRequest'
        required: true
  '/call_center/preset/query/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: DeletePresetQuery
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: ReadPresetQuery
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: PatchPresetQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.PresetQueryService.PatchPresetQueryBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - PresetQueryService
      operationId: UpdatePresetQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.PresetQueryService.UpdatePresetQueryBody
        required: true
  /call_center/queues:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: type
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: SearchQueue
      summary: List of Queue
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: CreateQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateQueueRequest'
        required: true
      summary: Create Queue
  /call_center/queues/attempts/active:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: joined_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: joined_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: bucket_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: member_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: result
          schema:
            items:
              type: string
            type: array
        - in: query
          name: leaving_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: leaving_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: duration.from
          schema:
            format: int64
            type: string
        - in: query
          name: duration.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: offered_agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAttempt'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: SearchAttempts
      summary: SearchAttempts
  /call_center/queues/attempts/active/reset:
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResetActiveAttemptsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: ResetActiveAttempts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ResetActiveAttemptsRequest'
        required: true
  /call_center/queues/attempts/history:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: joined_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: joined_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: bucket_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: member_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: result
          schema:
            items:
              type: string
            type: array
        - in: query
          name: leaving_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: leaving_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: duration.from
          schema:
            format: int64
            type: string
        - in: query
          name: duration.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: offered_agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryAttempt'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: SearchAttemptsHistory
      summary: SearchMemberAttempts
  '/call_center/queues/attempts/{attempt_id}/renewal':
    patch:
      parameters:
        - in: path
          name: attempt_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptRenewalResultResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: AttemptsRenewalResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.MemberService.AttemptsRenewalResultBody
        required: true
  /call_center/queues/members:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: DeleteAllMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.DeleteAllMembersRequest'
        required: true
      summary: DeleteAllMembers
  /call_center/queues/reports/general:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: joined_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: joined_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: type
          schema:
            items:
              format: int32
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListReportGeneral'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: SearchQueueReportGeneral
  /call_center/queues/tags:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTags'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: SearchQueueTags
      summary: List RoutingSchemaTags
  '/call_center/queues/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: DeleteQueue
      summary: Remove Queue
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: ReadQueue
      summary: Queue item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: PatchQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueService.PatchQueueBody'
        required: true
      summary: Patch Queue
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueService
      operationId: UpdateQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueService.UpdateQueueBody'
        required: true
      summary: Update Queue
  '/call_center/queues/{queue_id}/buckets':
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: SearchQueueBucket
      summary: SearchQueueRouting
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: CreateQueueBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueBucketService.CreateQueueBucketBody
        required: true
      summary: Create QueueBucket
  '/call_center/queues/{queue_id}/buckets/{id}':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: DeleteQueueBucket
      summary: DeleteQueueRouting
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: ReadQueueBucket
      summary: ReadQueueRouting
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: PatchQueueBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueBucketService.PatchQueueBucketBody
        required: true
    put:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueBucketService
      operationId: UpdateQueueBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueBucketService.UpdateQueueBucketBody
        required: true
      summary: UpdateQueueBucket
  '/call_center/queues/{queue_id}/hooks':
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: event
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: SearchQueueHook
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: CreateQueueHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.CreateQueueHookBody'
        required: true
  '/call_center/queues/{queue_id}/hooks/{id}':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: DeleteQueueHook
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: ReadQueueHook
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: PatchQueueHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.PatchQueueHookBody'
        required: true
    put:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueHookService
      operationId: UpdateQueueHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.UpdateQueueHookBody'
        required: true
  '/call_center/queues/{queue_id}/members':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: DeleteMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.DeleteMembersBody'
        required: true
      summary: DeleteMembers
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: bucket_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: destination
          schema:
            type: string
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: offering_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: stop_cause
          schema:
            items:
              type: string
            type: array
        - in: query
          name: priority.from
          schema:
            format: int64
            type: string
        - in: query
          name: priority.to
          schema:
            format: int64
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: attempts.from
          schema:
            format: int64
            type: string
        - in: query
          name: attempts.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'variables[string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: SearchMemberInQueue
      summary: List of Member
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: CreateMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateMemberBody'
        required: true
      summary: Create Member
  '/call_center/queues/{queue_id}/members/bulk':
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberBulkResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: CreateMemberBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateMemberBulkBody'
        required: true
      summary: Create Member
  '/call_center/queues/{queue_id}/members/reset':
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResetMembersResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: ResetMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.ResetMembersBody'
        required: true
      summary: ResetMembers
  '/call_center/queues/{queue_id}/members/{id}':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: DeleteMember
      summary: DeleteMember
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: ReadMember
      summary: ReadQueueRouting
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: PatchMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.PatchMemberBody'
        required: true
      summary: Patch Member
    put:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: UpdateMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.UpdateMemberBody'
        required: true
      summary: UpdateMember
  '/call_center/queues/{queue_id}/members/{member_id}/attempts':
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: member_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMemberAttempt'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: SearchMemberAttempts
      summary: SearchMemberAttempts
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: member_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateAttemptResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: CreateAttempt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateAttemptBody'
        required: true
      summary: Offline queue
  '/call_center/queues/{queue_id}/members/{member_id}/attempts/{attempt_id}':
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: attempt_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptResultResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MemberService
      operationId: AttemptResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.AttemptResultBody'
        required: true
  '/call_center/queues/{queue_id}/resource_groups':
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueResourcesService
      operationId: SearchQueueResourceGroup
      summary: SearchQueueResourceGroup
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueResourcesService
      operationId: CreateQueueResourceGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueResourcesService.CreateQueueResourceGroupBody
        required: true
      summary: CreateQueueResourceGroup
  '/call_center/queues/{queue_id}/resource_groups/{id}':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueResourcesService
      operationId: DeleteQueueResourceGroup
      summary: DeleteQueueResourceGroup
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueResourcesService
      operationId: ReadQueueResourceGroup
      summary: ReadQueueResourceGroup
    put:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueResourcesService
      operationId: UpdateQueueResourceGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueResourcesService.UpdateQueueResourceGroupBody
        required: true
      summary: UpdateQueueResourceGroup
  '/call_center/queues/{queue_id}/skills':
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: bucket_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: lvl
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: min_capacity
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: max_capacity
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: SearchQueueSkill
    post:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: CreateQueueSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueSkillService.CreateQueueSkillBody
        required: true
  '/call_center/queues/{queue_id}/skills/{id}':
    delete:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: DeleteQueueSkill
    get:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: ReadQueueSkill
    patch:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: PatchQueueSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueSkillService.PatchQueueSkillBody
        required: true
    put:
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QueueSkillService
      operationId: UpdateQueueSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QueueSkillService.UpdateQueueSkillBody
        required: true
  /call_center/quick_replies:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQuickReplies'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: SearchQuickReplies
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: CreateQuickReply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateQuickReplyRequest'
        required: true
  '/call_center/quick_replies/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: DeleteQuickReply
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: ReadQuickReply
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: PatchQuickReply
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QuickRepliesService.PatchQuickReplyBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - QuickRepliesService
      operationId: UpdateQuickReply
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.QuickRepliesService.UpdateQuickReplyBody
        required: true
  /call_center/resource_group:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: SearchOutboundResourceGroup
      summary: List of OutboundResourceGroup
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: CreateOutboundResourceGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateOutboundResourceGroupRequest'
        required: true
      summary: Create OutboundResourceGroup
  '/call_center/resource_group/{group_id}/resource':
    get:
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceInGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: SearchOutboundResourceInGroup
      summary: List of OutboundResourceInGroup
    post:
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: CreateOutboundResourceInGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody
        required: true
      summary: Create OutboundResourceGroup
  '/call_center/resource_group/{group_id}/resource/{id}':
    delete:
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: DeleteOutboundResourceInGroup
      summary: Remove OutboundResourceInGroup
    get:
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: ReadOutboundResourceInGroup
      summary: OutboundResourceInGroup item
    put:
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: UpdateOutboundResourceInGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody
        required: true
      summary: Update OutboundResourceInGroup
  '/call_center/resource_group/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: DeleteOutboundResourceGroup
      summary: Remove OutboundResourceGroup
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: ReadOutboundResourceGroup
      summary: OutboundResourceGroup item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceGroupService
      operationId: UpdateOutboundResourceGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody
        required: true
      summary: Update OutboundResourceGroup
  /call_center/resources:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: SearchOutboundResource
      summary: List of OutboundResource
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: CreateOutboundResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateOutboundResourceRequest'
        required: true
      summary: Create OutboundResource
  '/call_center/resources/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: DeleteOutboundResource
      summary: Remove OutboundResource
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: ReadOutboundResource
      summary: OutboundResource item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: PatchOutboundResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceService.PatchOutboundResourceBody
        required: true
      summary: Patch OutboundResource
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: UpdateOutboundResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceService.UpdateOutboundResourceBody
        required: true
      summary: Update OutboundResource
  '/call_center/resources/{resource_id}/display':
    delete:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: items
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmptyResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: DeleteOutboundResourceDisplays
      summary: Remove ResourceDisplays
    get:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: SearchOutboundResourceDisplay
      summary: List of ResourceDisplay
    post:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: CreateOutboundResourceDisplay
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceService.CreateOutboundResourceDisplayBody
        required: true
      summary: Create CreateOutboundResourceDisplay
  '/call_center/resources/{resource_id}/display/bulk':
    post:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: CreateOutboundResourceDisplayBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody
        required: true
      summary: Create CreateOutboundResourceDisplay
  '/call_center/resources/{resource_id}/display/{id}':
    delete:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: DeleteOutboundResourceDisplay
      summary: Remove ResourceDisplay
    get:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: ReadOutboundResourceDisplay
      summary: ResourceDisplay item
    put:
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - OutboundResourceService
      operationId: UpdateOutboundResourceDisplay
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.OutboundResourceService.UpdateOutboundResourceDisplayBody
        required: true
      summary: Update ResourceDisplay
  /call_center/skills:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: SearchSkill
      summary: List of Skill
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: CreateSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSkillRequest'
        required: true
      summary: Create Skill
  '/call_center/skills/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: DeleteSkill
      summary: Remove Skill
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: ReadSkill
      summary: Skill item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: UpdateSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.UpdateSkillBody'
        required: true
      summary: Update Skill
  '/call_center/skills/{skill_id}/agents':
    delete:
      parameters:
        - in: path
          name: skill_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DeleteSkillAgentResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: DeleteSkillAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.DeleteSkillAgentBody'
        required: true
    get:
      parameters:
        - in: path
          name: skill_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkillAgent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: SearchSkillAgent
      summary: |-
        For agents
        SearchSkillAgent
    patch:
      parameters:
        - in: path
          name: skill_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PatchSkillAgentResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: PatchSkillAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.PatchSkillAgentBody'
        required: true
    post:
      parameters:
        - in: path
          name: skill_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateSkillAgentResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SkillService
      operationId: CreateSkillAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.CreateSkillAgentBody'
        required: true
  /call_center/teams:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: strategy
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: admin_id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentTeamService
      operationId: SearchAgentTeam
      summary: List of AgentTeam
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentTeamService
      operationId: CreateAgentTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentTeamRequest'
        required: true
      summary: Create AgentTeam
  /call_center/teams/triggers/agent:
    get:
      parameters:
        - in: query
          name: team_id
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: SearchAgentTrigger
  '/call_center/teams/triggers/{trigger_id}':
    post:
      parameters:
        - in: path
          name: trigger_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RunTeamTriggerResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: RunTeamTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.TeamTriggerService.RunTeamTriggerBody
        required: true
  '/call_center/teams/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentTeamService
      operationId: DeleteAgentTeam
      summary: Remove AgentTeam
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentTeamService
      operationId: ReadAgentTeam
      summary: AgentTeam item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentTeamService
      operationId: UpdateAgentTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentTeamService.UpdateAgentTeamBody'
        required: true
      summary: Update AgentTeam
  '/call_center/teams/{team_id}/hooks':
    get:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: event
          schema:
            items:
              enum:
                - teamHookEventUndefined
                - agent_status
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: SearchTeamHook
    post:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: CreateTeamHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.CreateTeamHookBody'
        required: true
  '/call_center/teams/{team_id}/hooks/{id}':
    delete:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: DeleteTeamHook
    get:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: ReadTeamHook
    patch:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: PatchTeamHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.PatchTeamHookBody'
        required: true
    put:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamHookService
      operationId: UpdateTeamHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.UpdateTeamHookBody'
        required: true
  '/call_center/teams/{team_id}/triggers':
    get:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: SearchTeamTrigger
    post:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: CreateTeamTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.TeamTriggerService.CreateTeamTriggerBody
        required: true
  '/call_center/teams/{team_id}/triggers/{id}':
    delete:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: DeleteTeamTrigger
    get:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: ReadTeamTrigger
    patch:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: PatchTeamTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.TeamTriggerService.PatchTeamTriggerBody
        required: true
    put:
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TeamTriggerService
      operationId: UpdateTeamTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.TeamTriggerService.UpdateTeamTriggerBody
        required: true
  /call_center/users:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListUserStatus'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - AgentService
      operationId: SearchUserStatus
      summary: List of UserStatus
  /calls:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: CreateCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateCallRequest'
        required: true
  /calls/active:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: user_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: member_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: gateway_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: duration.from
          schema:
            format: int64
            type: string
        - in: query
          name: duration.to
          schema:
            format: int64
            type: string
        - in: query
          name: skip_parent
          schema:
            type: boolean
        - in: query
          name: parent_id
          schema:
            type: string
        - explode: true
          in: query
          name: cause
          schema:
            items:
              type: string
            type: array
        - in: query
          name: exists_file
          schema:
            type: boolean
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - in: query
          name: number
          schema:
            type: string
        - explode: true
          in: query
          name: direction
          schema:
            items:
              type: string
            type: array
        - in: query
          name: answered_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: answered_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: missed
          schema:
            type: boolean
        - in: query
          name: stored_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: stored_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: supervisor_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: state
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: SearchActiveCall
  '/calls/active/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HangupCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: HangupCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.HangupCallBody'
        required: true
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ActiveCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: ReadCall
      summary: Call item
  '/calls/active/{id}/confirm_push':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ConfirmPushResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: ConfirmPush
      summary: Call item
  '/calls/active/{id}/dtmf':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DtmfCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: DtmfCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.DtmfCallBody'
        required: true
  '/calls/active/{id}/eavesdrop':
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: EavesdropCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.EavesdropCallBody'
        required: true
  '/calls/active/{id}/hold':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HoldCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: HoldCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.HoldCallBody'
        required: true
  '/calls/active/{id}/transfer':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.BlindTransferCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: BlindTransferCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.BlindTransferCallBody'
        required: true
  '/calls/active/{id}/unhold':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HoldCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: UnHoldCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.UnHoldCallBody'
        required: true
  '/calls/active/{id}/variables':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SetVariablesCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: SetVariablesCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.SetVariablesCallBody'
        required: true
  /calls/history:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: user_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: agent_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: queue_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: member_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: gateway_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: duration.from
          schema:
            format: int64
            type: string
        - in: query
          name: duration.to
          schema:
            format: int64
            type: string
        - in: query
          name: skip_parent
          schema:
            type: boolean
        - in: query
          name: parent_id
          schema:
            type: string
        - explode: true
          in: query
          name: cause
          schema:
            items:
              type: string
            type: array
        - in: query
          name: has_file
          schema:
            type: boolean
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
        - in: query
          name: number
          schema:
            type: string
        - in: query
          name: direction
          schema:
            type: string
        - in: query
          name: answered_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: answered_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: missed
          schema:
            type: boolean
        - in: query
          name: stored_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: stored_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: transfer_from
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: transfer_to
          schema:
            items:
              type: string
            type: array
        - in: query
          name: dependency_id
          schema:
            type: string
        - explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'variables[string]'
          schema:
            type: string
        - explode: true
          in: query
          name: amd_result
          schema:
            items:
              type: string
            type: array
        - in: query
          name: fts
          schema:
            type: string
        - explode: true
          in: query
          name: directions
          schema:
            items:
              type: string
            type: array
        - in: query
          name: has_transcript
          schema:
            type: boolean
        - in: query
          name: agent_description
          schema:
            type: string
        - explode: true
          in: query
          name: owner_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: grantee_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: amd_ai_result
          schema:
            items:
              type: string
            type: array
        - in: query
          name: talk.from
          schema:
            format: int64
            type: string
        - in: query
          name: talk.to
          schema:
            format: int64
            type: string
        - in: query
          name: rated
          schema:
            type: boolean
        - explode: true
          in: query
          name: rated_by
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: score_required.from
          schema:
            format: int64
            type: string
        - in: query
          name: score_required.to
          schema:
            format: int64
            type: string
        - in: query
          name: score_optional.from
          schema:
            format: int64
            type: string
        - in: query
          name: score_optional.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: rated_user
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: contact_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: has_transfer
          schema:
            type: boolean
        - in: query
          name: timeline
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: SearchHistoryCall
      summary: List of call
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: SearchHistoryCallPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SearchHistoryCallRequest'
        required: true
      summary: List of call
  /calls/history/aggregate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAggregate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: AggregateHistoryCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AggregateHistoryCallRequest'
        required: true
  '/calls/history/{call_id}/annotation':
    post:
      parameters:
        - in: path
          name: call_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: CreateCallAnnotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.CreateCallAnnotationBody'
        required: true
  '/calls/history/{call_id}/annotation/{id}':
    delete:
      parameters:
        - in: path
          name: call_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: DeleteCallAnnotation
    put:
      parameters:
        - in: path
          name: call_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: UpdateCallAnnotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.UpdateCallAnnotationBody'
        required: true
  '/calls/history/{call_id}/redial':
    post:
      parameters:
        - in: path
          name: call_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: RedialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.RedialCallBody'
        required: true
  '/calls/history/{id}':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HistoryCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CallService
      operationId: PatchHistoryCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.PatchHistoryCallBody'
        required: true
  /cases:
    get:
      parameters:
        - description: Page number for pagination.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of results per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Query string for searching cases.
          in: query
          name: q
          schema:
            type: string
        - description: List of specific case IDs to retrieve.
          explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - description: 'Sorting criteria (e.g., field:asc).'
          in: query
          name: sort
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Key-value pairs for additional filtering.
          explode: true
          in: query
          name: filters
          schema:
            items:
              type: string
            type: array
        - description: Contact ID for filtering cases.
          in: query
          name: contact_id
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: SearchCases
      summary: RPC method for searching cases.
    post:
      parameters:
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: CreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateCase'
        description: Input data for creating the case.
        required: true
      summary: RPC method for creating a new case.
  /cases/catalogs:
    get:
      parameters:
        - description: Page number for pagination
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of records per page
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sorting options by fields
          in: query
          name: sort
          schema:
            type: string
        - description: List of IDs to filter the catalogs
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: query
          schema:
            type: string
        - description: 'Filter by state (true for active, false for inactive)'
          in: query
          name: state
          schema:
            type: boolean
        - description: |-
            Filter by the depth of the hierarchy to retrieve services.
            The depth indicates how many ancestor levels of services
            will be included for each catalog.
            - A depth of 0 includes only the direct catalog.
            - A depth of 1 includes the catalog and its immediate services.
            - By default the depth is limited by 3,
              meaning all nested services and sub-services will be included.
          in: query
          name: depth
          schema:
            format: int64
            type: string
        - description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          explode: true
          in: query
          name: sub_fields
          schema:
            items:
              type: string
            type: array
        - description: Filter catalogs with subservices
          in: query
          name: hasSubservices
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CatalogList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: ListCatalogs
      summary: Retrieve a list of catalogs or search catalogs
    post:
      parameters:
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: CreateCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
        required: true
      summary: Create a new catalog
  '/cases/catalogs/{id}':
    delete:
      parameters:
        - description: ID of the catalog to be deleted
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CatalogList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: DeleteCatalog
      summary: Delete a catalog
    get:
      parameters:
        - description: ID of the catalog to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          explode: true
          in: query
          name: sub_fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateCatalogResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: LocateCatalog
      summary: Locate a catalog by ID
    patch:
      parameters:
        - description: ID of the catalog to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: UpdateCatalog2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
        description: Input data for updating the catalog
        required: true
      summary: Update an existing catalog
    put:
      parameters:
        - description: ID of the catalog to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Catalogs
      operationId: UpdateCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
        description: Input data for updating the catalog
        required: true
      summary: Update an existing catalog
  /cases/close_reason_groups:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroupList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: ListCloseReasonGroups
      summary: Retrieve a list of close reason groups or search close reason groups
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: CreateCloseReasonGroup
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputCloseReasonGroup'
      summary: Create a new close reason group
  '/cases/close_reason_groups/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: DeleteCloseReasonGroup
      summary: Delete a close reason group
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.cases.LocateCloseReasonGroupResponse
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: LocateCloseReasonGroup
      summary: Locate a close reason group by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: UpdateCloseReasonGroup2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
        required: true
      summary: Update an existing close reason group
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasonGroups
      operationId: UpdateCloseReasonGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
        required: true
      summary: Update an existing close reason group
  '/cases/comments/{etag}':
    delete:
      parameters:
        - description: Identifier of the comment to delete.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to return after deletion.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: DeleteComment
      summary: Delete a specific comment by its etag
    get:
      parameters:
        - description: Identifier of the comment to retrieve.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Specific fields to return for the comment.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: LocateComment
      summary: Retrieve a specific comment by its etag
  '/cases/comments/{input.etag}':
    patch:
      parameters:
        - description: Identifier for the comment.
          in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: UpdateComment2
      requestBody:
        content:
          application/json:
            schema:
              example:
                text: My new comment
              properties:
                text:
                  description: Content of the comment.
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Data for the comment to update.
              type: object
        description: Data for the comment to update.
        required: true
      summary: Update a specific comment by its etag
    put:
      parameters:
        - description: Identifier for the comment.
          in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: UpdateComment
      requestBody:
        content:
          application/json:
            schema:
              example:
                text: My new comment
              properties:
                text:
                  description: Content of the comment.
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Data for the comment to update.
              type: object
        description: Data for the comment to update.
        required: true
      summary: Update a specific comment by its etag
  /cases/priorities:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
        - description: Filter priorities that are not in filtered SLA
          in: query
          name: notInSla
          schema:
            format: int64
            type: string
        - description: >-
            Filter priorities that are in filtered SlaCondition and not in
            current SLA
          in: query
          name: inSlaCond
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.PriorityList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: ListPriorities
      summary: Retrieve a list of priorities or search priorities
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: CreatePriority
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputPriority'
      summary: Create a new priority
  '/cases/priorities/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: DeletePriority
      summary: Delete a priority
    get:
      parameters:
        - description: ID of the priority to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocatePriorityResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: LocatePriority
      summary: Locate a priority by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: UpdatePriority2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputPriority'
        required: true
      summary: Update an existing priority
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Priorities
      operationId: UpdatePriority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputPriority'
        required: true
      summary: Update an existing priority
  /cases/services:
    get:
      parameters:
        - description: Page number for pagination
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of records per page
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Sorting options by fields
          in: query
          name: sort
          schema:
            type: string
        - description: List of IDs to filter the services
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
        - description: Filter services by catalog ID (required)
          in: query
          name: root_id
          schema:
            format: int64
            type: string
        - description: 'Filter by state (true for active, false for inactive)'
          in: query
          name: state
          schema:
            type: boolean
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ServiceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: ListServices
      summary: Retrieve a list of services or search services within a catalog
    post:
      parameters:
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: CreateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateService'
        required: true
      summary: Create a new service within a catalog
  '/cases/services/{id}':
    delete:
      parameters:
        - description: ID of the service to be deleted
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ServiceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: DeleteService
      summary: Delete a service
    get:
      parameters:
        - description: ID of the service to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateServiceResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: LocateService
      summary: Locate a service by ID
    patch:
      parameters:
        - description: ID of the service to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: UpdateService2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputService'
        description: Input data for updating the service
        required: true
      summary: Update an existing service
    put:
      parameters:
        - description: ID of the service to be updated
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Services
      operationId: UpdateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputService'
        description: Input data for updating the service
        required: true
      summary: Update an existing service
  /cases/slas:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLAList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: ListSLAs
      summary: Retrieve a list of SLAs or search SLA conditions
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: CreateSLA
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputSLA'
      summary: Create a new SLA
  '/cases/slas/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: DeleteSLA
      summary: Delete an SLA
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSLAResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: LocateSLA
      summary: Locate an SLA by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: UpdateSLA2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLA'
        required: true
      summary: Update an existing SLA
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAs
      operationId: UpdateSLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLA'
        required: true
      summary: Update an existing SLA
  /cases/sources:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
        - description: |-
            Filter by source type.

             - TYPE_UNSPECIFIED: Unspecified source type.
             - CALL: Phone call source type.
             - CHAT: Chat source type.
             - SOCIAL_MEDIA: Social media source type.
             - EMAIL: Email source type.
             - API: API source type.
             - MANUAL: Manual source type.
          explode: true
          in: query
          name: type
          schema:
            items:
              enum:
                - TYPE_UNSPECIFIED
                - CALL
                - CHAT
                - SOCIAL_MEDIA
                - EMAIL
                - API
                - MANUAL
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SourceList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: ListSources
      summary: Retrieve a list of sources or search sources
    post:
      parameters:
        - description: |-
            Optional list of specific fields to return after creation

            Specific fields to include in response
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: CreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSource'
              description: The input data for the source
              example:
                description: For inbound communication
                name: Inbound
                type: CALL
              format: object
              required:
                - input
        description: Main input payload for the source being created
        required: true
      summary: Create a new source
  '/cases/sources/{id}':
    delete:
      parameters:
        - description: The unique ID of the source to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: DeleteSource
      summary: Delete a source
    get:
      parameters:
        - description: The unique ID of the source to locate.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSourceResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: LocateSource
      summary: Locate a source by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: UpdateSource2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSource'
        required: true
      summary: Update an existing source
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Sources
      operationId: UpdateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSource'
        required: true
      summary: Update an existing source
  /cases/statuses:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: ListStatuses
      summary: Retrieve a list of statuses or search statuses
    post:
      parameters:
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: CreateStatus
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputStatus'
      summary: Create a new status
  '/cases/statuses/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: DeleteStatus
      summary: Delete a status
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateStatusResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: LocateStatus
      summary: Locate a status by ID
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: UpdateStatus2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatus'
        required: true
      summary: Update an existing status
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Statuses
      operationId: UpdateStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatus'
        required: true
      summary: Update an existing status
  '/cases/{case_etag}/comments':
    get:
      parameters:
        - description: Etag or ID of the case for which comments are requested.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of comments per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Query string for search.
          in: query
          name: q
          schema:
            type: string
        - description: Array of requested id.
          explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - description: Sorting order.
          in: query
          name: sort
          schema:
            type: string
        - description: Fields to return for each comment.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseCommentList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: ListComments
      summary: Retrieve a list of comments associated with a specific case
    post:
      parameters:
        - description: Etag or ID of the case to which comments belong.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Result fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseComments
      operationId: PublishComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCaseComment'
        description: Comment to publish.
        required: true
      summary: Publish comment into a specific case
  '/cases/{case_etag}/communication':
    get:
      parameters:
        - description: Case identifier.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Query string for filtering results.
          in: query
          name: q
          schema:
            type: string
        - description: Number of records per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Page number for pagination.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Sorting order.
          in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ListCommunicationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: ListCommunications
      summary: |-
        Lists all communications linked to a specific case.
        Currently a feature for future development.
    post:
      parameters:
        - description: Case identifier.
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LinkCommunicationResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: LinkCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCaseCommunication'
        description: Input data for the communications to link.
        required: true
      summary: Links a communication to a specific case.
  '/cases/{case_etag}/communication/{id}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: Communication identifier.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.UnlinkCommunicationResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseCommunications
      operationId: UnlinkCommunication
      summary: Unlinks a communication from a specific case.
  '/cases/{case_etag}/files':
    get:
      parameters:
        - description: ID of the case to fetch files for (required).
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: The page number to retrieve.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of items per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Search term.
          in: query
          name: q
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Array of requested id.
          explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - description: Sorting
          in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseFileList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseFiles
      operationId: ListFiles
      summary: Retrieve a list of files associated with a case
  '/cases/{case_etag}/files/{id}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: The unique ID of the file to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.File'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseFiles
      operationId: DeleteFile
      summary: Delete a file
  '/cases/{case_etag}/links':
    get:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLinkList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: ListLinks
      summary: With Case
    post:
      parameters:
        - description: new comment link
          in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: result fields needed on the front-end for each comment
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: input.etag
          schema:
            type: string
        - in: query
          name: input.url
          schema:
            type: string
        - in: query
          name: input.name
          schema:
            type: string
        - in: query
          name: input.userID.id
          schema:
            format: int64
            type: string
        - in: query
          name: input.userID.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: CreateLink
  '/cases/{case_etag}/links/{etag}':
    delete:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: etag
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: DeleteLink
    get:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - description: (id allowed)
          in: path
          name: etag
          required: true
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: LocateLink
  '/cases/{case_etag}/links/{input.etag}':
    patch:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: on return
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: UpdateLink2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                url:
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              type: object
        required: true
    put:
      parameters:
        - in: path
          name: case_etag
          required: true
          schema:
            type: string
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: on return
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseLinks
      operationId: UpdateLink
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                url:
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              type: object
        required: true
  '/cases/{case_id}/chat/{chat_id}/messages':
    get:
      parameters:
        - description: Contact identificator
          in: path
          name: case_id
          required: true
          schema:
            type: string
        - description: Unique chat dialog
          in: path
          name: chat_id
          required: true
          schema:
            type: string
        - description: Messages ONLY starting from the specified message ID
          in: query
          name: offset.id
          schema:
            format: int64
            type: string
        - description: Messages ONLY been sent before the specified epochtime(milli).
          in: query
          name: offset.date
          schema:
            format: int64
            type: string
        - description: Number of messages to return.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Search term: message.text'
          in: query
          name: q
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
          description: A successful response.
      tags:
        - CasesChatCatalog
      operationId: CasesChatCatalog_GetCaseChatHistory
  '/cases/{case_id}/timeline':
    get:
      parameters:
        - in: path
          name: case_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - in: query
          name: date_from
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: type
          schema:
            items:
              enum:
                - chat
                - call
                - email
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.GetTimelineResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseTimeline
      operationId: GetTimeline
  '/cases/{case_id}/timeline/counter':
    get:
      parameters:
        - in: path
          name: case_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.GetTimelineCounterResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CaseTimeline
      operationId: GetTimelineCounter
  '/cases/{etag}':
    delete:
      parameters:
        - description: Unique etag identifier of the case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the deleted case response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: DeleteCase
      summary: RPC method for deleting an existing case by its etag.
    get:
      parameters:
        - description: Unique etag identifier of the case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: LocateCase
      summary: RPC method to retrieve a specific case by its etag identifier.
  '/cases/{input.etag}':
    patch:
      parameters:
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: List of JSON fields to update.
          explode: true
          in: query
          name: x_json_mask
          schema:
            items:
              type: string
            type: array
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: UpdateCase2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignee:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                close_reason:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required;'
                close_result:
                  title: >-
                    create: not required; update: required only when case status
                    goes to the final state
                  type: string
                contact_info:
                  title: 'create: not required;'
                  type: string
                custom:
                  description: Custom data extension fields ..
                  type: object
                description:
                  title: 'create: not required;'
                  type: string
                group:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: required, default is reporter or ui (if empty
                    recognize as anonymous);
                priority:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: not required, default first value from priority
                    lookup
                rating:
                  format: int64
                  type: string
                rating_comment:
                  type: string
                reporter:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/general.Lookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/general.Lookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: not required, default initial value from status
                    lookup or ui;
                status_condition:
                  $ref: '#/components/schemas/webitel.cases.StatusCondition'
                subject:
                  title: 'create: required;'
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Input data with updated fields.
              type: object
        description: Input data with updated fields.
        required: true
      summary: RPC method for updating an existing case.
    put:
      parameters:
        - in: path
          name: input.etag
          required: true
          schema:
            type: string
        - description: List of JSON fields to update.
          explode: true
          in: query
          name: x_json_mask
          schema:
            items:
              type: string
            type: array
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: UpdateCase
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignee:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                close_reason:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required;'
                close_result:
                  title: >-
                    create: not required; update: required only when case status
                    goes to the final state
                  type: string
                contact_info:
                  title: 'create: not required;'
                  type: string
                custom:
                  description: Custom data extension fields ..
                  type: object
                description:
                  title: 'create: not required;'
                  type: string
                group:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: required, default is reporter or ui (if empty
                    recognize as anonymous);
                priority:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: not required, default first value from priority
                    lookup
                rating:
                  format: int64
                  type: string
                rating_comment:
                  type: string
                reporter:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/general.Lookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/general.Lookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/general.Lookup'
                  title: >-
                    create: not required, default initial value from status
                    lookup or ui;
                status_condition:
                  $ref: '#/components/schemas/webitel.cases.StatusCondition'
                subject:
                  title: 'create: required;'
                  type: string
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Input data with updated fields.
              type: object
        description: Input data with updated fields.
        required: true
      summary: RPC method for updating an existing case.
  '/cases/{input.primary_case.id}/related/{etag}':
    patch:
      parameters:
        - in: path
          name: input.primary_case.id
          required: true
          schema:
            format: int64
            type: string
        - description: Identifier of the related case to update.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: UpdateRelatedCase2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary_case:
                  description: Primary case details.
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                  type: object
                related_case:
                  $ref: '#/components/schemas/general.Lookup'
                  description: Related case details.
                relation_type:
                  $ref: '#/components/schemas/webitel.cases.RelationType'
                  description: Relation type.
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Input data for the related case update.
              type: object
        description: Input data for the related case update.
        required: true
      summary: Update an existing related case
    put:
      parameters:
        - in: path
          name: input.primary_case.id
          required: true
          schema:
            format: int64
            type: string
        - description: Identifier of the related case to update.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: UpdateRelatedCase
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary_case:
                  description: Primary case details.
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                  type: object
                related_case:
                  $ref: '#/components/schemas/general.Lookup'
                  description: Related case details.
                relation_type:
                  $ref: '#/components/schemas/webitel.cases.RelationType'
                  description: Relation type.
                userID:
                  $ref: '#/components/schemas/general.Lookup'
                  description: >-
                    Optional creator / updater ID. Use this to explicitly set
                    the case creator / updater instead of deriving it from the
                    auth token.
              title: Input data for the related case update.
              type: object
        description: Input data for the related case update.
        required: true
      summary: Update an existing related case
  '/cases/{primary_case_etag}/related':
    get:
      parameters:
        - description: Primary Case ID for which related cases are requested.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of related cases per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Query string for search.
          in: query
          name: q
          schema:
            type: string
        - description: Sorting order.
          in: query
          name: sort
          schema:
            type: string
        - description: Fields to return for each related case.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Filter by ids
          explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: ListRelatedCases
      summary: List all related cases for a specific case
    post:
      parameters:
        - description: Primary case details.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: CreateRelatedCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.CreateInputRelatedCase'
        description: Input data for the related case.
        required: true
      summary: Create a new related case
  '/cases/{primary_case_etag}/related/{etag}':
    delete:
      parameters:
        - description: Etag or ID of the primary case
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Identifier of the related case to delete.
          in: path
          name: etag
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: DeleteRelatedCase
      summary: Delete a specific related case
    get:
      parameters:
        - description: Primary case identifier.
          in: path
          name: primary_case_etag
          required: true
          schema:
            type: string
        - description: Identifier of the related case.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to return in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RelatedCases
      operationId: LocateRelatedCase
      summary: Retrieve a specific related case by ID
  /chat/broadcast:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.BroadcastMessageResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - MessagesService
      operationId: BroadcastMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.chat.BroadcastMessageRequest'
        required: true
      summary: Broadcast message send message from via to peer recipients.
  /chat/customers:
    get:
      parameters:
        - description: 'Page number to return. **default**: 1.'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Page records limit. **default**: 16.'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'Search term: peer{id,name}'
          in: query
          name: q
          schema:
            type: string
        - description: 'Sort records by { fields } specification.'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'Fields [Q]uery to build result dataset record.'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique contact **ID**entifier(s).
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: The type of contact to filter.
          in: query
          name: type
          schema:
            type: string
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: via.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: via.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: via.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatCustomers'
          description: A successful response.
      tags:
        - Catalog
      operationId: Catalog_GetCustomers
      summary: Query of external chat customers
  /chat/dialogs:
    get:
      parameters:
        - description: 'Page number to return. **default**: 1.'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Page records limit. **default**: 16.'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'Search term: peer.name'
          in: query
          name: q
          schema:
            type: string
        - description: 'Sort records by { fields } specification.'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'Fields [Q]uery to build result dataset record.'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            Set of unique chat IDentifier(s).
            Accept: dialog -or- member ID.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: via.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: via.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: via.name
          schema:
            type: string
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: peer.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: peer.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: peer.name
          schema:
            type: string
        - description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          in: query
          name: date.since
          schema:
            format: int64
            type: string
        - description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          in: query
          name: date.until
          schema:
            format: int64
            type: string
        - description: 'Dialogs ONLY that are currently [not] active( closed: ? ).'
          in: query
          name: online
          schema:
            type: boolean
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatDialogs'
          description: A successful response.
      tags:
        - Catalog
      operationId: Catalog_GetDialogs
      summary: Query of chat conversations
  '/chat/dialogs/{chat_id}/members':
    get:
      parameters:
        - description: ID of the chat dialog.
          in: path
          name: chat_id
          required: true
          schema:
            type: string
        - description: 'Page number to return. **default**: 1.'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Page records limit. **default**: 16.'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'Search term: peer(type;name)'
          in: query
          name: q
          schema:
            type: string
        - description: 'Sort records by { fields } specification.'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'Fields [Q]uery to build result dataset record.'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique chat member ID.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: via.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: via.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: via.name
          schema:
            type: string
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: peer.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: peer.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: peer.name
          schema:
            type: string
        - description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          in: query
          name: date.since
          schema:
            format: int64
            type: string
        - description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          in: query
          name: date.until
          schema:
            format: int64
            type: string
        - description: |-
            Participants ONLY who are currently [not] connected to the chat.
            ( left: ( 0 ? online : offline ) )
          in: query
          name: online
          schema:
            type: boolean
        - description: |-
            Participants ONLY who have [not] been connected to the chat.
            ( join: ( 0 ? [request|abandoned] : connected ) )
          in: query
          name: joined
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMembers'
          description: A successful response.
      tags:
        - Catalog
      operationId: Catalog_GetMembers
      summary: Query of chat participants
  '/chat/dialogs/{chat_id}/messages':
    get:
      parameters:
        - description: Unique chat dialog
          in: path
          name: chat_id
          required: true
          schema:
            type: string
        - description: Messages ONLY starting from the specified message ID
          in: query
          name: offset.id
          schema:
            format: int64
            type: string
        - description: Messages ONLY been sent before the specified epochtime(milli).
          in: query
          name: offset.date
          schema:
            format: int64
            type: string
        - description: Number of messages to return.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
        - description: 'Search term: message.text'
          in: query
          name: q
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: query
          name: peer.id
          schema:
            type: string
        - description: Contact **type** provider.
          in: query
          name: peer.type
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: peer.name
          schema:
            type: string
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
          description: A successful response.
      tags:
        - Catalog
      operationId: Catalog_GetHistory
      summary: Query of the chat history
  '/chat/{conversation_id}/contact':
    post:
      parameters:
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
        - in: query
          name: timezone.id
          schema:
            format: int64
            type: string
        - in: query
          name: timezone.name
          schema:
            type: string
        - in: query
          name: owner.id
          schema:
            format: int64
            type: string
        - in: query
          name: owner.name
          schema:
            type: string
        - explode: true
          in: query
          name: label
          schema:
            items:
              type: string
            type: array
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: description
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.Lookup'
          description: A successful response.
      tags:
        - ContactLinkingService
      operationId: ContactLinkingService_CreateContactFromConversation
      summary: >-
        CreateContactFromConversation creates new contact from the data existing
        in the conversation and after that links this contact to the external
        user.
  '/chat/{conversation_id}/link':
    post:
      parameters:
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
        - in: query
          name: contact_id
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.EmptyResponse'
          description: A successful response.
      tags:
        - ContactLinkingService
      operationId: ContactLinkingService_LinkContactToClient
      summary: >-
        LinkContactToClient creates connection between existing internal contact
        and external client.
  '/chat/{peer.type}/{peer.id}/messages':
    get:
      parameters:
        - description: Contact **type** provider.
          in: path
          name: peer.type
          required: true
          schema:
            type: string
        - description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          in: path
          name: peer.id
          required: true
          schema:
            type: string
        - description: Messages ONLY starting from the specified message ID
          in: query
          name: offset.id
          schema:
            format: int64
            type: string
        - description: Messages ONLY been sent before the specified epochtime(milli).
          in: query
          name: offset.date
          schema:
            format: int64
            type: string
        - description: Number of messages to return.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
        - description: 'Search term: message.text'
          in: query
          name: q
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Unique chat dialog
          in: query
          name: chat_id
          schema:
            type: string
        - description: Contact display **name**.
          in: query
          name: peer.name
          schema:
            type: string
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string][string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
          description: A successful response.
      tags:
        - Catalog
      operationId: Catalog_GetHistory2
      summary: Query of the chat history
  '/close_reason_groups/{close_reason_group_id}/close_reasons':
    get:
      parameters:
        - description: Close reason group ID filter
          in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: ListCloseReasons
      summary: Retrieve a list of close reasons or search close reasons
    post:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: CreateCloseReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
        required: true
      summary: Create a new close reason
  '/close_reason_groups/{close_reason_group_id}/close_reasons/{id}':
    delete:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: DeleteCloseReason
      summary: Delete a close reason
    get:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateCloseReasonResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: LocateCloseReason
      summary: Locate a close reason by ID
    patch:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: UpdateCloseReason2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
        required: true
      summary: Update an existing close reason
    put:
      parameters:
        - in: path
          name: close_reason_group_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - CloseReasons
      operationId: UpdateCloseReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
        required: true
      summary: Update an existing close reason
  /contacts:
    get:
      parameters:
        - description: >-
            Page number of result records.   _default(1);
            offset=(size*(page-1));_


            ```javascript

            let
                offset = 0
              , page = req.page
            ;

            if (page <= 0)
                page = 1;
            if (page > 1)
                offset = ((page-1)*size);
            // . . .

            ```
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: >-
            Limit of result page records count.   _default(16);
            limit=(size<=0?-1:size+1);_


            ```javascript

            const
                default = 16
              , maximum = 32
            ;

            let limit = req.size;

            if (limit <= 0)
                limit = default;
            if (maximum < limit)
                limit = maximum;
            // . . .

            ```
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: >-
            Search term:

            `?` - matches any character

            `*` - matches 0 or more characters

            Used to query records within a set of `qin` fields, eg:
            name,emails{type},labels etc...
          in: query
          name: q
          schema:
            type: string
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: id
              pattern: '^[+|-|!]?\w+$'
              type: string
            type: array
            uniqueItems: true
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
            type: array
            uniqueItems: true
        - description: |-
            Records with unique IDentifier(s).
            Accept: `id` -or- `etag`.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: |-
            [Q]uery[IN] is a set of search fields for term `q`.
            Default: `name{common_name}`.
          explode: true
          in: query
          name: qin
          schema:
            items:
              type: string
            type: array
        - description: |-
            Source access mode requirement.

             - READ: Can `fetch` record. [GET]
             - WRITE: Can `update` record. [PUT|PATCH]
             - DELETE: Can `delete` record. [DELETE]
          in: query
          name: mode
          schema:
            default: READ
            enum:
              - READ
              - WRITE
              - DELETE
            type: string
        - description: |-
            Excludes contacts that belong to the specified group ID.
            - Filters out contacts associated with the given `group_id`.
          in: query
          name: not_id_group
          schema:
            format: int64
            type: string
        - description: >-
            Filters contacts by the specified group(s).

            - Includes only contacts that belong to one or more of the given
            group Group(s).
          explode: true
          in: query
          name: group
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: >-
            Filters contacts by the specified owner(s).

            - Includes only contacts whose owner matches one or more of the
            given Owner(s).

            - The owner ID corresponds to `contact_id` in the
            `directory.wbt_user` table.
          explode: true
          in: query
          name: owner
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: >-
            Filters contacts by the specified label(s).

            - Includes only contacts that have one or more of the given
            Label(s).
          explode: true
          in: query
          name: label
          schema:
            items:
              type: string
            type: array
        - description: >-
            Filters contacts based on whether they are user-associated.

            - `true`  → Includes only user-associated contacts.

            - `false` → Includes only contacts that are NOT user-associated.

            - A contact is considered user-associated if it exists in
            `directory.wbt_user`.
          in: query
          name: user
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
          description: A successful response.
      tags:
        - Contacts
      description: |
        | Field       | Type 
        | ----------- | ---- 
        | **----------- READ-ONLY -----------** | 
        | `id`        | int64 
        | `ver`       | int32 
        | `etag`      | string 
        | **---------- OPERATIONAL ----------** | 
        | `created_at` | int64(epoch:milli) 
        | `created_by` | lookup(user) 
        | `updated_at` | int64(epoch:milli) 
        | `updated_by` | lookup(user) 
        | **---------- ATTRIBUTES -----------** | 
        | `name`      | name! 
        | `about`     | string 
        | `labels`    | list[label!] 
        | `emails`    | list[email!] 
        | `photos`    | list[photo!] 
        | `phones`    | list[phone!] 
        | `managers`  | list[manager!] 
        | `comments`  | list[comment!] 
        | `addresses` | list[address!] 
        | `languages` | list[language!] 
        | `timezones` | list[timezone!] 
        | `variables` | list[variable!] 
        | `imclients` | list[imClient!] 
      operationId: Contacts_SearchContacts
      summary: Search for Contact(s)
    post:
      parameters:
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
          description: A successful response.
      tags:
        - Contacts
      operationId: Contacts_CreateContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputContact'
        description: NEW Contact source changes
        required: true
      summary: Create NEW Contact
  /contacts/groups:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Filter by group name.
          in: query
          name: name
          schema:
            type: string
        - description: |-
            Filter by group type.

             - GROUP_TYPE_UNSPECIFIED: Default value
             - STATIC: Static group
             - DYNAMIC: Dynamic group
          in: query
          name: type
          schema:
            default: GROUP_TYPE_UNSPECIFIED
            enum:
              - GROUP_TYPE_UNSPECIFIED
              - STATIC
              - DYNAMIC
            type: string
        - description: Filter by only enabled group
          in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.GroupList'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_ListGroups
      summary: Retrieve a list of groups or search groups
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.CreateGroupRequest'
        description: Request message for creating a new group.
        required: true
      summary: Create a new group
  '/contacts/groups/conditions/{id}':
    delete:
      parameters:
        - description: |-
            The unique ID of the condition to delete.

            Unique ID of the condition.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_DeleteCondition
      summary: Delete a condition
    get:
      parameters:
        - description: Unique ID of the condition.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LocateConditionResponse'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_LocateCondition
      summary: Locate a condition by ID
    patch:
      parameters:
        - description: The unique ID of the condition to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_UpdateCondition2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputCondition'
        description: Input details for the condition.
        required: true
      summary: Update an existing condition
    put:
      parameters:
        - description: The unique ID of the condition to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_UpdateCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputCondition'
        description: Input details for the condition.
        required: true
      summary: Update an existing condition
  '/contacts/groups/contacts:attach':
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_AddContactsToGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.AddContactsToGroupRequest'
        description: Request message for adding contacts to a group.
        required: true
      summary: Attach contacts to multiple groups
  /contacts/groups/dynamic:
    get:
      parameters:
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Filter by group name.
          in: query
          name: name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroupList'
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_ListDynamicGroups
      summary: Retrieve a list of dynamic groups or search dynamic groups
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_CreateDynamicGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.CreateDynamicGroupRequest'
        description: Request message for creating a new dynamic group.
        required: true
      summary: Create a new dynamic group
  '/contacts/groups/{group_id}/conditions':
    get:
      parameters:
        - description: The ID of the group to which the conditions belong.
          in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Search term for conditions.
          in: query
          name: q
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ConditionList'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_ListConditions
      summary: Retrieve a list of conditions
    post:
      parameters:
        - description: The ID of the group to which the condition belongs.
          in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
          description: A successful response.
      tags:
        - DynamicConditions
      operationId: DynamicConditions_CreateCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webitel.contacts.DynamicConditions.CreateConditionBody
        required: true
      summary: Create a new condition
  '/contacts/groups/{group_id}/contact':
    delete:
      parameters:
        - description: The unique ID of the group.
          in: path
          name: group_id
          required: true
          schema:
            format: int64
            type: string
        - description: List of contact IDs to remove from the group.
          explode: true
          in: query
          name: contact_ids
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_RemoveContactsFromGroup
      summary: Remove contacts from a group
  '/contacts/groups/{id}':
    delete:
      parameters:
        - description: The unique ID of the group to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_DeleteGroup
      summary: Delete a group
    get:
      parameters:
        - description: The unique ID of the group to locate.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LocateGroupResponse'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_LocateGroup
      summary: Locate a group by ID
    patch:
      parameters:
        - description: The unique ID of the group to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_UpdateGroup2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputGroup'
        required: true
      summary: Update an existing group
    put:
      parameters:
        - description: The unique ID of the group to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
          description: A successful response.
      tags:
        - Groups
      operationId: Groups_UpdateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputGroup'
        required: true
      summary: Update an existing group
  '/contacts/groups/{id}/dynamic':
    delete:
      parameters:
        - description: The unique ID of the dynamic group to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_DeleteDynamicGroup
      summary: Delete a dynamic group
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.contacts.LocateDynamicGroupResponse
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_LocateDynamicGroup
      summary: Locate a dynamic group by ID
    patch:
      parameters:
        - description: The unique ID of the dynamic group to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_UpdateDynamicGroup2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
        description: Input details for the dynamic group.
        required: true
      summary: Update an existing dynamic group
    put:
      parameters:
        - description: The unique ID of the dynamic group to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
          description: A successful response.
      tags:
        - DynamicGroups
      operationId: DynamicGroups_UpdateDynamicGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
        description: Input details for the dynamic group.
        required: true
      summary: Update an existing dynamic group
  /contacts/labels:
    get:
      parameters:
        - description: Page number of result dataset records. offset = ((page-1)*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size+1)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: label.
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelTags'
          description: A successful response.
      tags:
        - Labels
      operationId: Labels_GetLabels
      summary: Search for Contacts engaged Label(s).
  '/contacts/{contact_id}/cases':
    get:
      parameters:
        - description: Contact ID for filtering cases.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number for pagination.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Number of results per page.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Query string for searching cases.
          in: query
          name: q
          schema:
            type: string
        - description: List of specific case IDs to retrieve.
          explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - description: 'Sorting criteria (e.g., field:asc).'
          in: query
          name: sort
          schema:
            type: string
        - description: List of fields to include in the response.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Key-value pairs for additional filtering.
          explode: true
          in: query
          name: filters
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - Cases
      operationId: SearchCases2
      summary: RPC method for searching cases.
  '/contacts/{contact_id}/chat/messages':
    get:
      parameters:
        - description: Contact identificator
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Messages ONLY starting from the specified message ID
          in: query
          name: offset.id
          schema:
            format: int64
            type: string
        - description: Messages ONLY been sent before the specified epochtime(milli).
          in: query
          name: offset.date
          schema:
            format: int64
            type: string
        - description: Number of messages to return.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Search term: message.text'
          in: query
          name: q
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Unique chat dialog
          in: query
          name: chat_id
          schema:
            type: string
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string][string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.chat.GetContactChatHistoryResponse
          description: A successful response.
      tags:
        - ContactsChatCatalog
      operationId: ContactsChatCatalog_GetContactChatHistory2
  '/contacts/{contact_id}/chat/{chat_id}/messages':
    get:
      parameters:
        - description: Contact identificator
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique chat dialog
          in: path
          name: chat_id
          required: true
          schema:
            type: string
        - description: Messages ONLY starting from the specified message ID
          in: query
          name: offset.id
          schema:
            format: int64
            type: string
        - description: Messages ONLY been sent before the specified epochtime(milli).
          in: query
          name: offset.date
          schema:
            format: int64
            type: string
        - description: Number of messages to return.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'Search term: message.text'
          in: query
          name: q
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: >-
            This is a request variable of the map type. The query format is
            "map_name[key]=value", e.g. If the map name is Age, the key type is
            string, and the value type is integer, the query parameter is
            expressed as Age["bob"]=18
          in: query
          name: 'group[string]'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.chat.GetContactChatHistoryResponse
          description: A successful response.
      tags:
        - ContactsChatCatalog
      operationId: ContactsChatCatalog_GetContactChatHistory
  '/contacts/{contact_id}/emails':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique ID(s) to remove.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              pattern: ^.+$
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_DeleteEmails
      summary: Remove email address(es) of the contact.
    get:
      parameters:
        - description: The Contact ID linked with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: email address.
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Link(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: Primary email address only.
          in: query
          name: primary
          schema:
            type: boolean
        - description: Verified email addresses only.
          in: query
          name: verified
          schema:
            type: boolean
        - description: Reference Object unique ID.
          in: query
          name: type.id
          schema:
            type: string
        - description: Reference Object well-known type.
          in: query
          name: type.type
          schema:
            type: string
        - description: Reference Object display name.
          in: query
          name: type.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_ListEmails
      summary: Locates email address(es) of the contact.
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_MergeEmails
      requestBody:
        content:
          application/json:
            schema:
              example:
                - email: user@domain
                  primary: true
                  type:
                    name: personal
                  verified: false
              items:
                $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                type: object
              type: array
        description: >-
          Fixed set of email address(es) to be linked with the contact.

          Email address(es) that conflicts(email) with already linked will be
          updated.
        required: true
      summary: Update or append email address(es) of the contact.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_ResetEmails
      requestBody:
        content:
          application/json:
            schema:
              example:
                - email: johndoe_43@gmail.com
                  type:
                    name: personal
                  verified: true
                - email: j.doe@x-company.org
                  etag: k0WqvUn4IJGnuCyG
                  primary: true
                  type:
                    id: '11'
                    name: business
              items:
                $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Final set of email address(es) to be linked with the contact.
          Email address(es) that are already linked with the contact
          but not given in here will be removed.
        required: true
      summary: Resets all emails of the contact according to the input dataset.
  '/contacts/{contact_id}/emails/{etag}':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailAddress'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_DeleteEmail
      summary: Remove the contact's email address link
    get:
      parameters:
        - description: Contact source ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: |-
            Unique mail address link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailAddress'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_LocateEmail
      summary: Locate the email address link.
    patch:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_UpdateEmail2
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: user@domain
                etag: '1679792219687'
                primary: true
                type:
                  name: personal
                verified: false
              properties:
                email:
                  description: The email address.
                  type: string
                primary:
                  description: >-
                    Indicates whether this phone number is default within other
                    channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the email address.
                    Lookup value from CommunicationType dictionary.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - other
                verified:
                  title: >-
                    Indicate whether Contact, as a Person, realy owns this
                    associated phone number.

                    In other words: whether Contact is reachable thru this
                    'email' communication channel ?
                  type: boolean
              required:
                - email
              title: NEW Update of the email address link.
              type: object
        description: NEW Update of the email address link.
        required: true
      summary: Update the contact's email address link details
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: A successful response.
      tags:
        - Emails
      operationId: Emails_UpdateEmail
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: user@domain
                etag: '1679792219687'
                primary: true
                type:
                  name: personal
                verified: false
              properties:
                email:
                  description: The email address.
                  type: string
                primary:
                  description: >-
                    Indicates whether this phone number is default within other
                    channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the email address.
                    Lookup value from CommunicationType dictionary.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - other
                verified:
                  title: >-
                    Indicate whether Contact, as a Person, realy owns this
                    associated phone number.

                    In other words: whether Contact is reachable thru this
                    'email' communication channel ?
                  type: boolean
              required:
                - email
              title: NEW Update of the email address link.
              type: object
        description: NEW Update of the email address link.
        required: true
      summary: Update the contact's email address link details
  '/contacts/{contact_id}/groups':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique ID(s) to remove.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_DeleteContactGroups
      summary: Remove the Contact's group(s).
    get:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: query
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Record(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_ListContactGroups
      summary: List of the Contact's group(s).
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_MergeContactGroups
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                type: object
              type: array
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
      summary: Associate more group(s) with the Contact.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_ResetContactGroups
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Final set of group(s) to be linked with the contact.
          Group(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
      summary: Resets all groups of the contact according to the input dataset.
  '/contacts/{contact_id}/groups/{etag}':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroup'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_DeleteContactGroup
      summary: Remove the Contact's group association.
    get:
      parameters:
        - description: Contact source ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: |-
            Unique group link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroup'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_LocateContactGroup
      summary: Locate the Contact's group association.
    patch:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_UpdateContactGroup2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Group of contacts associated.
              title: NEW Update of the group link.
              type: object
        description: NEW Update of the group link.
        required: true
      summary: Update the Contact's group details.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: A successful response.
      tags:
        - ContactGroups
      operationId: ContactGroups_UpdateContactGroup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Group of contacts associated.
              title: NEW Update of the group link.
              type: object
        description: NEW Update of the group link.
        required: true
      summary: Update the Contact's group details.
  '/contacts/{contact_id}/imclients':
    get:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: IMClient.
            `?` - matches any one character
            `*` - matches 0 or more characters
            Search fields: {user,app}
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Link(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.IMClientList'
          description: A successful response.
      tags:
        - IMClients
      operationId: IMClients_ListIMClients
      summary: Search IM client links
  '/contacts/{contact_id}/imclients/{id}':
    delete:
      parameters:
        - in: path
          name: contact_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmptyResponse'
          description: A successful response.
      tags:
        - IMClients
      operationId: IMClients_DeleteIMClient
  '/contacts/{contact_id}/labels':
    delete:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique label(s).etag identifiers.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              pattern: '^(\w+)(,\w+)*$'
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
          description: A successful response.
      tags:
        - Labels
      operationId: Labels_DeleteLabels
      summary: Remove Contact Labels associations.
    get:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = ((page-1)*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size+1)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: label tag.
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Record(s) with unique ID or ETag.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
          description: A successful response.
      tags:
        - Labels
      operationId: Labels_ListLabels
      summary: Locate the Contact's associated Label(s).
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
          description: A successful response.
      tags:
        - Labels
      operationId: Labels_MergeLabels
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputLabel'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Fixed set of label(s) to be linked with the contact.
          Label(s) that conflicts with already linked will be updated.
        required: true
      summary: Associate NEW Labels to the Contact.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
          description: A successful response.
      tags:
        - Labels
      operationId: Labels_ResetLabels
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputLabel'
                type: object
              type: array
              uniqueItems: true
        description: |-
          Final set of labels(s) to be linked with the contact.
          Label(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
      summary: Reset Labels to fit the specified final set.
  '/contacts/{contact_id}/managers':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique ID(s) to remove.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/webitel.contacts.Manager'
                  type: object
                type: array
          description: Manager dataset page.
      tags:
        - Managers
      operationId: Managers_DeleteManagers
      summary: Remove Contact Managers associations.
    get:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result. offset = ((page-1)*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size of result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: user name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Record(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_ListManagers
      summary: Search the Contact's Managers.
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_MergeManagers
      requestBody:
        content:
          application/json:
            schema:
              example:
                - primary: true
                  user:
                    id: '357'
                    name: Bruce Wayne
                - user:
                    id: '354'
                    name: Johnny Doe
              items:
                $ref: '#/components/schemas/webitel.contacts.InputManager'
                type: object
              type: array
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
      summary: Associate new Managers to the Contact.
    put:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_ResetManagers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputManager'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Final set of unique User(s) to be linked with the Contact.
          User(s) that are already linked with the Contact
          but not listed here will be removed.
          The first element will become `primary` if no other specified.
        required: true
      summary: Reset Managers to fit the specified final set.
  '/contacts/{contact_id}/managers/{etag}':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Manager'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_DeleteManager
      summary: Remove the contact's manager address link
    get:
      parameters:
        - description: Contact source ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: |-
            Unique manager link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Manager'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_LocateManager
      summary: Locate the manager address link.
    patch:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_UpdateManager2
      requestBody:
        content:
          application/json:
            schema:
              example:
                primary: true
                user:
                  id: '357'
                  name: Bruce Wayne
              properties:
                primary:
                  description: >-
                    Indicates whether this association must be default among
                    others.
                  type: boolean
                user:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Responsible User.
              title: NEW Update of the manager link.
              type: object
        description: NEW Update of the manager link.
        required: true
      summary: Update the contact's manager address link details
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: A successful response.
      tags:
        - Managers
      operationId: Managers_UpdateManager
      requestBody:
        content:
          application/json:
            schema:
              example:
                primary: true
                user:
                  id: '357'
                  name: Bruce Wayne
              properties:
                primary:
                  description: >-
                    Indicates whether this association must be default among
                    others.
                  type: boolean
                user:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Responsible User.
              title: NEW Update of the manager link.
              type: object
        description: NEW Update of the manager link.
        required: true
      summary: Update the contact's manager address link details
  '/contacts/{contact_id}/phones':
    delete:
      parameters:
        - description: The Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of linked ID(s) to be removed.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_DeletePhones
      summary: Remove the Contact's phone number association(s)
    get:
      parameters:
        - description: The Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: phone number.
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Link(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: Primary phone  only.
          in: query
          name: primary
          schema:
            type: boolean
        - description: Verified phone only.
          in: query
          name: verified
          schema:
            type: boolean
        - description: Reference Object unique ID.
          in: query
          name: type.id
          schema:
            type: string
        - description: Reference Object well-known type.
          in: query
          name: type.type
          schema:
            type: string
        - description: Reference Object display name.
          in: query
          name: type.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_ListPhones
      summary: Search phone number(s)
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_MergePhones
      requestBody:
        content:
          application/json:
            schema:
              example:
                - number: +38 (099) 672-23-54
                  primary: true
                  type:
                    name: mobile
                  verified: false
              items:
                $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                type: object
              type: array
        description: |-
          Fixed set of phone number(s) to be linked with the Contact.
          Phone number(s) that conflicts with already linked will be updated.
        required: true
      summary: Associate phone number(s) with the Contact
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_ResetPhones
      requestBody:
        content:
          application/json:
            schema:
              example:
                - etag: '1679792219687'
                  number: +38 (099) 672-23-54
                  primary: true
                  type:
                    name: personal
                  verified: true
                - number: +1 482 555-36558
                  type:
                    name: business
              items:
                $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Final set of phone number(s) to be linked with the contact.
          Phone number(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
      summary: Reset the Contact's phone numbers to fit given data set.
  '/contacts/{contact_id}/phones/{etag}':
    delete:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique link ID to be removed.
          in: path
          name: etag
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_DeletePhone
      summary: Remove the Contact's phone number
    get:
      parameters:
        - description: Reference Contact unique ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: 'Fields [Q]uery to build result record.'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_LocatePhone
      summary: Locate the Contact's phone number association.
    patch:
      parameters:
        - description: The Contact ID to be associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_UpdatePhone2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                number:
                  description: The phone number.
                  type: string
                primary:
                  description: >-
                    Indicates whether this phone number is default within other
                    channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the phone number.
                    Reference on CommunicationType dictionary.
                    Used for outbound routing while dialup a phone number.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - mobile
                    - homeFax
                    - workFax
                    - otherFax
                    - pager
                    - workMobile
                    - workPager
                    - main
                    - googleVoice
                    - other
                verified:
                  title: >-
                    Indicate whether Contact, as a Person, realy owns this
                    associated phone number.

                    In other words: whether Contact is reachable thru this
                    'phone' communication channel ?
                  type: boolean
              required:
                - number
              title: NEW Update of the phone number details.
              type: object
        description: NEW Update of the phone number details.
        required: true
      summary: Update the Contact's phone number association details
    put:
      parameters:
        - description: The Contact ID to be associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: A successful response.
      tags:
        - Phones
      operationId: Phones_UpdatePhone
      requestBody:
        content:
          application/json:
            schema:
              properties:
                number:
                  description: The phone number.
                  type: string
                primary:
                  description: >-
                    Indicates whether this phone number is default within other
                    channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the phone number.
                    Reference on CommunicationType dictionary.
                    Used for outbound routing while dialup a phone number.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - mobile
                    - homeFax
                    - workFax
                    - otherFax
                    - pager
                    - workMobile
                    - workPager
                    - main
                    - googleVoice
                    - other
                verified:
                  title: >-
                    Indicate whether Contact, as a Person, realy owns this
                    associated phone number.

                    In other words: whether Contact is reachable thru this
                    'phone' communication channel ?
                  type: boolean
              required:
                - number
              title: NEW Update of the phone number details.
              type: object
        description: NEW Update of the phone number details.
        required: true
      summary: Update the Contact's phone number association details
  '/contacts/{contact_id}/timeline':
    get:
      parameters:
        - in: path
          name: contact_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int64
            type: string
        - in: query
          name: size
          schema:
            format: int64
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - in: query
          name: date_from
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: type
          schema:
            items:
              enum:
                - chat
                - call
                - email
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.GetTimelineResponse'
          description: A successful response.
      tags:
        - Timeline
      operationId: Timeline_GetTimeline
  '/contacts/{contact_id}/timeline/counter':
    get:
      parameters:
        - in: path
          name: contact_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.contacts.GetTimelineCounterResponse
          description: A successful response.
      tags:
        - Timeline
      operationId: Timeline_GetTimelineCounter
  '/contacts/{contact_id}/timezones':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique ID(s) to remove.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_DeleteTimezones
      summary: Remove the Contact's timezone(s).
    get:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Record(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: Primary timezone only.
          in: query
          name: primary
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_ListTimezones
      summary: List of the Contact's timezone(s).
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_MergeTimezones
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                type: object
              type: array
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
      summary: Associate more timezone(s) with the Contact.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_ResetTimezones
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: |-
          Final set of timezone(s) to be linked with the contact.
          Timezone(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
      summary: Resets all timezones of the contact according to the input dataset.
  '/contacts/{contact_id}/timezones/{etag}':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Timezone'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_DeleteTimezone
      summary: Remove the Contact's timezone association.
    get:
      parameters:
        - description: Contact source ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: |-
            Unique timezone link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Timezone'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_LocateTimezone
      summary: Locate the Contact's timezone association.
    patch:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_UpdateTimezone2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary:
                  description: >-
                    Indicates whether this association must be default among
                    others.
                  type: boolean
                timezone:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Timezone dictionary reference value associated.
              title: NEW Update of the timezone link.
              type: object
        description: NEW Update of the timezone link.
        required: true
      summary: Update the Contact's timezone details.
    put:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: A successful response.
      tags:
        - Timezones
      operationId: Timezones_UpdateTimezone
      requestBody:
        content:
          application/json:
            schema:
              properties:
                primary:
                  description: >-
                    Indicates whether this association must be default among
                    others.
                  type: boolean
                timezone:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  description: Timezone dictionary reference value associated.
              title: NEW Update of the timezone link.
              type: object
        description: NEW Update of the timezone link.
        required: true
      summary: Update the Contact's timezone details.
  '/contacts/{contact_id}/variables':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Set of unique ID(s) to remove.
          explode: true
          in: query
          name: etag
          required: true
          schema:
            items:
              pattern: ^.+$
              type: string
            type: array
            uniqueItems: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_DeleteVariables
      summary: Remove variable(s) of the contact
    get:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Page number of result. offset = ((page-1)*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size of result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term: variable key;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Record(s) with unique ID only.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_ListVariables
      summary: List variables of the contact
    post:
      parameters:
        - description: Link contact ID.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_MergeVariables
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputVariable'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: >-
          Fixed object of unique variables to associate with a Contact.

          Each individual key of an object represents a separate variable.

          Variable{key} already linked with the Contact and listed here will be
          updated.
        required: true
      summary: Update or append variables to the contact
    put:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_ResetVariables
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.contacts.InputVariable'
                type: object
              minItems: 1
              type: array
              uniqueItems: true
        description: >-
          Fixed object of unique variables to associate with a Contact.

          Each individual key of an object represents a separate variable.

          Variable{key} already linked with the Contact but not listed here will
          be removed.
        required: true
      summary: Reset all variables of the contact
  '/contacts/{contact_id}/variables/{etag}':
    delete:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Variable'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_DeleteVariable
      summary: Remove the contact's variable by etag
    patch:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_UpdateVariable2
      requestBody:
        content:
          application/json:
            schema:
              example:
                key: var_rename
                value:
                  - string_item
                  - - 3
                    - 7
                  - false
                  - null
              properties:
                key:
                  description: NEW Key.
                  pattern: ^\w+$
                  type: string
                value:
                  description: NEW Value.
              required:
                - key
              title: NEW Variable update.
              type: object
        description: NEW Variable update.
        required: true
      summary: Update contact variable
    put:
      parameters:
        - description: Contact ID associated with.
          in: path
          name: contact_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: A successful response.
      tags:
        - Variables
      operationId: Variables_UpdateVariable
      requestBody:
        content:
          application/json:
            schema:
              example:
                key: var_rename
                value:
                  - string_item
                  - - 3
                    - 7
                  - false
                  - null
              properties:
                key:
                  description: NEW Key.
                  pattern: ^\w+$
                  type: string
                value:
                  description: NEW Value.
              required:
                - key
              title: NEW Variable update.
              type: object
        description: NEW Variable update.
        required: true
      summary: Update contact variable
  '/contacts/{etag}':
    delete:
      parameters:
        - description: Unique ID of the latest version of a resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
          description: A successful response.
      tags:
        - Contacts
      operationId: Contacts_DeleteContact
      summary: Remove Contact source
    get:
      parameters:
        - description: |-
            The Contact source IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            The requirement of a special access mode to the Source.

             - READ: Can `fetch` record. [GET]
             - WRITE: Can `update` record. [PUT|PATCH]
             - DELETE: Can `delete` record. [DELETE]
          in: query
          name: mode
          schema:
            default: READ
            enum:
              - READ
              - WRITE
              - DELETE
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
          description: A successful response.
      tags:
        - Contacts
      operationId: Contacts_LocateContact
      summary: Locate Contact source
    patch:
      parameters:
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
          description: A successful response.
      tags:
        - Contacts
      operationId: Contacts_UpdateContact
      requestBody:
        content:
          application/json:
            schema:
              properties:
                about:
                  description: |-
                    BIO. Short description about the Contact person.
                    OPTIONAL. Multi-lined text.
                  type: string
                comments:
                  description: Publish NEW comment(s) for this Contact.
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputComment'
                    type: object
                  type: array
                custom:
                  description: Custom extension data fields.
                  type: object
                emails:
                  description: The Contact's email address(es).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                    type: object
                  type: array
                groups:
                  description: The Contact's associated group(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                    type: object
                  type: array
                imclients:
                  description: 'The contact''s [I]nstant[M]essaging clients.'
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputIMClient'
                    type: object
                  type: array
                labels:
                  description: The Contact's associated label(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputLabel'
                    type: object
                  type: array
                languages:
                  description: A Contact's locale preference(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputLanguage'
                    type: object
                  type: array
                managers:
                  description: The Contact's internal manager(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputManager'
                    type: object
                  type: array
                name:
                  $ref: '#/components/schemas/webitel.contacts.InputName'
                  title: The Contact's name. Singleton
                phones:
                  description: The Contact's phone numbers.
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                    type: object
                  type: array
                photos:
                  description: Output only. The Contact's photo(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputPhoto'
                    type: object
                  readOnly: true
                  type: array
                timezones:
                  description: The Contact's timezone preference(s).
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                    type: object
                  type: array
                variables:
                  description: Arbitrary client data that is populated by clients.
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputVariable'
                    type: object
                  type: array
              title: NEW Contact source changes
              type: object
        description: NEW Contact source changes
        required: true
      summary: NEW Update of the Contact source
  /customer:
    get:
      parameters:
        - description: |-
            Available Filters

            show by customer id; serial number (uuid)
          in: query
          name: id
          schema:
            type: string
        - description: show if valid only!
          in: query
          name: valid
          schema:
            type: boolean
        - description: identifier
          in: query
          name: domain.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: domain.name
          schema:
            type: string
        - description: |-
            Request Controls

            serial,
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetCustomerResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_GetCustomer
      summary: >-
        rpc GetCertificate(CertificateUsageRequest) returns
        (CertificateUsageResponse) {}
    put:
      parameters:
        - description: '[optional] e.g.: Example Org.'
          in: query
          name: organization
          schema:
            type: string
        - description: '[optional] logo source image'
          in: query
          name: logo_picture
          schema:
            format: byte
            type: string
        - description: >-
            [optional] raw bytes protobuf::base64.RawStdEncoding !=
            certificate::base64.StdEncoding
          in: query
          name: certificate
          schema:
            format: byte
            type: string
        - in: query
          name: revoke
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateCustomerResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_UpdateCustomer
  '/customer/{customer_id}/license':
    get:
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: string
        - description: |-
            ----- Search Options ----- //

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: set of output fields
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: identifier
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
        - description: identifier
          in: query
          name: domain.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: domain.name
          schema:
            type: string
        - description: by serial number(s)
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: by product name(s)
          explode: true
          in: query
          name: product
          schema:
            items:
              type: string
            type: array
        - description: |-
            view: all|valid|grantable

            show: available to be granted
          in: query
          name: valid
          schema:
            type: boolean
        - description: 'filter: term of search'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_LicenseUsage
  '/customer/{id}':
    get:
      parameters:
        - description: |-
            Available Filters

            show by customer id; serial number (uuid)
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: show if valid only!
          in: query
          name: valid
          schema:
            type: boolean
        - description: identifier
          in: query
          name: domain.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: domain.name
          schema:
            type: string
        - description: |-
            Request Controls

            serial,
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetCustomerResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_GetCustomer2
      summary: >-
        rpc GetCertificate(CertificateUsageRequest) returns
        (CertificateUsageResponse) {}
  /devices:
    delete:
      parameters:
        - in: query
          name: id
          schema:
            format: int64
            type: string
        - in: query
          name: permanent
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_DeleteDevice2
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: string
              type: array
        description: bulk
        required: true
    get:
      parameters:
        - description: |-
            ----- Select Options -------------------------

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          explode: true
          in: query
          name: ids
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'term-of-search: lookup[name,account,hotdesk,brand,model,mac,ip]'
          in: query
          name: q
          schema:
            type: string
        - description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          in: query
          name: name
          schema:
            type: string
        - description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          in: query
          name: access
          schema:
            type: string
        - description: |-
            ----- Device-Specific Filters ----------------

            substring like '%name%'
          in: query
          name: account
          schema:
            type: string
        - description: 'filter: has hotdesk (=pattern); is hotdesk (=*)'
          in: query
          name: hotdesk
          schema:
            type: string
        - description: Object ID
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: Display Name
          in: query
          name: user.name
          schema:
            type: string
        - description: 'filter: by MAC address'
          in: query
          name: mac
          schema:
            type: string
        - description: 'filter: by IP address'
          in: query
          name: ip
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_SearchDevice
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_CreateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Device'
        description: string password = 2;
        required: true
  '/devices/{device.id}':
    patch:
      parameters:
        - description: object id
          in: path
          name: device.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'PATCH: partial update'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_UpdateDevice2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: username
                  title: credentials
                  type: string
                brand:
                  description: vendor brand name
                  title: provision
                  type: string
                created_at:
                  format: int64
                  title: unix
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deleted_at:
                  format: int64
                  title: unix
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                hotdesk:
                  description: act as a hotdesk
                  title: 'Hotdesk: this workstation aliases'
                  type: boolean
                hotdesks:
                  items:
                    type: string
                  title: associated aliases
                  type: array
                ip:
                  type: string
                logged_in:
                  format: int64
                  title: |-
                    caller profile
                     webitel.adt.caller caller = 4;
                  type: string
                mac:
                  title: static
                  type: string
                model:
                  type: string
                name:
                  description: display name
                  title: |-
                    kind of
                    DeviceType type = 19;
                  type: string
                password:
                  title: password
                  type: string
                provision:
                  additionalProperties:
                    type: string
                  title: provision extra data
                  type: object
                reged:
                  title: |-
                    TODO: something like PresenceStatus instead of Registration
                     repeated Registration contacts = 16;
                  type: boolean
                updated_at:
                  format: int64
                  title: unix
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                user:
                  $ref: '#/components/schemas/api.UserId'
                  title: '[optional] The user that ''owns'' the device;'
              title: Device profile
              type: object
        description: Device profile
        required: true
    put:
      parameters:
        - description: object id
          in: path
          name: device.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'PATCH: partial update'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_UpdateDevice
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: username
                  title: credentials
                  type: string
                brand:
                  description: vendor brand name
                  title: provision
                  type: string
                created_at:
                  format: int64
                  title: unix
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deleted_at:
                  format: int64
                  title: unix
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                hotdesk:
                  description: act as a hotdesk
                  title: 'Hotdesk: this workstation aliases'
                  type: boolean
                hotdesks:
                  items:
                    type: string
                  title: associated aliases
                  type: array
                ip:
                  type: string
                logged_in:
                  format: int64
                  title: |-
                    caller profile
                     webitel.adt.caller caller = 4;
                  type: string
                mac:
                  title: static
                  type: string
                model:
                  type: string
                name:
                  description: display name
                  title: |-
                    kind of
                    DeviceType type = 19;
                  type: string
                password:
                  title: password
                  type: string
                provision:
                  additionalProperties:
                    type: string
                  title: provision extra data
                  type: object
                reged:
                  title: |-
                    TODO: something like PresenceStatus instead of Registration
                     repeated Registration contacts = 16;
                  type: boolean
                updated_at:
                  format: int64
                  title: unix
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                user:
                  $ref: '#/components/schemas/api.UserId'
                  title: '[optional] The user that ''owns'' the device;'
              title: Device profile
              type: object
        description: Device profile
        required: true
  '/devices/{device.id}/registered':
    get:
      parameters:
        - description: Object ID
          in: path
          name: device.id
          required: true
          schema:
            format: int64
            type: string
        - description: Object ID
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: Display Name
          in: query
          name: user.name
          schema:
            type: string
        - description: Display Name
          in: query
          name: device.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListRegistrationsResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_ListRegistrations
  '/devices/{device.id}/users/audit':
    get:
      parameters:
        - description: Object ID
          in: path
          name: device.id
          required: true
          schema:
            format: int64
            type: string
        - description: Object ID
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: Display Name
          in: query
          name: user.name
          schema:
            type: string
        - description: Display Name
          in: query
          name: device.name
          schema:
            type: string
        - description: |-
            Filter: timing range (optional)

            unix milliseconds
          in: query
          name: time_from
          schema:
            format: int64
            type: string
        - description: unix milliseconds
          in: query
          name: time_till
          schema:
            format: int64
            type: string
        - description: Search Options
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeviceAuditResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_SearchDeviceAudit
      summary: '----- Details (1:M) ----------------------------------------------'
  '/devices/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: permanent
          schema:
            type: boolean
        - description: bulk
          explode: true
          in: query
          name: ids
          schema:
            items:
              format: int64
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_DeleteDevice
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: output selection
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDeviceResponse'
          description: A successful response.
      tags:
        - Devices
      operationId: Devices_ReadDevice
  '/dictionaries/{repo}':
    delete:
      parameters:
        - description: '[`types.repo`]'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result dataset.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: '[`record.id`]'
          explode: true
          in: query
          name: id
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
          description: A successful response.
      tags:
        - Dictionaries
      operationId: Dictionaries_DeleteData
      summary: Delete a dictionary records.
    get:
      parameters:
        - description: '[`types.repo`]'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: |-
            Number of result records (per page).
            Default: 16.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Page number of result set of records.
            Default: 1.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          in: query
          name: q
          schema:
            type: string
        - description: '[`record.id`]'
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
          description: A successful response.
      tags:
        - Dictionaries
      operationId: Dictionaries_SearchData
      summary: Lookup a dictionary dataset.
    post:
      parameters:
        - description: '[`types.repo`]'
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Record) {'
      operationId: Dictionaries_CreateData
      requestBody:
        content:
          application/json:
            schema:
              example:
                capital:
                  id: 44
                  name: Київ
                code: 38
                name: Україна
              type: object
        description: Record data.
        required: true
      summary: Create a dictionary record.
  '/dictionaries/{repo}/csv':
    post:
      parameters:
        - description: '`types.repo`'
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
          description: A successful response.
      tags:
        - Dictionaries
      operationId: Dictionaries_ImportCSV
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  format: byte
                  title: CSV data
                  type: string
                fields:
                  additionalProperties:
                    format: int64
                    type: integer
                  title: 'map < field, column > index'
                  type: object
                line_begin:
                  format: int64
                  type: integer
                line_end:
                  format: int64
                  type: integer
                on_data_error:
                  $ref: >-
                    #/components/schemas/webitel.proto.data.ImportCSVRequest.action
                on_empty_line:
                  $ref: >-
                    #/components/schemas/webitel.proto.data.ImportCSVRequest.action
              type: object
        required: true
      summary: Import dataset from CSV file.
  '/dictionaries/{repo}/{id}':
    delete:
      parameters:
        - description: '[`types.repo`]'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: '[`record.id`]'
          in: path
          name: id
          required: true
          schema:
            items:
              type: string
            minItems: 1
            type: array
          style: simple
        - description: Fields to be retrieved into result dataset.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
          description: A successful response.
      tags:
        - Dictionaries
      operationId: Dictionaries_DeleteData2
      summary: Delete a dictionary records.
    get:
      parameters:
        - description: '[`types.repo`]'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: '[`record.id`]'
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
              uniqueItems: true
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Record) {'
      operationId: Dictionaries_LocateData
      summary: Locate a dictionary record.
    patch:
      parameters:
        - description: '[`types.repo`] data source'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: '[`record.id`] for update'
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Record) {'
      operationId: Dictionaries_UpdateData
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Record data fields changes.
        required: true
      summary: Update a dictionary record.
    put:
      parameters:
        - description: '[`types.repo`] data source'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: '[`record.id`] for update'
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Record) {'
      operationId: Dictionaries_UpdateData2
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Record data fields changes.
        required: true
      summary: Update a dictionary record.
  /domain:
    delete:
      parameters:
        - in: query
          name: domain
          schema:
            type: string
        - in: query
          name: dc
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_DeleteDomain
    get:
      parameters:
        - in: query
          name: domain
          schema:
            type: string
        - in: query
          name: dc
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_ReadDomain
  /domains:
    get:
      parameters:
        - description: like
          in: query
          name: domain
          schema:
            type: string
        - description: attrs
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - in: query
          name: page
          schema:
            format: int64
            type: string
        - in: query
          name: size
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchDomainsResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_SearchDomains
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_CreateDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateDomainRequest'
        required: true
  '/domains/{dc}':
    delete:
      parameters:
        - in: path
          name: dc
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_DeleteDomain2
    get:
      parameters:
        - in: path
          name: dc
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_ReadDomain2
  '/domains/{domain.dc}':
    patch:
      parameters:
        - description: component
          in: path
          name: domain.dc
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_UpdateDomain2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
        required: true
    put:
      parameters:
        - description: component
          in: path
          name: domain.dc
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDomainResponse'
          description: A successful response.
      tags:
        - Domains
      operationId: Domains_UpdateDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
        required: true
  /email/profile:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListEmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: SearchEmailProfile
      summary: Search EmailProfile
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: CreateEmailProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateEmailProfileRequest'
        required: true
      summary: Create EmailProfile
  '/email/profile/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: DeleteEmailProfile
      summary: Remove EmailProfile
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: ReadEmailProfile
      summary: EmailProfile item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: PatchEmailProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.EmailProfileService.PatchEmailProfileBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: UpdateEmailProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.EmailProfileService.UpdateEmailProfileBody
        required: true
      summary: Update EmailProfile
  '/email/profile/{id}/login':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.LoginEmailProfileResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: LoginEmailProfile
  '/email/profile/{id}/logout':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.LogoutEmailProfileResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: LogoutEmailProfile
  '/email/profile/{id}/test':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TestEmailProfileResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - EmailProfileService
      operationId: TestEmailProfile
      summary: EmailProfile check login
  /hook:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListWebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: SearchWebHook
      summary: List of WebHook
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: CreateWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateWebHookRequest'
        required: true
      summary: Create WebHook
  '/hook/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: DeleteWebHook
      summary: Remove WebHook
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: ReadWebHook
      summary: WebHook item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: PatchWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.WebHookService.PatchWebHookBody'
        required: true
      summary: Patch WebHook
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - WebHookService
      operationId: UpdateWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.WebHookService.UpdateWebHookBody'
        required: true
      summary: Update WebHook
  /ldap:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_DeleteLDAPCatalog2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DeleteLDAPRequest'
        required: true
      summary: Delete LDAP profile(s) ...
    get:
      parameters:
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'term-of-search: lookup[name]'
          in: query
          name: q
          schema:
            type: string
        - description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          in: query
          name: name
          schema:
            type: string
        - description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          in: query
          name: access
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchLDAPResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_SearchLDAPCatalog
      summary: Search for LDAP directories ...
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_CreateLDAPCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAPCatalog'
        required: true
      summary: Create LDAP profile
  /ldap/search:
    get:
      parameters:
        - description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          in: query
          name: catalog_id
          schema:
            format: int64
            type: string
        - description: |-
            Optional. URL to establish connection to LDAP catalog

            URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]
          in: query
          name: url
          schema:
            type: string
        - description: |-
            TODO: (!)

            base64
          in: query
          name: tls.PEM
          schema:
            format: byte
            type: string
        - description: |-
            ----- BIND: Authorization -----

            authorization method e.g.: SIMPLE, SAML, NTLM, etc.
          in: query
          name: bind
          schema:
            type: string
        - description: bind_dn
          in: query
          name: username
          schema:
            type: string
        - description: password
          in: query
          name: password
          schema:
            type: string
        - description: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          in: query
          name: baseObject
          schema:
            type: string
        - description: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          in: query
          name: scope
          schema:
            format: int32
            type: integer
        - description: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          in: query
          name: derefAliases
          schema:
            format: int32
            type: integer
        - description: 'INTEGER (0 ..  maxInt),'
          in: query
          name: sizeLimit
          schema:
            format: int64
            type: string
        - description: 'INTEGER (0 ..  maxInt),'
          in: query
          name: timeLimit
          schema:
            format: int64
            type: string
        - description: 'BOOLEAN,'
          in: query
          name: typesOnly
          schema:
            type: boolean
        - description: 'Filter,'
          in: query
          name: filter
          schema:
            type: string
        - description: AttributeSelection
          explode: true
          in: query
          name: attributes
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LDAPSearch4
      summary: LDAPSearch performs LDAP Search operation ...
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LDAPSearch3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAPSearchRequest'
        required: true
      summary: LDAPSearch performs LDAP Search operation ...
  '/ldap/{catalog.id}':
    patch:
      parameters:
        - description: |-
            identity
            int64 dc = 1;
          in: path
          name: catalog.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_UpdateLDAPCatalog2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
        required: true
      summary: Update LDAP profile details
    put:
      parameters:
        - description: |-
            identity
            int64 dc = 1;
          in: path
          name: catalog.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_UpdateLDAPCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
        required: true
      summary: Update LDAP profile details
  '/ldap/{catalog.id}/templates':
    post:
      parameters:
        - description: identifier
          in: path
          name: catalog.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_CreateLDAPTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.CreateLDAPTemplateBody'
        required: true
  '/ldap/{catalog_id}/rsync':
    get:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search process by unique .id
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: OPTIONAL. Filter(s) SET
          in: query
          name: q
          schema:
            type: string
        - in: query
          name: template
          schema:
            type: string
        - explode: true
          in: query
          name: objclass
          schema:
            items:
              type: string
            type: array
        - description: WITH .errs
          in: query
          name: failed
          schema:
            type: boolean
        - description: created|updated
          in: query
          name: enabled
          schema:
            type: boolean
        - description: deleted
          in: query
          name: disabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcessResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_SearchLDAProcess
      summary: '(ResyncLDAPResponse) {'
    post:
      parameters:
        - description: |-
            LDAP Catalog unique IDentifier to sync with

            catalog_id
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcess'
          description: A successful response.
      tags:
        - LDAP
      description: '(ResyncLDAPResponse) {'
      operationId: LDAP_ResyncLDAPCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.ResyncLDAPCatalogBody'
        required: true
      summary: Resync LDAP directory catalog changes ...
  '/ldap/{catalog_id}/rsync/{id}':
    get:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search process by unique .id
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: OPTIONAL. Filter(s) SET
          in: query
          name: q
          schema:
            type: string
        - in: query
          name: template
          schema:
            type: string
        - explode: true
          in: query
          name: objclass
          schema:
            items:
              type: string
            type: array
        - description: WITH .errs
          in: query
          name: failed
          schema:
            type: boolean
        - description: created|updated
          in: query
          name: enabled
          schema:
            type: boolean
        - description: deleted
          in: query
          name: disabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcess'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LocateLDAProcess
      summary: '(ResyncLDAPResponse) {'
  '/ldap/{catalog_id}/search':
    get:
      parameters:
        - description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            Optional. URL to establish connection to LDAP catalog

            URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]
          in: query
          name: url
          schema:
            type: string
        - description: |-
            TODO: (!)

            base64
          in: query
          name: tls.PEM
          schema:
            format: byte
            type: string
        - description: |-
            ----- BIND: Authorization -----

            authorization method e.g.: SIMPLE, SAML, NTLM, etc.
          in: query
          name: bind
          schema:
            type: string
        - description: bind_dn
          in: query
          name: username
          schema:
            type: string
        - description: password
          in: query
          name: password
          schema:
            type: string
        - description: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          in: query
          name: baseObject
          schema:
            type: string
        - description: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          in: query
          name: scope
          schema:
            format: int32
            type: integer
        - description: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          in: query
          name: derefAliases
          schema:
            format: int32
            type: integer
        - description: 'INTEGER (0 ..  maxInt),'
          in: query
          name: sizeLimit
          schema:
            format: int64
            type: string
        - description: 'INTEGER (0 ..  maxInt),'
          in: query
          name: timeLimit
          schema:
            format: int64
            type: string
        - description: 'BOOLEAN,'
          in: query
          name: typesOnly
          schema:
            type: boolean
        - description: 'Filter,'
          in: query
          name: filter
          schema:
            type: string
        - description: AttributeSelection
          explode: true
          in: query
          name: attributes
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LDAPSearch2
      summary: LDAPSearch performs LDAP Search operation ...
    post:
      parameters:
        - description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LDAPSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.LDAPSearchBody'
        required: true
      summary: LDAPSearch performs LDAP Search operation ...
  '/ldap/{catalog_id}/templates':
    delete:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_DeleteLDAPTemplate2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
        required: true
    get:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: OPTIONAL. Filter(s) SET
          in: query
          name: q
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: base_dn
          schema:
            type: string
        - in: query
          name: objclass
          schema:
            type: string
        - in: query
          name: enabled
          schema:
            type: boolean
        - in: query
          name: disabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_SearchLDAPTemplate
  '/ldap/{catalog_id}/templates/{id}':
    delete:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_DeleteLDAPTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
        required: true
    get:
      parameters:
        - description: REQUIRED. Parent LDAP catalog IDentifier
          in: path
          name: catalog_id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: OPTIONAL. Filter(s) SET
          in: query
          name: q
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: base_dn
          schema:
            type: string
        - in: query
          name: objclass
          schema:
            type: string
        - in: query
          name: enabled
          schema:
            type: boolean
        - in: query
          name: disabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LocateLDAPTemplate
  '/ldap/{id}':
    delete:
      parameters:
        - description: catalog id
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: WITH objects bound to ?
          in: query
          name: related_objects
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_DeleteLDAPCatalog
      summary: Delete LDAP profile(s) ...
    get:
      parameters:
        - description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'term-of-search: lookup[name]'
          in: query
          name: q
          schema:
            type: string
        - description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          in: query
          name: name
          schema:
            type: string
        - description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          in: query
          name: access
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_LocateLDAPCatalog
      summary: Read LDAP catalog profile by .id
  '/ldap/{template.catalog.id}/templates/{template.id}':
    patch:
      parameters:
        - description: identifier
          in: path
          name: template.catalog.id
          required: true
          schema:
            format: int64
            type: string
        - description: ID unique
          in: path
          name: template.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_UpdateLDAPTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
        required: true
    put:
      parameters:
        - description: identifier
          in: path
          name: template.catalog.id
          required: true
          schema:
            format: int64
            type: string
        - description: ID unique
          in: path
          name: template.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
          description: A successful response.
      tags:
        - LDAP
      operationId: LDAP_UpdateLDAPTemplate2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
        required: true
  /license:
    get:
      parameters:
        - description: |-
            ----- Search Options ----- //

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: set of output fields
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: identifier
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
        - description: identifier
          in: query
          name: domain.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: domain.name
          schema:
            type: string
        - in: query
          name: customer_id
          schema:
            type: string
        - description: by serial number(s)
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: by product name(s)
          explode: true
          in: query
          name: product
          schema:
            items:
              type: string
            type: array
        - description: |-
            view: all|valid|grantable

            show: available to be granted
          in: query
          name: valid
          schema:
            type: boolean
        - description: 'filter: term of search'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_LicenseUsage2
  /logger/available_objects:
    get:
      parameters:
        - in: query
          name: include_existing
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerSystemObjects'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_ReadSystemObjects
  /logger/config:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: NOT USED.
          explode: true
          in: query
          name: object
          schema:
            items:
              enum:
                - cc_queue
                - schema
                - users
                - devices
                - calendars
                - cc_list
                - cc_team
                - cc_agent
                - cc_resource
                - cc_resource_group
                - chat_bots
                - cases
                - contacts
                - cc_list_number
                - case_comments
                - record_file
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfigs'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_SearchConfig
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_CreateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerCreateConfigRequest'
        required: true
  '/logger/config/{config_id}':
    delete:
      parameters:
        - in: path
          name: config_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerEmpty'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_DeleteConfig
    get:
      parameters:
        - in: path
          name: config_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_ReadConfig
    patch:
      parameters:
        - in: path
          name: config_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_PatchConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerPatchConfigRequest'
        required: true
    put:
      parameters:
        - in: path
          name: config_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - ConfigService
      operationId: ConfigService_UpdateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerUpdateConfigRequest'
        required: true
  '/logger/config/{config_id}/logs':
    get:
      parameters:
        - in: path
          name: config_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: user_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: action
          schema:
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
            type: array
        - in: query
          name: user_ip
          schema:
            type: string
        - in: query
          name: date_from
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - LoggerService
      operationId: LoggerService_SearchLogByConfigId
  '/logger/user/{user_id}/logs':
    get:
      parameters:
        - description: REQUIRED filter
          in: path
          name: user_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: SPECIFIC filter.
          explode: true
          in: query
          name: object_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: GENERAL filters.
          explode: true
          in: query
          name: action
          schema:
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
            type: array
        - in: query
          name: user_ip
          schema:
            type: string
        - in: query
          name: date_from
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - LoggerService
      operationId: LoggerService_SearchLogByUserId
  '/logger/{object}/record/{record_id}/logs':
    get:
      parameters:
        - description: SPECIFIC filter
          in: path
          name: object
          required: true
          schema:
            enum:
              - cc_queue
              - schema
              - users
              - devices
              - calendars
              - cc_list
              - cc_team
              - cc_agent
              - cc_resource
              - cc_resource_group
              - chat_bots
              - cases
              - contacts
              - cc_list_number
              - case_comments
              - record_file
            type: string
        - description: REQUIRED filter
          in: path
          name: record_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: GENERAL filters.
          explode: true
          in: query
          name: action
          schema:
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
            type: array
        - explode: true
          in: query
          name: user_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: user_ip
          schema:
            type: string
        - in: query
          name: date_from
          schema:
            format: int64
            type: string
        - in: query
          name: date_to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      tags:
        - LoggerService
      operationId: LoggerService_SearchLogByRecordId
  /oauth/apps:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteOAuthServiceResponse'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_DeleteOAuthService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DeleteOAuthServiceRequest'
        required: true
    get:
      parameters:
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'term-of-search: lookup[name]'
          in: query
          name: q
          schema:
            type: string
        - description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          in: query
          name: name
          schema:
            type: string
        - description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          in: query
          name: access
          schema:
            type: string
        - description: '----- OAuthService-Specific Filters ----------------'
          in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchOAuthServiceResponse'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_SearchOAuthService
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_CreateOAuthService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuthService'
        required: true
  '/oauth/apps/{changes.id}':
    patch:
      parameters:
        - in: path
          name: changes.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_UpdateOAuthService2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
        required: true
    put:
      parameters:
        - in: path
          name: changes.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_UpdateOAuthService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
        required: true
  '/oauth/apps/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteOAuthServiceResponse'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_DeleteOAuthService2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.DeleteOAuthServiceBody'
        required: true
    get:
      parameters:
        - description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          in: path
          name: id
          required: true
          schema:
            items:
              format: int64
              type: string
            minItems: 1
            type: array
          style: simple
        - description: |-
            ----- Select Options -------------------------

            default: 1
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'default: 16'
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'term-of-search: lookup[name]'
          in: query
          name: q
          schema:
            type: string
        - description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          in: query
          name: name
          schema:
            type: string
        - description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          in: query
          name: access
          schema:
            type: string
        - description: '----- OAuthService-Specific Filters ----------------'
          in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
          description: A successful response.
      tags:
        - OAuth2Federation
      operationId: OAuth2Federation_LocateOAuthService
  /objclass:
    get:
      parameters:
        - description: TO BE REMOVED // bound to session.domain.id
          in: query
          name: domain
          schema:
            type: string
        - description: '[filter]: like ''%class%'''
          in: query
          name: class
          schema:
            type: string
        - description: |-
            int64 id = 3;  // [filter]: obj.id = id
            controls

            output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'sort: "field" asc; "!field" desc'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: page number
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: page size
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchClassesResponse'
          description: A successful response.
      tags:
        - Classes
      operationId: Classes_SearchClasses
  '/objclass/{class.id}':
    patch:
      parameters:
        - description: '(class::object).id'
          in: path
          name: class.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateClassResponse'
          description: A successful response.
      tags:
        - Classes
      operationId: Classes_UpdateClass2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Classes.UpdateClassBody'
        required: true
    put:
      parameters:
        - description: '(class::object).id'
          in: path
          name: class.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateClassResponse'
          description: A successful response.
      tags:
        - Classes
      operationId: Classes_UpdateClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Classes.UpdateClassBody'
        required: true
  '/objclass/{id}':
    get:
      parameters:
        - description: '[filter]: obj.id = id'
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain
          schema:
            type: string
        - description: '[filter]: like ''%class%'''
          in: query
          name: class
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadClassResponse'
          description: A successful response.
      tags:
        - Classes
      operationId: Classes_ReadClass
  /permissions:
    get:
      parameters:
        - description: TermOfSearch
          in: query
          name: q
          schema:
            type: string
        - description: '= ANY(id)'
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: <> ANY(not)
          explode: true
          in: query
          name: not
          schema:
            items:
              type: string
            type: array
        - description: |-
            controls

            output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'sort: "field" asc; "!field" desc'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: page number
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: page size
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchPermissionResponse'
          description: A successful response.
      tags:
        - Permissions
      operationId: Permissions_GetPermissions
      summary: GetPermissions list available from application
  /presence:
    patch:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.PresenceStatus'
          description: A successful response.
      tags:
        - Presence
      description: '(UserPresence) {'
      operationId: Presence_SetStatus2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.SetStatusRequest'
        required: true
      summary: 'set(presence) (notify, error)'
  /products:
    get:
      parameters:
        - description: |-
            ----- Search Options ----- //

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: set of output fields
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: identifier
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
        - description: identifier
          in: query
          name: domain.id
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: domain.name
          schema:
            type: string
        - in: query
          name: customer_id
          schema:
            type: string
        - description: by serial number(s)
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
        - description: by product name(s)
          explode: true
          in: query
          name: product
          schema:
            items:
              type: string
            type: array
        - description: |-
            view: all|valid|grantable

            show: available to be granted
          in: query
          name: valid
          schema:
            type: boolean
        - description: 'filter: term of search'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_LicenseUsage3
  '/products/{id}/users':
    get:
      parameters:
        - description: |-
            ----- Search Filters ----- //

            REQUIRED Product ID
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            ----- Search Options ----- //

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: set of output fields
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'filter: term of search (username)'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsersResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_LicenseUsers
  /regions:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: description
          schema:
            type: string
        - explode: true
          in: query
          name: timezone_id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRegion'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: SearchRegion
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: CreateRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRegionRequest'
        required: true
  '/regions/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: DeleteRegion
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: ReadRegion
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: PatchRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RegionService.PatchRegionBody'
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RegionService
      operationId: UpdateRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RegionService.UpdateRegionBody'
        required: true
  /roles:
    get:
      parameters:
        - description: |-
            ----- Role-specific Filters ----------------- //

            filter: .id = any(:ids...)
          explode: true
          in: query
          name: ids
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'filter: group name like'
          in: query
          name: name
          schema:
            type: string
        - description: Object ID
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: Display Name
          in: query
          name: user.name
          schema:
            type: string
        - description: 'filter: term of search (name, description)'
          in: query
          name: q
          schema:
            type: string
        - description: |-
            bool admin = 4;  // filter: where CURRENT user is 'ADMIN' of
            controls

            output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'sort: "field" asc; "!field" desc'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: page number
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: page size
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchRolesResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_SearchRoles
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateRoleResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateRoleRequest'
        required: true
  /roles/metadata:
    get:
      parameters:
        - description: Optional. Unique ID of metadata role owner
          in: query
          name: id
          schema:
            format: int64
            type: string
        - description: Optional. Partial metadata document key name
          in: query
          name: key
          schema:
            type: string
        - description: |-
            Represents a null value.

             - NULL_VALUE: Null value.
          in: query
          name: merge.null_value
          schema:
            default: NULL_VALUE
            enum:
              - NULL_VALUE
            type: string
        - description: Represents a double value.
          in: query
          name: merge.number_value
          schema:
            format: double
            type: number
        - description: Represents a string value.
          in: query
          name: merge.string_value
          schema:
            type: string
        - description: Represents a boolean value.
          in: query
          name: merge.bool_value
          schema:
            type: boolean
        - description: Represents a structured value.
          in: query
          name: merge.struct_value
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RoleMetadataResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_RoleMetadata
  '/roles/objects/{object}/records/{record.id}':
    get:
      parameters:
        - description: |-
            bool admin = 4;  // filter: where CURRENT user is 'ADMIN' of
            REQUIRED !
          in: path
          name: object
          required: true
          schema:
            enum:
              - contacts
              - cc_list
              - cc_bucket
              - calendars
              - devices
              - cc_agent
              - cc_team
              - cc_resource
              - cc_resource_group
              - cc_queue
              - roles
              - users
              - cognitive_profile
            type: string
        - description: identifier
          in: path
          name: record.id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ----- Role-specific Filters ----------------- //

            filter: .id = any(:ids...)
          explode: true
          in: query
          name: ids
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'filter: group name like'
          in: query
          name: name
          schema:
            type: string
        - description: Object ID
          in: query
          name: user.id
          schema:
            format: int64
            type: string
        - description: Display Name
          in: query
          name: user.name
          schema:
            type: string
        - description: 'filter: term of search (name, description)'
          in: query
          name: q
          schema:
            type: string
        - description: display name
          in: query
          name: record.name
          schema:
            type: string
        - description: |-
            controls

            output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'sort: "field" asc; "!field" desc'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: page number
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: page size
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchRolesResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_SearchRecordAvailableRoles
  '/roles/{id}':
    delete:
      parameters:
        - description: 'DELETE /roles/{id}'
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: 'POST /roles/delete {"ids"}'
          explode: true
          in: query
          name: ids
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: deleteOrMark 'deleted' ?
          in: query
          name: permanent
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteRoleResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_DeleteRole
    get:
      parameters:
        - description: role.id
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            select projection

            select: output (fields,...)
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadRoleResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_ReadRole
  '/roles/{role.id}':
    patch:
      parameters:
        - description: oid
          in: path
          name: role.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateRoleResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_UpdateRole2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Roles.UpdateRoleBody'
        required: true
    put:
      parameters:
        - description: oid
          in: path
          name: role.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateRoleResponse'
          description: A successful response.
      tags:
        - Roles
      operationId: Roles_UpdateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Roles.UpdateRoleBody'
        required: true
  /routing/outbound/calls:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: name
          schema:
            type: string
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: pattern
          schema:
            type: string
        - in: query
          name: description
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: SearchRoutingOutboundCall
      summary: List of RoutingOutboundCall
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: CreateRoutingOutboundCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingOutboundCallRequest'
        required: true
      summary: Create RoutingOutboundCall
  '/routing/outbound/calls/{from_id}/to/{to_id}':
    patch:
      parameters:
        - in: path
          name: from_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: to_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/engine.MovePositionRoutingOutboundCallResponse
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: MovePositionRoutingOutboundCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody
        required: true
      summary: Move RoutingOutboundCall
  '/routing/outbound/calls/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: DeleteRoutingOutboundCall
      summary: Remove RoutingOutboundCall
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: ReadRoutingOutboundCall
      summary: RoutingOutboundCall item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: PatchRoutingOutboundCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody
        required: true
      summary: Patch RoutingOutboundCall
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingOutboundCallService
      operationId: UpdateRoutingOutboundCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody
        required: true
      summary: Update RoutingOutboundCall
  /routing/outbound/chat:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: SearchChatPlan
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: CreateChatPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateChatPlanRequest'
        required: true
  '/routing/outbound/chat/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: DeleteChatPlan
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: ReadChatPlan
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: PatchChatPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingChatPlanService.PatchChatPlanBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingChatPlanService
      operationId: UpdateChatPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingChatPlanService.UpdateChatPlanBody
        required: true
  /routing/schema:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
        - in: query
          name: name
          schema:
            type: string
        - explode: true
          in: query
          name: type
          schema:
            items:
              enum:
                - default
                - voice
                - chat
                - processing
                - service
              type: string
            type: array
        - in: query
          name: editor
          schema:
            type: boolean
        - explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: SearchRoutingSchema
      summary: List RoutingSchema
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: CreateRoutingSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingSchemaRequest'
        required: true
      summary: Create RoutingSchema
  /routing/schema/tags:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: type
          schema:
            items:
              enum:
                - default
                - voice
                - chat
                - processing
                - service
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingSchemaTags'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: SearchRoutingSchemaTags
      summary: List RoutingSchemaTags
  /routing/schema/variables:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: SearchSchemaVariable
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: CreateSchemaVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSchemaVariableRequest'
        required: true
  '/routing/schema/variables/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: DeleteSchemaVariable
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: ReadSchemaVariable
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: PatchSchemaVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.SchemaVariablesService.PatchSchemaVariableBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVariablesService
      operationId: UpdateSchemaVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.SchemaVariablesService.UpdateSchemaVariableBody
        required: true
  '/routing/schema/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: DeleteRoutingSchema
      summary: Remove RoutingSchema
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: ReadRoutingSchema
      summary: RoutingSchema item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: PatchRoutingSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingSchemaService.PatchRoutingSchemaBody
        required: true
      summary: Patch RoutingSchema
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingSchemaService
      operationId: UpdateRoutingSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingSchemaService.UpdateRoutingSchemaBody
        required: true
      summary: Update RoutingSchema
  '/routing/schema/{schema_id}/versions':
    get:
      parameters:
        - in: path
          name: schema_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SearchSchemaVersionResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SchemaVersionService
      operationId: SearchSchemaVersion
  /routing/variables:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingVariableService
      operationId: SearchRoutingVariable
      summary: List of RoutingVariable
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingVariableService
      operationId: CreateRoutingVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingVariableRequest'
        required: true
      summary: Create RoutingVariable
  '/routing/variables/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingVariableService
      operationId: DeleteRoutingVariable
      summary: Remove RoutingVariable
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingVariableService
      operationId: ReadRoutingVariable
      summary: RoutingVariable item
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - RoutingVariableService
      operationId: UpdateRoutingVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.RoutingVariableService.UpdateRoutingVariableBody
        required: true
      summary: Update RoutingVariable
  /search:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: object_name
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ftsSearchResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
        - FTSService
      operationId: Search
  /settings:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Filter by setting names
          explode: true
          in: query
          name: name
          schema:
            items:
              enum:
                - empty_system_settings_name
                - enable_omnichannel
                - member_chunk_size
                - amd_cancel_not_human
                - scheme_version_limit
                - enable_2fa
                - export_settings
                - search_number_length
                - chat_ai_connection
                - password_reg_exp
                - password_validation_text
                - autolink_call_to_contact
                - period_to_playback_records
                - is_fulltext_search_enabled
                - wbt_hide_contact
                - show_full_contact
                - call_end_sound_notification
                - call_end_push_notification
                - chat_end_sound_notification
                - chat_end_push_notification
                - task_end_sound_notification
                - task_end_push_notification
                - push_notification_timeout
                - labels_to_limit_contacts
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: SearchSystemSetting
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: CreateSystemSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSystemSettingRequest'
        required: true
  /settings/available:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAvailableSystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: SearchAvailableSystemSetting
  '/settings/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: DeleteSystemSetting
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: ReadSystemSetting
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: PatchSystemSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.SystemSettingService.PatchSystemSettingBody
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SystemSettingService
      operationId: UpdateSystemSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/engine.SystemSettingService.UpdateSystemSettingBody
        required: true
  /signup:
    post:
      parameters:
        - description: domain name
          in: query
          name: domain
          schema:
            type: string
        - description: username
          in: query
          name: username
          schema:
            type: string
        - description: user password
          in: query
          name: password
          schema:
            type: string
        - description: scope request control
          explode: true
          in: query
          name: scope
          schema:
            items:
              type: string
            type: array
        - description: license/certificate
          in: query
          name: certificate
          schema:
            format: byte
            type: string
        - description: OPTIONAL. Mobile device /login request ?
          in: query
          name: mobile
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LoginResponse'
          description: A successful response.
      tags:
        - Auth
      operationId: Auth_Signup
      summary: Signup new domain with superior access token
  '/slas/{sla_id}/sla_condition':
    post:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: CreateSLACondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
        required: true
      summary: Create a new SLACondition
  '/slas/{sla_id}/sla_condition/{id}':
    delete:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: DeleteSLACondition
      summary: Delete an SLACondition
    get:
      parameters:
        - description: Unique identifier of the SLACondition
          in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - description: Unique identifier of the SLACondition
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSLAConditionResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: LocateSLACondition
      summary: Locate an SLACondition by ID
    patch:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: UpdateSLACondition2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
        required: true
      summary: Update an existing SLACondition
    put:
      parameters:
        - in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: UpdateSLACondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
        required: true
      summary: Update an existing SLACondition
  '/slas/{sla_id}/sla_conditions':
    get:
      parameters:
        - description: Filter by SLA Id
          in: path
          name: sla_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
        - description: Filter by SLACondition Id.
          in: query
          name: sla_condition_id
          schema:
            format: int64
            type: string
        - description: filter by priority id
          in: query
          name: priority_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLAConditionList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - SLAConditions
      operationId: ListSLAConditions
      summary: Retrieve a list of SLAConditions or search SLACondition conditions
  /spaces:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: >-
            Limit of result page records count.   _default(16);
            limit=(size<=0?-1:size+1);_


            ```javascript

            const
                default = 16
              , maximum = 32
            ;


            ```
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            Used to query records within a set of `qin` fields, eg: name, etc...
          in: query
          name: q
          schema:
            type: string
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `state`
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: id
              pattern: '^[+|-|!]?\w+$'
              type: string
            type: array
            uniqueItems: true
        - explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
            type: array
            uniqueItems: true
        - description: |-
            Records with unique IDentifier(s).
            Accept: `id` -or- `etag`.
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.SpaceList'
          description: A successful response.
      tags:
        - Spaces
      description: |
        | Field       | Type 
        | ----------- | ---- 
        | **----------- READ-ONLY -----------** | 
        | `id`        | int64 
        | `ver`       | int32 
        | `etag`      | string 
        | **---------- OPERATIONAL ----------** | 
        | `created_at` | int64(epoch:milli) 
        | `created_by` | lookup(user) 
        | `updated_at` | int64(epoch:milli) 
        | `updated_by` | lookup(user) 
        | **---------- ATTRIBUTES -----------** | 
        | `name`      | name! 
        | `home_page`   | string (home_page) 
        | `state`       | bool 
        | `has_children`| bool 
      operationId: Spaces_ListSpaces
    post:
      parameters:
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
          description: A successful response.
      tags:
        - Spaces
      operationId: Spaces_CreateSpace
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/webitel.knowledgebase.InputSpace'
                type: object
              type: array
        description: NEW Spaces source changes
        required: true
      summary: Create NEW Space
  /spaces/search:
    get:
      parameters:
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Active Article only.
          in: query
          name: state
          schema:
            type: boolean
        - description: Tags associated with the article.
          explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.CombinedList'
          description: A successful response.
      tags:
        - KnowledgebaseSearch
      operationId: KnowledgebaseSearch_SpacesArticlesSearch
  /spaces/tags:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.TagsList'
          description: A successful response.
      tags:
        - Tags
      operationId: Tags_ListTags
      summary: List of the all Articles's Tag(s).
  '/spaces/{etag}':
    delete:
      parameters:
        - description: Unique ID of the latest version of a resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
          description: A successful response.
      tags:
        - Spaces
      operationId: Spaces_DeleteSpace
      summary: Remove Space source
    get:
      parameters:
        - description: |-
            The Space source IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
          description: A successful response.
      tags:
        - Spaces
      operationId: Spaces_LocateSpace
      summary: Locate spaces source
    patch:
      parameters:
        - description: Unique ID of the latest version of an existing resorce.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Source Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
          description: A successful response.
      tags:
        - Spaces
      operationId: Spaces_UpdateSpace
      requestBody:
        content:
          application/json:
            schema:
              properties:
                home_page:
                  description: |-
                    BIO. Short description about the space.
                    OPTIONAL. Multi-lined text.
                  type: string
                name:
                  description: Represents the name of the knowledge base space.
                  type: string
                state:
                  description: The state of the space.
                  type: boolean
              title: NEW Space source changes
              type: object
        description: NEW Space source changes
        required: true
      summary: NEW Update of the Space source
  '/spaces/{space_id}/articles':
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Record(s) with unique ID only.
          in: query
          name: article_id
          schema:
            type: string
        - description: Active Article only.
          in: query
          name: state
          schema:
            type: boolean
        - description: Tags associated with the article.
          explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_ListArticles
      summary: List of the Space's Article(s).
    post:
      parameters:
        - description: Link space ID.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_CreateArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.knowledgebase.InputArticle'
        description: NEW Update of the Article link.
        required: true
  '/spaces/{space_id}/articles/{article_id}/attachments':
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Record(s) with unique ID only.
          in: path
          name: article_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.AttachmentList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_ArticlesAttachmentList
  '/spaces/{space_id}/articles/{article_id}/childrens':
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Record(s) with unique ID only.
          in: path
          name: article_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          in: query
          name: q
          schema:
            type: string
        - description: Active Article only.
          in: query
          name: state
          schema:
            type: boolean
        - description: Tags associated with the article.
          explode: true
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_ListArticles2
      summary: List of the Space's Article(s).
  '/spaces/{space_id}/articles/{article_id}/history':
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Record(s) with unique ID only.
          in: path
          name: article_id
          required: true
          schema:
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Sort the result according to fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersionList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_ArticleVersionsList
  '/spaces/{space_id}/articles/{article_id}/history/{version_id}':
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Record(s) with unique ID only.
          in: path
          name: article_id
          required: true
          schema:
            type: string
        - description: The unique ID of version record
          in: path
          name: version_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersion'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_LocateArticleVersion
  '/spaces/{space_id}/articles/{etag}':
    delete:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Unique ID to remove.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Article'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_DeleteArticle
      summary: Remove the space's Article association.
    get:
      parameters:
        - description: Space ID associated with.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: |-
            Unique Article link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          in: path
          name: etag
          required: true
          schema:
            format: \w+
            type: string
        - description: Fields to be retrieved into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Article'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_LocateArticle
      summary: Locate the space's Article association.
    patch:
      parameters:
        - description: Link space ID.
          in: path
          name: space_id
          required: true
          schema:
            type: string
        - description: Unique ID of the latest version of an existing resource.
          in: path
          name: etag
          required: true
          schema:
            type: string
        - description: Fields to be retrieved into result of changes.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
          description: A successful response.
      tags:
        - Articles
      operationId: Articles_UpdateArticle
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tags:
                  description: Tags associated with the article.
                  items:
                    type: string
                  type: array
                parent_article:
                  description: The parent article ID.
                  format: int64
                  type: string
                pinned:
                  description: Indicates that the article is pinned on the top of list.
                  type: boolean
                space_id:
                  description: |-
                    [VALUE]: --------------------------------------
                    Space ID associated with.
                  format: int64
                  type: string
                state:
                  description: Indicates if article is active and actual.
                  type: boolean
                text:
                  description: The text content of the article.
                  type: string
                title:
                  description: The title of the article.
                  type: string
              title: NEW Update of the Article link.
              type: object
        description: NEW Update of the Article link.
        required: true
      summary: Update the space's Article details.
  /srvinfo:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ServerInfoResponse'
          description: A successful response.
      tags:
        - Customers
      operationId: Customers_ServerInfo
  '/statuses/{status_id}/status':
    get:
      parameters:
        - description: Filter by Status Id.
          in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - description: Page number of result dataset records. offset = (page*size)
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: Size count of records on result page. limit = (size++)
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: Sort the result according to fields.
          in: query
          name: sort
          schema:
            type: string
        - description: Filter by unique IDs.
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusConditionList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: ListStatusConditions
      summary: Retrieve a list of statuses or search status conditions
    post:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: CreateStatusCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateStatusCondition'
        required: true
      summary: Create a new status condition
  '/statuses/{status_id}/status/{id}':
    delete:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: DeleteStatusCondition
      summary: Delete a status condition
    get:
      parameters:
        - description: ID of the status to be located
          in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - description: ID of the status condition to be located
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: Fields to be retrieved as a result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/webitel.cases.LocateStatusConditionResponse
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: LocateStatusCondition
      summary: Locate a status condition by ID
    patch:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: UpdateStatusCondition2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
        required: true
      summary: Update an existing status condition
    put:
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - StatusConditions
      operationId: UpdateStatusCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
        required: true
      summary: Update an existing status condition
  /storage/backend_profiles:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListBackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_SearchBackendProfile
      summary: List of BackendProfile
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_CreateBackendProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateBackendProfileRequest'
        required: true
      summary: Create BackendProfile
  '/storage/backend_profiles/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_DeleteBackendProfile
      summary: Remove BackendProfile
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_ReadBackendProfile
      summary: BackendProfile item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_PatchBackendProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchBackendProfileRequest'
        required: true
      summary: Patch BackendProfile
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - BackendProfileService
      operationId: BackendProfileService_UpdateBackendProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateBackendProfileRequest'
        required: true
      summary: Update BackendProfile
  /storage/cognitive_profiles:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: service
          schema:
            items:
              enum:
                - DefaultService
                - STT
                - TTS
              type: string
            type: array
        - in: query
          name: enabled
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListCognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_SearchCognitiveProfile
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_CreateCognitiveProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateCognitiveProfileRequest'
        required: true
  '/storage/cognitive_profiles/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_DeleteCognitiveProfile
      summary: Remove BackendProfile
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_ReadCognitiveProfile
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_PatchCognitiveProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchCognitiveProfileRequest'
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_UpdateCognitiveProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateCognitiveProfileRequest'
        required: true
  '/storage/cognitive_profiles/{id}/voice':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: key
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListCognitiveProfileVoices'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - CognitiveProfileService
      operationId: CognitiveProfileService_SearchCognitiveProfileVoices
      summary: Search Voices
  /storage/file:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.DeleteFilesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileService
      operationId: FileService_DeleteFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.DeleteFilesRequest'
        required: true
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: uploaded_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: uploaded_at.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: uploaded_by
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: reference_id
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: channel
          schema:
            items:
              enum:
                - UnknownChannel
                - ChatChannel
                - MailChannel
                - CallChannel
                - LogChannel
                - MediaChannel
                - KnowledgebaseChannel
                - CasesChannel
              type: string
            type: array
        - in: query
          name: retention_until.from
          schema:
            format: int64
            type: string
        - in: query
          name: retention_until.to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListFile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileService
      operationId: FileService_SearchFiles
  /storage/file_policies:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListFilePolicies'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_SearchFilePolicies
      summary: List of FilePolicy
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_CreateFilePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateFilePolicyRequest'
        required: true
      summary: Create FilePolicy
  '/storage/file_policies/{from_id}/to/{to_id}':
    patch:
      parameters:
        - in: path
          name: from_id
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: to_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MovePositionFilePolicyResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_MovePositionFilePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.MovePositionFilePolicyRequest'
        required: true
  '/storage/file_policies/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_DeleteFilePolicy
      summary: Remove FilePolicy
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_ReadFilePolicy
      summary: FilePolicy item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_PatchFilePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchFilePolicyRequest'
        required: true
      summary: Patch FilePolicy
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_UpdateFilePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateFilePolicyRequest'
        required: true
      summary: Update FilePolicy
  '/storage/file_policies/{id}/apply':
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicyApplyResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FilePoliciesService
      operationId: FilePoliciesService_FilePolicyApply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.FilePolicyApplyRequest'
        required: true
  /storage/import_templates:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_SearchImportTemplate
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_CreateImportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateImportTemplateRequest'
        required: true
  '/storage/import_templates/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_DeleteImportTemplate
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_ReadImportTemplate
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_PatchImportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchImportTemplateRequest'
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - ImportTemplateService
      operationId: ImportTemplateService_UpdateImportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateImportTemplateRequest'
        required: true
  /storage/media:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListMedia'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - MediaFileService
      operationId: MediaFileService_SearchMediaFile
      summary: Search MediaFile
  '/storage/media/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MediaFile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - MediaFileService
      operationId: MediaFileService_DeleteMediaFile
      summary: Remove MediaFile
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: domain_id
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MediaFile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - MediaFileService
      operationId: MediaFileService_ReadMediaFile
      summary: MediaFile item
  /storage/transcript_file:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.DeleteFileTranscriptResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileTranscriptService
      operationId: FileTranscriptService_DeleteFileTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.DeleteFileTranscriptRequest'
        required: true
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.StartFileTranscriptResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileTranscriptService
      operationId: FileTranscriptService_CreateFileTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.StartFileTranscriptRequest'
        required: true
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.PutFileTranscriptResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileTranscriptService
      operationId: FileTranscriptService_PutFileTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PutFileTranscriptRequest'
        required: true
  '/storage/transcript_file/{id}/phrases':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListPhrases'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
          description: An unexpected error response.
      tags:
        - FileTranscriptService
      operationId: FileTranscriptService_GetFileTranscriptPhrases
  /trigger:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: id
          schema:
            items:
              format: int32
              type: integer
            type: array
        - explode: true
          in: query
          name: schema_id
          schema:
            items:
              format: int32
              type: integer
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTrigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: SearchTrigger
      summary: List of Trigger
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: CreateTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateTriggerRequest'
        required: true
      summary: Create Trigger
  '/trigger/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: DeleteTrigger
      summary: Remove Trigger
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: ReadTrigger
      summary: Trigger item
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: PatchTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.PatchTriggerBody'
        required: true
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: UpdateTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.UpdateTriggerBody'
        required: true
      summary: Update Trigger
  '/trigger/{trigger_id}/job':
    get:
      parameters:
        - in: path
          name: trigger_id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: created_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: created_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: started_at.from
          schema:
            format: int64
            type: string
        - in: query
          name: started_at.to
          schema:
            format: int64
            type: string
        - in: query
          name: duration.from
          schema:
            format: int64
            type: string
        - in: query
          name: duration.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: state
          schema:
            items:
              enum:
                - idle
                - active
                - done
                - error
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTriggerJob'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: SearchTriggerJob
    post:
      parameters:
        - in: path
          name: trigger_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TriggerJob'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - TriggerService
      operationId: CreateTriggerJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.CreateTriggerJobBody'
        required: true
  /types:
    get:
      parameters:
        - description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          in: query
          name: q
          schema:
            type: string
        - description: '`types.id`'
          in: query
          name: id
          schema:
            type: string
        - description: '`types.name`'
          in: query
          name: name
          schema:
            type: string
        - description: '`types.repo`'
          in: query
          name: repo
          schema:
            type: string
        - description: '`types.path`'
          in: query
          name: path
          schema:
            type: string
        - description: '[NOT] [ system / custom ] types only'
          in: query
          name: readonly
          schema:
            type: boolean
        - description: '[NOT] Extend[able] types only.'
          in: query
          name: extendable
          schema:
            type: boolean
        - description: '[NOT] include extensions/* types.'
          in: query
          name: extensions
          schema:
            type: boolean
        - description: '[NOT] Extend[ed] types only.'
          in: query
          name: extended
          schema:
            type: boolean
        - description: '[NOT] Administer access control only'
          in: query
          name: administered
          schema:
            type: boolean
        - description: |-
            Number of result records (per page).
            Default: 16.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Page number of result set of records.
            Default: 1.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
              uniqueItems: true
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Types
      operationId: Types_Search
      summary: Lookup data types registry.
  /types/dictionaries:
    delete:
      parameters:
        - description: Fields to retrive into result dataset.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: |-
            `types.repo`

            // `record.pk`
             repeated string id = 3;
          explode: true
          in: query
          name: repo
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Dictionaries
      description: '(DictionaryList) {'
      operationId: Dictionaries_DeleteType
      summary: Delete custom dictionaries.
    get:
      parameters:
        - description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          in: query
          name: q
          schema:
            type: string
        - description: '`types.id`'
          in: query
          name: id
          schema:
            type: string
        - description: '`types.name`'
          in: query
          name: name
          schema:
            type: string
        - description: '`types.repo`'
          in: query
          name: repo
          schema:
            type: string
        - description: '`types.path`'
          in: query
          name: path
          schema:
            type: string
        - description: '[NOT] [ system / custom ] types only'
          in: query
          name: readonly
          schema:
            type: boolean
        - description: '[NOT] Extend[able] types only.'
          in: query
          name: extendable
          schema:
            type: boolean
        - description: '[NOT] include extensions/* types.'
          in: query
          name: extensions
          schema:
            type: boolean
        - description: '[NOT] Extend[ed] types only.'
          in: query
          name: extended
          schema:
            type: boolean
        - description: '[NOT] Administer access control only'
          in: query
          name: administered
          schema:
            type: boolean
        - description: |-
            Number of result records (per page).
            Default: 16.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Page number of result set of records.
            Default: 1.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
              uniqueItems: true
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Dictionaries
      operationId: Dictionaries_SearchType
      summary: Lookup dictionaries data types.
  '/types/dictionaries/{repo}':
    get:
      parameters:
        - description: '`types.repo`'
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Dictionary) {'
      operationId: Dictionaries_LocateType
      summary: Locate the dictionary type.
    post:
      parameters:
        - description: 'NEW [`types.repo`] repository name, e.g.: `countries`.'
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Dictionary) {'
      operationId: Dictionaries_CreateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputDictionary'
        description: 'NEW dictionary [type] definition.'
        required: true
      summary: Create custom dictionary.
    put:
      parameters:
        - description: '[**repo**] name of the dataset type, e.g.: `countries`.'
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: Fields to return into result.
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Dictionaries
      description: '(Dictionary) {'
      operationId: Dictionaries_UpdateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputDictionary'
        description: 'The dictionary [**type**] changes.'
        required: true
      summary: Update custom dictionary.
  /types/extensions:
    delete:
      parameters:
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: '`type.repo`'
          explode: true
          in: query
          name: repo
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Extensions
      description: 'returns (ExtensionList) {'
      operationId: Extensions_DeleteType2
      summary: Delete extension for types.
    get:
      parameters:
        - description: |-
            Number of result records (per page).
            Default: 16.
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: |-
            Page number of result set of records.
            Default: 1.
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          explode: true
          in: query
          name: sort
          schema:
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          explode: true
          in: query
          name: fields
          schema:
            items:
              default: '*'
              type: string
              uniqueItems: true
            type: array
        - description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          in: query
          name: q
          schema:
            type: string
        - description: extension.type.id
          explode: true
          in: query
          name: id
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Extensions
      description: '(ExtensionList) {'
      operationId: Extensions_SearchType
      summary: Search for type extensions.
  '/types/extensions/{repo}':
    delete:
      parameters:
        - description: '`type.repo`'
          in: path
          name: repo
          required: true
          schema:
            items:
              type: string
            minItems: 1
            type: array
          style: simple
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
          description: A successful response.
      tags:
        - Extensions
      description: 'returns (ExtensionList) {'
      operationId: Extensions_DeleteType
      summary: Delete extension for types.
    get:
      parameters:
        - description: |-
            `type.repo`

            id
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Extensions
      description: 'returns (Extension) {'
      operationId: Extensions_LocateType
      summary: Type extension details.
    post:
      parameters:
        - description: |-
            SUPER `types.repo` to extend, e.g.: `contacts`.
            Lookup: GET /types?extendable=true
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Extensions
      description: 'returns (Extension) {'
      operationId: Extensions_CreateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputExtension'
        description: Extension type fields.
        required: true
      summary: Create type extension.
    put:
      parameters:
        - description: '`type.repo`'
          in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Extensions
      description: 'returns (Extension) {'
      operationId: Extensions_UpdateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputExtension'
        required: true
      summary: Update type extension.
  '/types/{path}':
    get:
      parameters:
        - description: '`types.path`'
          in: path
          name: path
          required: true
          schema:
            format: path
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: A successful response.
      tags:
        - Types
      operationId: Types_Locate
      summary: Structured data type details.
  /user:
    get:
      parameters:
        - in: query
          name: id
          schema:
            format: int64
            type: string
        - description: partial output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadUserResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_ReadUser2
  '/user/device/config/{type}':
    get:
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DefaultDeviceConfigResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - UserHelperService
      operationId: DefaultDeviceConfig
  '/user/settings/{key}':
    get:
      parameters:
        - in: path
          name: key
          required: true
          schema:
            pattern: '[^/]+'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserSetting'
          description: A successful response.
      tags:
        - UserSettings
      operationId: UserSettings_GetUserSettings
      summary: 'GET /user/settings/{key=*}'
    put:
      parameters:
        - in: path
          name: key
          required: true
          schema:
            pattern: '[^/]+'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserSetting'
          description: A successful response.
      tags:
        - UserSettings
      description: |-
        PUT /user/settings/{key=*}
        Content-Type: application/json; charset=utf-8

        ${value=.body}
      operationId: UserSettings_SetUserSettings
      requestBody:
        content:
          application/json:
            schema: {}
        required: true
      summary: Create -or- Update
  /user/widget/activity/today:
    get:
      parameters:
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ActivityWorkspaceWidgetResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
          description: An unexpected error response.
      tags:
        - UserHelperService
      operationId: ActivityWorkspaceWidget
  /userinfo:
    get:
      parameters:
        - description: string id_token = 2;
          in: query
          name: access_token
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Userinfo'
          description: A successful response.
      tags:
        - Auth
      operationId: Auth_UserInfo2
      summary: >-
        The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns
        Claims about the authenticated End-User.
    post:
      parameters:
        - description: string id_token = 2;
          in: query
          name: access_token
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Userinfo'
          description: A successful response.
      tags:
        - Auth
      operationId: Auth_UserInfo
      summary: >-
        The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns
        Claims about the authenticated End-User.
  /users:
    delete:
      parameters:
        - description: 'ONE /users/{id}'
          in: query
          name: id
          schema:
            format: int64
            type: string
        - in: query
          name: permanent
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteUsersResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_DeleteUsers2
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: string
              type: array
        description: 'MANY /users .ids=[id,...]'
        required: true
    get:
      parameters:
        - description: |-
            ----- Base Filters ---------------------------

            filter: .id = any({id}...)
          explode: true
          in: query
          name: id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: 'filter: .id <> all({not_ids}...)'
          explode: true
          in: query
          name: not_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: |-
            ----- User-specific Filters ------------------

            filter: (.name|.username|.extension|.status) ILIKE '{q}'
          in: query
          name: q
          schema:
            type: string
        - description: 'filter: .name ILIKE ''{name}'''
          in: query
          name: name
          schema:
            type: string
        - description: 'filter: .status ILIKE ''{status}'''
          in: query
          name: status
          schema:
            type: string
        - description: 'filter: .username ILIKE ''{username}'''
          in: query
          name: username
          schema:
            type: string
        - description: 'filter: .extension LIKE ''{extension}'''
          in: query
          name: extension
          schema:
            type: string
        - description: |-
            ----- View Modes -----------------------------
            NOTE: by default, search NOT 'deleted' objects ONLY

            filter: include 'deleted' ALSO ! (inactive)
          in: query
          name: any
          schema:
            type: boolean
        - description: 'filter: .deleted_at NOTNULL (view: RECYCLE)'
          in: query
          name: deleted
          schema:
            type: boolean
        - in: query
          name: presence.status
          schema:
            type: string
        - in: query
          name: presence.note
          schema:
            type: string
        - description: |-
            // navigation filter
            repeated int64 roles = 7;
            ----- Search Options -------------------------

            select: output (fields,...)
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'select: order by (fields,...)'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'select: offset {page}'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'select: limit {size}'
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchUsersResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_SearchUsers
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateUserResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateUserRequest'
        required: true
  /users/search:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchUsersResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_SearchUsers2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.SearchUsersRequest'
        required: true
  '/users/{id}':
    delete:
      parameters:
        - description: 'ONE /users/{id}'
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: 'MANY /users .ids=[id,...]'
          explode: true
          in: query
          name: selection
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: permanent
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteUsersResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_DeleteUsers
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: partial output
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadUserResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_ReadUser
  '/users/{id}/logout':
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LogoutUserResponse'
          description: A successful response.
      tags:
        - Users
      operationId: Users_LogoutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Users.LogoutUserBody'
        required: true
  '/users/{publish.id}/presence':
    patch:
      parameters:
        - description: '[required] user identity'
          in: path
          name: publish.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.PresenceStatus'
          description: A successful response.
      tags:
        - Presence
      description: '(UserPresence) {'
      operationId: Presence_SetStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Presence.SetStatusBody'
        required: true
      summary: 'set(presence) (notify, error)'
  '/users/{token.user.id}/tokens':
    post:
      parameters:
        - description: identifier
          in: path
          name: token.user.id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            ObjectId user = 1; // [required]
             string usage = 2;  // [optional] usage description
             bool enable = 3;
          in: query
          name: enable
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_AddUserAccessToken
      requestBody:
        content:
          application/json:
            schema:
              properties:
                created_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.ObjectId'
                deleted_at:
                  format: int64
                  title: '[optional] disabled at'
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                id:
                  title: 'tokenKey::token_key'
                  type: string
                token:
                  title: 'tokenString::access_token'
                  type: string
                updated_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  title: '[optional] short usage description'
                  type: string
                user:
                  properties:
                    name:
                      title: display name
                      type: string
                  title: '[optional] output depends on API endpoint'
                  type: object
              title: |-
                processing
                ------------
                token.user.id // [required] authorization
                token.usage   // [optional] short description
              type: object
        description: |-
          processing
          ------------
          token.user.id // [required] authorization
          token.usage   // [optional] short description
        required: true
  '/users/{update.user.id}/tokens/{update.id}':
    patch:
      parameters:
        - description: identifier
          in: path
          name: update.user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'tokenKey::token_key'
          in: path
          name: update.id
          required: true
          schema:
            type: string
        - description: '[optional] PATCH implementation'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: enable
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_UpdateUserAccessToken2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                created_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.ObjectId'
                deleted_at:
                  format: int64
                  title: '[optional] disabled at'
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                token:
                  title: 'tokenString::access_token'
                  type: string
                updated_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  title: '[optional] short usage description'
                  type: string
                user:
                  properties:
                    name:
                      title: display name
                      type: string
                  title: '[optional] output depends on API endpoint'
                  type: object
              title: '[required] identification + modifications(about)'
              type: object
        description: '[required] identification + modifications(about)'
        required: true
    put:
      parameters:
        - description: identifier
          in: path
          name: update.user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'tokenKey::token_key'
          in: path
          name: update.id
          required: true
          schema:
            type: string
        - description: '[optional] PATCH implementation'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - in: query
          name: enable
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_UpdateUserAccessToken
      requestBody:
        content:
          application/json:
            schema:
              properties:
                created_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.ObjectId'
                deleted_at:
                  format: int64
                  title: '[optional] disabled at'
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                token:
                  title: 'tokenString::access_token'
                  type: string
                updated_at:
                  format: int64
                  title: 'unix::ms'
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  title: '[optional] short usage description'
                  type: string
                user:
                  properties:
                    name:
                      title: display name
                      type: string
                  title: '[optional] output depends on API endpoint'
                  type: object
              title: '[required] identification + modifications(about)'
              type: object
        description: '[required] identification + modifications(about)'
        required: true
  '/users/{user.id}':
    patch:
      parameters:
        - description: Object ID
          in: path
          name: user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'PATCH: partial update'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.User'
          description: (empty)
      tags:
        - Users
      operationId: Users_UpdateUser2
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chat_name:
                  description: >-
                    The "chat_name" field is used to store the name displayed
                    externally on the platform.

                    For example, "chat_name" is shown when an agent connects to
                    chats with clients.
                  type: string
                contact:
                  $ref: '#/components/schemas/api.ObjectId'
                  description: '[optional] contact connected to this user'
                  title: |-
                    repeated Call calls = 13; // order by created_at
                    repeated Registration reged = 13; // order by register_last
                created_at:
                  format: int64
                  title: unix
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deleted_at:
                  format: int64
                  title: unix
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                device:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] default device assigned ? WebRTC register ?'
                devices:
                  description: >-
                    [editable] list of unique `regular` devices, attached to
                    this user
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'map<int64, string> devices = 13;'
                  type: array
                email:
                  type: string
                extension:
                  title: 'Caller-ID-Number:'
                  type: string
                hotdesks:
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: >-
                    [readonly] list of unique `hotdesk` devices, assigned to
                    this user
                  type: array
                license:
                  items:
                    $ref: '#/components/schemas/api.LicenseUser'
                    type: object
                  title: 'list of unique licenses, granted to this user'
                  type: array
                name:
                  title: 'Caller-ID-Name: Display Name'
                  type: string
                password:
                  type: string
                permissions:
                  items:
                    $ref: '#/components/schemas/api.Permission'
                    type: object
                  title: set of operational permission grants
                  type: array
                presence:
                  $ref: '#/components/schemas/api.UserPresence'
                  description: >-
                    string presence = 7; // unique set of <user> presentity
                    <status:basic> tuples open[ed]
                     string status = 8; // short display status (short description)
                  title: |-
                    CallerId caller = 5; // extension
                    PresenceStatus presence = 8;
                profile:
                  additionalProperties:
                    type: string
                  title: >-
                    list of variables, assigned to this user as an environment
                    unit
                  type: object
                roles:
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'roles, member of which is this user'
                  type: array
                totp_url:
                  title: >-
                    [readonly][optional] one time password if setting (2fa) is
                    enabled
                  type: string
                updated_at:
                  format: int64
                  title: unix
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                username:
                  title: alphanumeric username (login)
                  type: string
              title: 'body: modifications/changes'
              type: object
        description: 'body: modifications/changes'
        required: true
    put:
      parameters:
        - description: Object ID
          in: path
          name: user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'PATCH: partial update'
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.User'
          description: (empty)
      tags:
        - Users
      operationId: Users_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chat_name:
                  description: >-
                    The "chat_name" field is used to store the name displayed
                    externally on the platform.

                    For example, "chat_name" is shown when an agent connects to
                    chats with clients.
                  type: string
                contact:
                  $ref: '#/components/schemas/api.ObjectId'
                  description: '[optional] contact connected to this user'
                  title: |-
                    repeated Call calls = 13; // order by created_at
                    repeated Registration reged = 13; // order by register_last
                created_at:
                  format: int64
                  title: unix
                  type: string
                created_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deleted_at:
                  format: int64
                  title: unix
                  type: string
                deleted_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                device:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] default device assigned ? WebRTC register ?'
                devices:
                  description: >-
                    [editable] list of unique `regular` devices, attached to
                    this user
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'map<int64, string> devices = 13;'
                  type: array
                email:
                  type: string
                extension:
                  title: 'Caller-ID-Number:'
                  type: string
                hotdesks:
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: >-
                    [readonly] list of unique `hotdesk` devices, assigned to
                    this user
                  type: array
                license:
                  items:
                    $ref: '#/components/schemas/api.LicenseUser'
                    type: object
                  title: 'list of unique licenses, granted to this user'
                  type: array
                name:
                  title: 'Caller-ID-Name: Display Name'
                  type: string
                password:
                  type: string
                permissions:
                  items:
                    $ref: '#/components/schemas/api.Permission'
                    type: object
                  title: set of operational permission grants
                  type: array
                presence:
                  $ref: '#/components/schemas/api.UserPresence'
                  description: >-
                    string presence = 7; // unique set of <user> presentity
                    <status:basic> tuples open[ed]
                     string status = 8; // short display status (short description)
                  title: |-
                    CallerId caller = 5; // extension
                    PresenceStatus presence = 8;
                profile:
                  additionalProperties:
                    type: string
                  title: >-
                    list of variables, assigned to this user as an environment
                    unit
                  type: object
                roles:
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'roles, member of which is this user'
                  type: array
                totp_url:
                  title: >-
                    [readonly][optional] one time password if setting (2fa) is
                    enabled
                  type: string
                updated_at:
                  format: int64
                  title: unix
                  type: string
                updated_by:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                username:
                  title: alphanumeric username (login)
                  type: string
              title: 'body: modifications/changes'
              type: object
        description: 'body: modifications/changes'
        required: true
  '/users/{user.id}/tokens':
    get:
      parameters:
        - description: identifier
          in: path
          name: user.id
          required: true
          schema:
            format: int64
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
        - description: |-
            int32 page = 2;
            int64 size = 3;

            .usage ILIKE :q
          in: query
          name: q
          schema:
            type: string
        - description: |-
            ----- Search Options -------------------------

            select: output (fields,...)
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'select: order by (fields,...)'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: 'select: offset {page}'
          in: query
          name: page
          schema:
            format: int32
            type: integer
        - description: 'select: limit {size}'
          in: query
          name: size
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessTokenList'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_ListUserAccessToken
  '/users/{user.id}/tokens/{id}':
    delete:
      parameters:
        - description: identifier
          in: path
          name: user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'tokenKey::uuid'
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_DeleteUserAccessToken
    get:
      parameters:
        - description: identifier
          in: path
          name: user.id
          required: true
          schema:
            format: int64
            type: string
        - description: 'tokenKey::uuid'
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: display name
          in: query
          name: user.name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
          description: A successful response.
      tags:
        - UserAccessTokens
      operationId: UserAccessTokens_GetUserAccessToken
  '/users/{user_id}/2fa':
    get:
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetUserTfaKeyResponse'
          description: A successful response.
      tags:
        - TwoFactorAuthentication
      operationId: TwoFactorAuthentication_GetUserTfaKey
      summary: GetUserTfaKey locates the secret for user and returns it as a TOTP url
    post:
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GenerateUserTfaKeyResponse'
          description: A successful response.
      tags:
        - TwoFactorAuthentication
      operationId: TwoFactorAuthentication_GenerateUserTfaKey
      summary: >-
        GenerateUserTfaKey generates new or regenerates secret for the concrete
        user
  /wfm/agents/absences:
    get:
      parameters:
        - description: Searches by agent name.
          in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: filters
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentsAbsencesResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_SearchAgentsAbsences
      summary: Searches absences by filters.
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateAgentsAbsencesResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_CreateAgentsAbsences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateAgentsAbsencesRequest'
        required: true
      summary: Creates absences for multiple specified agents.
  '/wfm/agents/working_schedules/{working_schedule_id}':
    get:
      parameters:
        - in: path
          name: working_schedule_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: date.from
          schema:
            format: int64
            type: string
        - in: query
          name: date.to
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: supervisor_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: team_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - explode: true
          in: query
          name: skill_id
          schema:
            items:
              format: int64
              type: string
            type: array
        - in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentsWorkingScheduleResponse'
          description: A successful response.
      tags:
        - AgentWorkingScheduleService
      operationId: AgentWorkingScheduleService_SearchAgentsWorkingSchedule
    post:
      parameters:
        - in: path
          name: working_schedule_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/wfmCreateAgentsWorkingScheduleShiftsResponse
          description: A successful response.
      tags:
        - AgentWorkingScheduleService
      operationId: AgentWorkingScheduleService_CreateAgentsWorkingScheduleShifts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                agents:
                  items:
                    $ref: '#/components/schemas/wfmLookupEntity'
                    type: object
                  type: array
                date:
                  $ref: '#/components/schemas/wfmFilterBetween'
                items:
                  additionalProperties:
                    $ref: '#/components/schemas/wfmAgentScheduleShift'
                  description: 'Map key is a day of week: 0 - Sunday, ..., 6 - Saturday.'
                  type: object
              type: object
        required: true
  '/wfm/agents/{agent_id}/absences':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - explode: true
          in: query
          name: filters
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentAbsenceResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_SearchAgentAbsence
      summary: Searches agent absences by filters.
    post:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateAgentAbsenceResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_CreateAgentAbsence
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  $ref: '#/components/schemas/wfmAbsence'
              type: object
        required: true
      summary: Creates one-day-absence for one agent.
  '/wfm/agents/{agent_id}/absences/{id}':
    delete:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteAgentAbsenceResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_DeleteAgentAbsence
      summary: Deletes agent concrete absence by its id.
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadAgentAbsenceResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_ReadAgentAbsence
      summary: Reads one absence per agent by its id.
  '/wfm/agents/{agent_id}/absences/{item.id}':
    put:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateAgentAbsenceResponse'
          description: A successful response.
      tags:
        - AgentAbsenceService
      operationId: AgentAbsenceService_UpdateAgentAbsence
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    absent_at:
                      format: int64
                      type: string
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    domain_id:
                      format: int64
                      type: string
                    type_id:
                      $ref: '#/components/schemas/wfmAbsenceType'
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                  type: object
              type: object
        required: true
      summary: Updates agent concrete absence by its id.
  '/wfm/agents/{agent_id}/conditions':
    get:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadAgentWorkingConditionsResponse'
          description: A successful response.
      tags:
        - AgentWorkingConditionsService
      operationId: AgentWorkingConditionsService_ReadAgentWorkingConditions
    put:
      parameters:
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateAgentWorkingConditionsResponse'
          description: A successful response.
      tags:
        - AgentWorkingConditionsService
      operationId: AgentWorkingConditionsService_UpdateAgentWorkingConditions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  $ref: '#/components/schemas/wfmAgentWorkingConditions'
              type: object
        required: true
  /wfm/lookups/forecast_calculation:
    get:
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_SearchForecastCalculation
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_CreateForecastCalculation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateForecastCalculationRequest'
        required: true
  '/wfm/lookups/forecast_calculation/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_DeleteForecastCalculation
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_ReadForecastCalculation
  '/wfm/lookups/forecast_calculation/{id}/execute':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: team_id
          schema:
            format: int64
            type: string
        - in: query
          name: forecast_data.from
          schema:
            format: int64
            type: string
        - in: query
          name: forecast_data.to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmExecuteForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_ExecuteForecastCalculation
  '/wfm/lookups/forecast_calculation/{item.id}':
    put:
      parameters:
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateForecastCalculationResponse'
          description: A successful response.
      tags:
        - ForecastCalculationService
      operationId: ForecastCalculationService_UpdateForecastCalculation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    args:
                      items:
                        type: string
                      type: array
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domain_id:
                      format: int64
                      type: string
                    name:
                      type: string
                    procedure:
                      type: string
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                  type: object
              type: object
        required: true
  /wfm/lookups/pause_templates:
    get:
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchPauseTemplateResponse'
          description: A successful response.
      tags:
        - PauseTemplateService
      operationId: PauseTemplateService_SearchPauseTemplate
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreatePauseTemplateResponse'
          description: A successful response.
      tags:
        - PauseTemplateService
      operationId: PauseTemplateService_CreatePauseTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreatePauseTemplateRequest'
        required: true
  '/wfm/lookups/pause_templates/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeletePauseTemplateResponse'
          description: A successful response.
      tags:
        - PauseTemplateService
      operationId: PauseTemplateService_DeletePauseTemplate
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadPauseTemplateResponse'
          description: A successful response.
      tags:
        - PauseTemplateService
      operationId: PauseTemplateService_ReadPauseTemplate
  '/wfm/lookups/pause_templates/{item.id}':
    put:
      parameters:
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdatePauseTemplateResponse'
          description: A successful response.
      tags:
        - PauseTemplateService
      operationId: PauseTemplateService_UpdatePauseTemplate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    causes:
                      items:
                        $ref: '#/components/schemas/wfmPauseTemplateCause'
                        type: object
                      type: array
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domain_id:
                      format: int64
                      type: string
                    name:
                      type: string
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                  type: object
              type: object
        required: true
      summary: >-
        UpdatePauseTemplateCauseBulk updates a pause template with a list of
        causes.

        Update existing cause, create that not exists in database and delete
        that not exists in the list.
  /wfm/lookups/shift_templates:
    get:
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchShiftTemplateResponse'
          description: A successful response.
      tags:
        - ShiftTemplateService
      operationId: ShiftTemplateService_SearchShiftTemplate
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateShiftTemplateResponse'
          description: A successful response.
      tags:
        - ShiftTemplateService
      operationId: ShiftTemplateService_CreateShiftTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateShiftTemplateRequest'
        required: true
  '/wfm/lookups/shift_templates/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteShiftTemplateResponse'
          description: A successful response.
      tags:
        - ShiftTemplateService
      operationId: ShiftTemplateService_DeleteShiftTemplate
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadShiftTemplateResponse'
          description: A successful response.
      tags:
        - ShiftTemplateService
      operationId: ShiftTemplateService_ReadShiftTemplate
  '/wfm/lookups/shift_templates/{item.id}':
    put:
      parameters:
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateShiftTemplateResponse'
          description: A successful response.
      tags:
        - ShiftTemplateService
      operationId: ShiftTemplateService_UpdateShiftTemplate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domain_id:
                      format: int64
                      type: string
                    name:
                      type: string
                    times:
                      items:
                        $ref: '#/components/schemas/wfmShiftTemplateTime'
                        type: object
                      type: array
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                  type: object
              type: object
        required: true
      summary: >-
        UpdateShiftTemplate updates a shift template with a list times.

        Update existing time, create that not exists in database and delete that
        not exists in the list.
  /wfm/lookups/working_conditions:
    get:
      parameters:
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchWorkingConditionResponse'
          description: A successful response.
      tags:
        - WorkingConditionService
      operationId: WorkingConditionService_SearchWorkingCondition
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateWorkingConditionResponse'
          description: A successful response.
      tags:
        - WorkingConditionService
      operationId: WorkingConditionService_CreateWorkingCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateWorkingConditionRequest'
        required: true
  '/wfm/lookups/working_conditions/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteWorkingConditionResponse'
          description: A successful response.
      tags:
        - WorkingConditionService
      operationId: WorkingConditionService_DeleteWorkingCondition
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingConditionResponse'
          description: A successful response.
      tags:
        - WorkingConditionService
      operationId: WorkingConditionService_ReadWorkingCondition
  '/wfm/lookups/working_conditions/{item.id}':
    put:
      parameters:
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingConditionResponse'
          description: A successful response.
      tags:
        - WorkingConditionService
      operationId: WorkingConditionService_UpdateWorkingCondition
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    days_off:
                      format: int32
                      type: integer
                    description:
                      type: string
                    domain_id:
                      format: int64
                      type: string
                    name:
                      type: string
                    pause_duration:
                      format: int32
                      type: integer
                    pause_template:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    shift_template:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    sick_leaves:
                      format: int32
                      type: integer
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    vacation:
                      format: int32
                      type: integer
                    workday_hours:
                      format: int32
                      type: integer
                    workdays_per_month:
                      format: int32
                      type: integer
                  type: object
              type: object
        required: true
  /wfm/lookups/working_schedules:
    get:
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int32
            type: integer
        - in: query
          name: size
          schema:
            format: int32
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchWorkingScheduleResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_SearchWorkingSchedule
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateWorkingScheduleResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_CreateWorkingSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateWorkingScheduleRequest'
        required: true
  '/wfm/lookups/working_schedules/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteWorkingScheduleResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_DeleteWorkingSchedule
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingScheduleResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_ReadWorkingSchedule
  '/wfm/lookups/working_schedules/{id}/agents':
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingScheduleAddAgentsResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_UpdateWorkingScheduleAddAgents
      requestBody:
        content:
          application/json:
            schema:
              properties:
                agents:
                  items:
                    $ref: '#/components/schemas/wfmLookupEntity'
                    type: object
                  type: array
              type: object
        required: true
  '/wfm/lookups/working_schedules/{id}/agents/{agent_id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: agent_id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/wfmUpdateWorkingScheduleRemoveAgentResponse
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_UpdateWorkingScheduleRemoveAgent
  '/wfm/lookups/working_schedules/{id}/forecast':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: date.from
          schema:
            format: int64
            type: string
        - in: query
          name: date.to
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingScheduleForecastResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_ReadWorkingScheduleForecast
  '/wfm/lookups/working_schedules/{item.id}':
    put:
      parameters:
        - in: path
          name: item.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingScheduleResponse'
          description: A successful response.
      tags:
        - WorkingScheduleService
      operationId: WorkingScheduleService_UpdateWorkingSchedule
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  properties:
                    agents:
                      items:
                        $ref: '#/components/schemas/wfmLookupEntity'
                        type: object
                      type: array
                    block_outside_activity:
                      type: boolean
                    calendar:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    created_at:
                      format: int64
                      type: string
                    created_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    domain_id:
                      format: int64
                      type: string
                    end_date_at:
                      format: int64
                      type: string
                    end_time_at:
                      format: int64
                      type: string
                    extra_skills:
                      items:
                        $ref: '#/components/schemas/wfmLookupEntity'
                        type: object
                      type: array
                    name:
                      type: string
                    start_date_at:
                      format: int64
                      type: string
                    start_time_at:
                      format: int64
                      type: string
                    state:
                      $ref: '#/components/schemas/wfmWorkingScheduleState'
                    team:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    total_agents:
                      format: int64
                      type: string
                    updated_at:
                      format: int64
                      type: string
                    updated_by:
                      $ref: '#/components/schemas/wfmLookupEntity'
                  type: object
              type: object
        required: true
  '/{object.name}/{object.id}/acl':
    get:
      parameters:
        - description: display name
          in: path
          name: object.name
          required: true
          schema:
            type: string
        - description: identifier
          in: path
          name: object.id
          required: true
          schema:
            format: int64
            type: string
        - description: >-
            --- filters ---


            [optional] [FROM] each rule owner is any of role(s) id; user -or-
            role
          explode: true
          in: query
          name: grantor
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: '[optional] [TO] subject role(s) id; user -or- role'
          explode: true
          in: query
          name: grantee
          schema:
            items:
              format: int64
              type: string
            type: array
        - description: '[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)'
          explode: true
          in: query
          name: granted
          schema:
            items:
              type: string
            type: array
        - description: '[optional] [TO] subject.name ILIKE ?q=; user -or- role'
          in: query
          name: q
          schema:
            type: string
        - description: |-
            ----- Select Options -------------------------

            attributes list
          explode: true
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
        - description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          explode: true
          in: query
          name: sort
          schema:
            items:
              type: string
            type: array
        - description: |-
            pagedResultsControl

            default: 16
          in: query
          name: size
          schema:
            format: int32
            type: integer
        - description: 'default: 1'
          in: query
          name: page
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListAccessResponseV1'
          description: A successful response.
      tags:
        - AccessStore
      operationId: AccessStore_ListObjectAccess
    patch:
      parameters:
        - description: display name
          in: path
          name: object.name
          required: true
          schema:
            type: string
        - description: identifier
          in: path
          name: object.id
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateAccessResponseV1'
          description: A successful response.
      tags:
        - AccessStore
      operationId: AccessStore_ToggleObjectAccess
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/api.GrantAccessRequestV1'
                type: object
              type: array
        required: true
      summary: >-
        TODO: replace with GrantAccess API, to become command like GRANT REVOKE
        ... with empty access rights string
components:
  requestBodies:
    ContactGroups_UpdateContactGroupInput:
      content:
        application/json:
          schema:
            properties:
              group:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                description: Group of contacts associated.
            title: NEW Update of the group link.
            type: object
      description: NEW Update of the group link.
      required: true
    Devices_UpdateDeviceDevice:
      content:
        application/json:
          schema:
            properties:
              account:
                description: username
                title: credentials
                type: string
              brand:
                description: vendor brand name
                title: provision
                type: string
              created_at:
                format: int64
                title: unix
                type: string
              created_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              deleted_at:
                format: int64
                title: unix
                type: string
              deleted_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              hotdesk:
                description: act as a hotdesk
                title: 'Hotdesk: this workstation aliases'
                type: boolean
              hotdesks:
                items:
                  type: string
                title: associated aliases
                type: array
              ip:
                type: string
              logged_in:
                format: int64
                title: |-
                  caller profile
                   webitel.adt.caller caller = 4;
                type: string
              mac:
                title: static
                type: string
              model:
                type: string
              name:
                description: display name
                title: |-
                  kind of
                  DeviceType type = 19;
                type: string
              password:
                title: password
                type: string
              provision:
                additionalProperties:
                  type: string
                title: provision extra data
                type: object
              reged:
                title: |-
                  TODO: something like PresenceStatus instead of Registration
                   repeated Registration contacts = 16;
                type: boolean
              updated_at:
                format: int64
                title: unix
                type: string
              updated_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              user:
                $ref: '#/components/schemas/api.UserId'
                title: '[optional] The user that ''owns'' the device;'
            title: Device profile
            type: object
      description: Device profile
      required: true
    Dictionaries_UpdateData2Record:
      content:
        application/json:
          schema:
            type: object
      description: Record data fields changes.
      required: true
    Emails_UpdateEmailInput:
      content:
        application/json:
          schema:
            example:
              email: user@domain
              etag: '1679792219687'
              primary: true
              type:
                name: personal
              verified: false
            properties:
              email:
                description: The email address.
                type: string
              primary:
                description: >-
                  Indicates whether this phone number is default within other
                  channels of the same type(phone).
                type: boolean
              type:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                title: |-
                  The type of the email address.
                  Lookup value from CommunicationType dictionary.
                  The type can be custom or one of these predefined values:
                  - home
                  - work
                  - other
              verified:
                title: >-
                  Indicate whether Contact, as a Person, realy owns this
                  associated phone number.

                  In other words: whether Contact is reachable thru this 'email'
                  communication channel ?
                type: boolean
            required:
              - email
            title: NEW Update of the email address link.
            type: object
      description: NEW Update of the email address link.
      required: true
    Managers_UpdateManagerInput:
      content:
        application/json:
          schema:
            example:
              primary: true
              user:
                id: '357'
                name: Bruce Wayne
            properties:
              primary:
                description: >-
                  Indicates whether this association must be default among
                  others.
                type: boolean
              user:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                description: Responsible User.
            title: NEW Update of the manager link.
            type: object
      description: NEW Update of the manager link.
      required: true
    Phones_UpdatePhoneInput:
      content:
        application/json:
          schema:
            properties:
              number:
                description: The phone number.
                type: string
              primary:
                description: >-
                  Indicates whether this phone number is default within other
                  channels of the same type(phone).
                type: boolean
              type:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                title: |-
                  The type of the phone number.
                  Reference on CommunicationType dictionary.
                  Used for outbound routing while dialup a phone number.
                  The type can be custom or one of these predefined values:
                  - home
                  - work
                  - mobile
                  - homeFax
                  - workFax
                  - otherFax
                  - pager
                  - workMobile
                  - workPager
                  - main
                  - googleVoice
                  - other
              verified:
                title: >-
                  Indicate whether Contact, as a Person, realy owns this
                  associated phone number.

                  In other words: whether Contact is reachable thru this 'phone'
                  communication channel ?
                type: boolean
            required:
              - number
            title: NEW Update of the phone number details.
            type: object
      description: NEW Update of the phone number details.
      required: true
    Timezones_UpdateTimezoneInput:
      content:
        application/json:
          schema:
            properties:
              primary:
                description: >-
                  Indicates whether this association must be default among
                  others.
                type: boolean
              timezone:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                description: Timezone dictionary reference value associated.
            title: NEW Update of the timezone link.
            type: object
      description: NEW Update of the timezone link.
      required: true
    UpdateCaseInput:
      content:
        application/json:
          schema:
            properties:
              assignee:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default from service or set by UI;'
              close_reason:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required;'
              close_result:
                title: >-
                  create: not required; update: required only when case status
                  goes to the final state
                type: string
              contact_info:
                title: 'create: not required;'
                type: string
              custom:
                description: Custom data extension fields ..
                type: object
              description:
                title: 'create: not required;'
                type: string
              group:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default from service or set by UI;'
              impacted:
                $ref: '#/components/schemas/general.Lookup'
                title: >-
                  create: required, default is reporter or ui (if empty
                  recognize as anonymous);
              priority:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default first value from priority lookup'
              rating:
                format: int64
                type: string
              rating_comment:
                type: string
              reporter:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: required (if empty recognize as anonymous contact);'
              service:
                $ref: '#/components/schemas/general.Lookup'
                title: on this field base many other readonly fields on return
              source:
                $ref: '#/components/schemas/general.Lookup'
                title: source of the case
              status:
                $ref: '#/components/schemas/general.Lookup'
                title: >-
                  create: not required, default initial value from status lookup
                  or ui;
              status_condition:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
              subject:
                title: 'create: required;'
                type: string
              userID:
                $ref: '#/components/schemas/general.Lookup'
                description: >-
                  Optional creator / updater ID. Use this to explicitly set the
                  case creator / updater instead of deriving it from the auth
                  token.
            title: Input data with updated fields.
            type: object
      description: Input data with updated fields.
      required: true
    UpdateCommentInput:
      content:
        application/json:
          schema:
            example:
              text: My new comment
            properties:
              text:
                description: Content of the comment.
                type: string
              userID:
                $ref: '#/components/schemas/general.Lookup'
                description: >-
                  Optional creator / updater ID. Use this to explicitly set the
                  case creator / updater instead of deriving it from the auth
                  token.
            title: Data for the comment to update.
            type: object
      description: Data for the comment to update.
      required: true
    UpdateLinkInput:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
              url:
                type: string
              userID:
                $ref: '#/components/schemas/general.Lookup'
                description: >-
                  Optional creator / updater ID. Use this to explicitly set the
                  case creator / updater instead of deriving it from the auth
                  token.
            type: object
      required: true
    UpdateRelatedCaseInput:
      content:
        application/json:
          schema:
            properties:
              primary_case:
                description: Primary case details.
                properties:
                  name:
                    type: string
                title: Primary case details.
                type: object
              related_case:
                $ref: '#/components/schemas/general.Lookup'
                description: Related case details.
              relation_type:
                $ref: '#/components/schemas/webitel.cases.RelationType'
                description: Relation type.
              userID:
                $ref: '#/components/schemas/general.Lookup'
                description: >-
                  Optional creator / updater ID. Use this to explicitly set the
                  case creator / updater instead of deriving it from the auth
                  token.
            title: Input data for the related case update.
            type: object
      description: Input data for the related case update.
      required: true
    UserAccessTokens_UpdateUserAccessTokenUpdate:
      content:
        application/json:
          schema:
            properties:
              created_at:
                format: int64
                title: 'unix::ms'
                type: string
              created_by:
                $ref: '#/components/schemas/api.ObjectId'
              deleted_at:
                format: int64
                title: '[optional] disabled at'
                type: string
              deleted_by:
                $ref: '#/components/schemas/api.ObjectId'
                title: '[optional] disabled by'
              token:
                title: 'tokenString::access_token'
                type: string
              updated_at:
                format: int64
                title: 'unix::ms'
                type: string
              updated_by:
                $ref: '#/components/schemas/api.ObjectId'
              usage:
                title: '[optional] short usage description'
                type: string
              user:
                properties:
                  name:
                    title: display name
                    type: string
                title: '[optional] output depends on API endpoint'
                type: object
            title: '[required] identification + modifications(about)'
            type: object
      description: '[required] identification + modifications(about)'
      required: true
    Users_UpdateUserUser:
      content:
        application/json:
          schema:
            properties:
              chat_name:
                description: >-
                  The "chat_name" field is used to store the name displayed
                  externally on the platform.

                  For example, "chat_name" is shown when an agent connects to
                  chats with clients.
                type: string
              contact:
                $ref: '#/components/schemas/api.ObjectId'
                description: '[optional] contact connected to this user'
                title: |-
                  repeated Call calls = 13; // order by created_at
                  repeated Registration reged = 13; // order by register_last
              created_at:
                format: int64
                title: unix
                type: string
              created_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              deleted_at:
                format: int64
                title: unix
                type: string
              deleted_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              device:
                $ref: '#/components/schemas/api.ObjectId'
                title: '[optional] default device assigned ? WebRTC register ?'
              devices:
                description: >-
                  [editable] list of unique `regular` devices, attached to this
                  user
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: 'map<int64, string> devices = 13;'
                type: array
              email:
                type: string
              extension:
                title: 'Caller-ID-Number:'
                type: string
              hotdesks:
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: >-
                  [readonly] list of unique `hotdesk` devices, assigned to this
                  user
                type: array
              license:
                items:
                  $ref: '#/components/schemas/api.LicenseUser'
                  type: object
                title: 'list of unique licenses, granted to this user'
                type: array
              name:
                title: 'Caller-ID-Name: Display Name'
                type: string
              password:
                type: string
              permissions:
                items:
                  $ref: '#/components/schemas/api.Permission'
                  type: object
                title: set of operational permission grants
                type: array
              presence:
                $ref: '#/components/schemas/api.UserPresence'
                description: >-
                  string presence = 7; // unique set of <user> presentity
                  <status:basic> tuples open[ed]
                   string status = 8; // short display status (short description)
                title: |-
                  CallerId caller = 5; // extension
                  PresenceStatus presence = 8;
              profile:
                additionalProperties:
                  type: string
                title: >-
                  list of variables, assigned to this user as an environment
                  unit
                type: object
              roles:
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: 'roles, member of which is this user'
                type: array
              totp_url:
                title: >-
                  [readonly][optional] one time password if setting (2fa) is
                  enabled
                type: string
              updated_at:
                format: int64
                title: unix
                type: string
              updated_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              username:
                title: alphanumeric username (login)
                type: string
            title: 'body: modifications/changes'
            type: object
      description: 'body: modifications/changes'
      required: true
    Variables_UpdateVariableInput:
      content:
        application/json:
          schema:
            example:
              key: var_rename
              value:
                - string_item
                - - 3
                  - 7
                - false
                - null
            properties:
              key:
                description: NEW Key.
                pattern: ^\w+$
                type: string
              value:
                description: NEW Value.
            required:
              - key
            title: NEW Variable update.
            type: object
      description: NEW Variable update.
      required: true
    api.Classes.UpdateClassBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Classes.UpdateClassBody'
      required: true
    api.Domains.UpdateDomainBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
      required: true
    api.LDAP.DeleteLDAPTemplateBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
      required: true
    api.LDAP.UpdateLDAPCatalogBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
      required: true
    api.LDAP.UpdateLDAPTemplateBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
      required: true
    api.OAuth2Federation.UpdateOAuthServiceBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
      required: true
    api.Roles.UpdateRoleBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Roles.UpdateRoleBody'
      required: true
    webitel.cases.InputCatalog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCatalog'
      description: Input data for updating the catalog
      required: true
    webitel.cases.InputCloseReason:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCloseReason'
      required: true
    webitel.cases.InputCloseReasonGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
      required: true
    webitel.cases.InputPriority:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputPriority'
      required: true
    webitel.cases.InputSLA:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSLA'
      required: true
    webitel.cases.InputSLACondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSLACondition'
      required: true
    webitel.cases.InputService:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputService'
      description: Input data for updating the service
      required: true
    webitel.cases.InputSource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSource'
      required: true
    webitel.cases.InputStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputStatus'
      required: true
    webitel.cases.InputStatusCondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
      required: true
    webitel.contacts.DynamicGroupInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
      description: Input details for the dynamic group.
      required: true
    webitel.contacts.InputCondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.InputCondition'
      description: Input details for the condition.
      required: true
    webitel.contacts.InputGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.InputGroup'
      required: true
  schemas:
    CreateAgentsAbsencesRequestabsentType:
      properties:
        date_from:
          format: int64
          type: string
        date_to:
          format: int64
          type: string
        type_id:
          $ref: '#/components/schemas/wfmAbsenceType'
      type: object
    api.AccessRule:
      properties:
        granted:
          title: >-
            [WHAT]: full: [xrwdxrwd]; privileges: [----xrwd]; grantable:
            [xrwd----]
          type: string
        grantee:
          $ref: '#/components/schemas/api.RoleId'
          title: '[WHOM]: required; NEED to be rechecked !!!'
        grantor:
          $ref: '#/components/schemas/api.RoleId'
          description: '[WHO]: operational; current user NEED to be rechecked !!!'
          title: ObjectId object = 1;
      type: object
    api.AccessStore.ToggleDefaultAccessBody:
      properties:
        list:
          description: |-
            list of changes ...

            [TO] (GRANT/REVOKE)
          items:
            $ref: '#/components/schemas/api.GrantAccessRequestV1'
            type: object
          type: array
        object:
          title: '[ON] objclass (either: by entity .id -or- class .name)'
          type: object
      type: object
    api.AccessToken:
      properties:
        access_token:
          description: REQUIRED. The access token issued by the authorization server.
          type: string
        expires_in:
          description: RECOMMENDED. The lifetime in seconds of the access token.
          format: int32
          type: integer
        refresh_token:
          description: |-
            OPTIONAL. The refresh token, which can be used to obtain
            new access tokens using the same authorization grant.
          type: string
        state:
          description: |-
            OPTIONAL, if identical to the scope requested by the client;
            otherwise, REQUIRED. The scope of the access token.
            repeated string scope = 5 [ json_name = "scope" ];
            REQUIRED if the "state" parameter was present in the client
            authorization request. The exact value received from the client.
          type: string
        token_type:
          description: REQUIRED. The type of the token issued. Value is case insensitive.
          type: string
      title: OAuth 2.0 Access Token Response compatible
      type: object
    api.Claim:
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    api.Classes.UpdateClassBody:
      properties:
        class:
          properties:
            abac:
              title: '[a]ttribute-[b]ased [a]ccess [c]ontrol'
              type: boolean
            class:
              title: '(class::object).name'
              type: string
            obac:
              title: '[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)'
              type: boolean
            rbac:
              title: '[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)'
              type: boolean
          type: object
        domain:
          title: TO BE REMOVED // bound to session.domain.id
          type: string
        fields:
          items:
            type: string
          title: 'PATCH: partial update'
          type: array
      type: object
    api.CreateDeviceResponse:
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
      type: object
    api.CreateDomainRequest:
      properties:
        organization:
          $ref: '#/components/schemas/api.Organization'
        password:
          type: string
        superuser:
          type: string
      title: POST /domains
      type: object
    api.CreateDomainResponse:
      type: object
    api.CreateRoleRequest:
      properties:
        copy_id:
          format: int64
          title: |-
            ----- Query parameters -----
            Optional. Source role unique identifier
            to copy access (+default) control list from
          type: string
        role:
          $ref: '#/components/schemas/api.Role'
          title: entity to be created
      type: object
    api.CreateRoleResponse:
      properties:
        created:
          $ref: '#/components/schemas/api.Role'
          title: entity to be created
      type: object
    api.CreateUserRequest:
      properties:
        confirm_password:
          title: cleartext passphrase
          type: string
        user:
          $ref: '#/components/schemas/api.User'
          title: user entity to be created
        user_password:
          title: cleartext passphrase
          type: string
      type: object
    api.CreateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/api.User'
      type: object
    api.Customer:
      properties:
        created_at:
          description: local created ms
          format: int64
          title: |-
            string version = 2; // version
            local store details
          type: string
        dnsrv:
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: '[optional] domains'
          type: array
        id:
          title: 'serial number assigned (global::Customer-ID)'
          type: string
        issued_at:
          description: '[required] issuer(CA) created at'
          format: int64
          title: validity boundaries
          type: string
        license:
          description: grants issued
          items:
            $ref: '#/components/schemas/api.LicenseV1'
            type: object
          title: int32 competitive = 13; // zero-based competitive sessions limit ?
          type: array
        limit:
          additionalProperties:
            format: int32
            type: integer
          description: 'defines map[class]limit usage'
          title: extensions granted
          type: object
        next_update:
          format: int64
          title: '[optional]: signature expires; update required after'
          type: string
        not_after:
          format: int64
          title: '[required] valid till'
          type: string
        not_before:
          format: int64
          title: '[optional] valid from'
          type: string
        organization:
          title: registration name
          type: string
        revoked_at:
          format: int64
          title: local revoked ms
          type: string
        this_update:
          description: '[optional]: issuer(CA) signed at'
          format: int64
          title: signature validity
          type: string
        updated_at:
          format: int64
          title: last uploaded ms
          type: string
        verify:
          $ref: '#/components/schemas/api.Verification'
          description: '[optional] validation results'
          title: Verification status
      type: object
    api.DeleteDeviceResponse:
      properties:
        deleted:
          items:
            $ref: '#/components/schemas/api.Device'
            type: object
          type: array
      type: object
    api.DeleteDomainResponse:
      type: object
    api.DeleteLDAPRequest:
      properties:
        id:
          format: int64
          title: catalog id
          type: string
        related_objects:
          title: WITH objects bound to ?
          type: boolean
      type: object
    api.DeleteOAuthServiceRequest:
      properties:
        id:
          items:
            format: int64
            type: string
          type: array
        permanent:
          type: boolean
      type: object
    api.DeleteOAuthServiceResponse:
      type: object
    api.DeleteRoleResponse:
      properties:
        deleted:
          $ref: '#/components/schemas/api.Role'
      type: object
    api.DeleteUsersResponse:
      properties:
        deleted:
          items:
            $ref: '#/components/schemas/api.User'
            type: object
          type: array
      type: object
    api.Device:
      properties:
        account:
          description: username
          title: credentials
          type: string
        brand:
          description: vendor brand name
          title: provision
          type: string
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deleted_at:
          format: int64
          title: unix
          type: string
        deleted_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        hotdesk:
          description: act as a hotdesk
          title: 'Hotdesk: this workstation aliases'
          type: boolean
        hotdesks:
          items:
            type: string
          title: associated aliases
          type: array
        id:
          format: int64
          title: object id
          type: string
        ip:
          type: string
        logged_in:
          format: int64
          title: |-
            caller profile
             webitel.adt.caller caller = 4;
          type: string
        mac:
          title: static
          type: string
        model:
          type: string
        name:
          description: display name
          title: |-
            kind of
            DeviceType type = 19;
          type: string
        password:
          title: password
          type: string
        provision:
          additionalProperties:
            type: string
          title: provision extra data
          type: object
        reged:
          title: |-
            TODO: something like PresenceStatus instead of Registration
             repeated Registration contacts = 16;
          type: boolean
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          $ref: '#/components/schemas/api.UserId'
          title: '[optional] The user that ''owns'' the device;'
      title: Device profile
      type: object
    api.DeviceAudit:
      properties:
        device:
          $ref: '#/components/schemas/api.DeviceId'
          title: '/users/:id/audit related'
        hotdesk:
          type: string
        logged_in:
          format: int64
          type: string
        logged_out:
          format: int64
          type: string
        user:
          $ref: '#/components/schemas/api.UserId'
          title: '/devices/:id/audit related'
      title: Device login audit
      type: object
    api.DeviceAuditResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.DeviceAudit'
            type: object
          title: audit_logs
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.DeviceId:
      properties:
        id:
          format: int64
          title: Object ID
          type: string
        name:
          title: Display Name
          type: string
      title: DeviceId lookup value
      type: object
    api.Domains.UpdateDomainBody:
      properties:
        domain:
          properties:
            country:
              type: string
            createdAt:
              format: int64
              title: unix
              type: string
            createdBy:
              title: user
              type: string
            domain:
              title: FQDN
              type: string
            email:
              type: string
            locality:
              type: string
            organization:
              type: string
            postalAddress:
              type: string
            postalCode:
              type: string
            stateOrProvince:
              type: string
            streetAddress:
              type: string
            telephoneNumber:
              type: string
            updatedAt:
              format: int64
              title: unix
              type: string
            updatedBy:
              title: user
              type: string
          type: object
      title: 'PUT /domain/{domain.dc}'
      type: object
    api.GenerateTfaKeysForNecessaryUsersResponse:
      properties:
        affected:
          format: int64
          type: string
      type: object
    api.GenerateUserTfaKeyResponse:
      properties:
        totp:
          $ref: '#/components/schemas/api.TfaUrl'
      type: object
    api.GetCustomerResponse:
      properties:
        customer:
          $ref: '#/components/schemas/api.Customer'
      type: object
    api.GetUserTfaKeyResponse:
      properties:
        totp:
          $ref: '#/components/schemas/api.TfaUrl'
      type: object
    api.GrantAccessRequestV1:
      properties:
        grantee:
          format: int64
          title: grantee.role.id
          type: string
        grants:
          title: >-
            repeated string privileges = 5; //
            ["SEARCH","MODIFY","DELETE","CREATE"]

            bool grantable = 6; // WITH GRANT OPTION
          type: string
        object:
          $ref: '#/components/schemas/api.ObjectId'
          title: |-
            string class = 2;
            int64 object = 3; // class.object.id
      type: object
    api.GrantRoleResponse:
      type: object
    api.LDAP.CreateLDAPTemplateBody:
      properties:
        agent:
          title: OPTIONAL. Agent objclass fields mapping
          type: object
        base_dn:
          title: Optional. LDAP Search base entry DN
          type: string
        catalog:
          properties:
            name:
              title: display name
              type: string
          title: LDAPCatalog belongs to
          type: object
        created_at:
          description: unix
          format: int64
          title: READONLY. Operational attributes
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          title: OPTIONAL. Device objclass fields mapping
          type: object
        enabled:
          title: Optional. This Template is activated ?
          type: boolean
        id:
          format: int64
          title: ID unique
          type: string
        name:
          title: Name this template
          type: string
        role:
          title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
          type: object
        search:
          title: Required. LDAP Search filter string
          type: string
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          title: OPTIONAL. User objclass fields mapping
          type: object
      title: >-
        LDAPTemplate is an LDAP search entries to webitel objects transformation
        template
      type: object
    api.LDAP.DeleteLDAPTemplateBody:
      properties:
        base_dn:
          type: string
        disabled:
          type: boolean
        enabled:
          type: boolean
        fields:
          items:
            type: string
          title: attributes list
          type: array
        id:
          items:
            format: int64
            type: string
          title: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          type: array
        name:
          type: string
        objclass:
          type: string
        page:
          description: 'default: 1'
          format: int32
          title: '----- Select Options -------------------------'
          type: integer
        q:
          title: OPTIONAL. Filter(s) SET
          type: string
        size:
          format: int32
          title: 'default: 16'
          type: integer
        sort:
          items:
            type: string
          title: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          type: array
      type: object
    api.LDAP.LDAPSearchBody:
      properties:
        attributes:
          items:
            type: string
          title: AttributeSelection
          type: array
        baseObject:
          title: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          type: string
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          title: '----- BIND: Authorization -----'
          type: string
        controls:
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: |-
            ----- LDAPMessage -----
            Controls NOT implemented yet !
          type: array
        derefAliases:
          format: int32
          title: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          type: integer
        filter:
          title: 'Filter,'
          type: string
        password:
          title: password
          type: string
        scope:
          format: int32
          title: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          type: integer
        sizeLimit:
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
          type: string
        timeLimit:
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
          type: string
        tls:
          $ref: '#/components/schemas/api.LDAPSearchRequest.TLSConfig'
        typesOnly:
          title: 'BOOLEAN,'
          type: boolean
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          title: Optional. URL to establish connection to LDAP catalog
          type: string
        username:
          title: bind_dn
          type: string
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1'
      type: object
    api.LDAP.ResyncLDAPCatalogBody:
      properties:
        options:
          $ref: '#/components/schemas/api.LDAProcessOptions'
          title: Options
      type: object
    api.LDAP.UpdateLDAPCatalogBody:
      properties:
        catalog:
          description: LDAP Catalog changes.
          properties:
            base_dn:
              title: 'base_dn, aka domain e.g.: ''dc=example,dc=org'''
              type: string
            bind:
              description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
              title: '----- BIND: Authorization -----'
              type: string
            created_at:
              description: unix
              format: int64
              title: 'basic: last operation details'
              type: string
            created_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            cron:
              description: '[CRON]OS SPEC ! github.com/robfig/cron/v3'
              title: |-
                ----- RSYNC Processing -----
                int32  priority = 4;
              type: string
            entry_modify:
              title: last modification timestamp attribute type
              type: string
            entry_uuid:
              description: entry unique id (except DN which may be updated)
              title: '----- DOMAIN: Entry model -----'
              type: string
            name:
              title: Meaningfull title name
              type: string
            password:
              title: password
              type: string
            process:
              $ref: '#/components/schemas/api.LDAProcess'
              title: Last OR Current SYNC process details
            sync:
              $ref: '#/components/schemas/api.LDAProcessOptions'
            templates:
              items:
                $ref: '#/components/schemas/api.LDAPTemplate'
                type: object
              title: |-
                // // ----- MAP: user(s) settings -----
                LDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead
                SYNC Object's search and mappings
              type: array
            tls:
              $ref: '#/components/schemas/api.LDAPCatalog.TLSConfig'
            updated_at:
              format: int64
              title: unix
              type: string
            updated_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            url:
              description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
              title: '----- Connection Options -----'
              type: string
            username:
              title: bind_dn
              type: string
          title: LDAP Catalog changes.
          type: object
        fields:
          items:
            type: string
          title: Fields for partial update. PATCH
          type: array
      type: object
    api.LDAP.UpdateLDAPTemplateBody:
      properties:
        fields:
          items:
            type: string
          title: OPTIONAL. Fields for partial update. PATCH
          type: array
        template:
          description: Template changes.
          properties:
            agent:
              title: OPTIONAL. Agent objclass fields mapping
              type: object
            base_dn:
              title: Optional. LDAP Search base entry DN
              type: string
            catalog:
              properties:
                name:
                  title: display name
                  type: string
              title: LDAPCatalog belongs to
              type: object
            created_at:
              description: unix
              format: int64
              title: READONLY. Operational attributes
              type: string
            created_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            device:
              title: OPTIONAL. Device objclass fields mapping
              type: object
            enabled:
              title: Optional. This Template is activated ?
              type: boolean
            name:
              title: Name this template
              type: string
            role:
              title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
              type: object
            search:
              title: Required. LDAP Search filter string
              type: string
            updated_at:
              format: int64
              title: unix
              type: string
            updated_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            user:
              title: OPTIONAL. User objclass fields mapping
              type: object
          title: Template changes.
          type: object
      type: object
    api.LDAPCatalog:
      properties:
        base_dn:
          title: 'base_dn, aka domain e.g.: ''dc=example,dc=org'''
          type: string
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          title: '----- BIND: Authorization -----'
          type: string
        created_at:
          description: unix
          format: int64
          title: 'basic: last operation details'
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        cron:
          description: '[CRON]OS SPEC ! github.com/robfig/cron/v3'
          title: |-
            ----- RSYNC Processing -----
            int32  priority = 4;
          type: string
        entry_modify:
          title: last modification timestamp attribute type
          type: string
        entry_uuid:
          description: entry unique id (except DN which may be updated)
          title: '----- DOMAIN: Entry model -----'
          type: string
        id:
          format: int64
          title: |-
            identity
            int64 dc = 1;
          type: string
        name:
          title: Meaningfull title name
          type: string
        password:
          title: password
          type: string
        process:
          $ref: '#/components/schemas/api.LDAProcess'
          title: Last OR Current SYNC process details
        sync:
          $ref: '#/components/schemas/api.LDAProcessOptions'
        templates:
          items:
            $ref: '#/components/schemas/api.LDAPTemplate'
            type: object
          title: |-
            // // ----- MAP: user(s) settings -----
            LDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead
            SYNC Object's search and mappings
          type: array
        tls:
          $ref: '#/components/schemas/api.LDAPCatalog.TLSConfig'
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          title: '----- Connection Options -----'
          type: string
        username:
          title: bind_dn
          type: string
      title: LDAPCatalog profile
      type: object
    api.LDAPCatalog.TLSConfig:
      properties:
        ca:
          format: byte
          title: 'PEM: base64'
          type: string
        cert:
          description: 'PEM: base64'
          format: byte
          title: 'TODO: (!)'
          type: string
        key:
          format: byte
          title: 'PEM: base64'
          type: string
      title: TLS configuration options
      type: object
    api.LDAPControl:
      properties:
        controlType:
          title: 'LDAPOID,'
          type: string
        controlValue:
          title: OCTET STRING OPTIONAL
          type: string
        criticality:
          title: 'BOOLEAN DEFAULT FALSE,'
          type: boolean
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.1.11'
      type: object
    api.LDAPObjentry:
      properties:
        class:
          title: Internal object class been associated with this LDAP .entry
          type: string
        entry:
          description: 'map<string, string> entry = 1;'
          title: LDAP Entry Attributes fetched
          type: object
        errs:
          items:
            type: string
          title: FATAL Error(s). NON empty indicates that this process failed
          type: array
        object:
          title: Internal object state; DUMP
          type: object
        proc:
          title: 'Operation been performed: create|update|delete'
          type: string
        warn:
          items:
            type: string
          title: |-
            An error(s) if any occured
            NON-FATAL Warnings
          type: array
      title: LDAP entry object associatetions performed
      type: object
    api.LDAPSearchRequest:
      properties:
        attributes:
          items:
            type: string
          title: AttributeSelection
          type: array
        baseObject:
          title: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          type: string
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          title: '----- BIND: Authorization -----'
          type: string
        catalog_id:
          format: int64
          title: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          type: string
        controls:
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: |-
            ----- LDAPMessage -----
            Controls NOT implemented yet !
          type: array
        derefAliases:
          format: int32
          title: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          type: integer
        filter:
          title: 'Filter,'
          type: string
        password:
          title: password
          type: string
        scope:
          format: int32
          title: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          type: integer
        sizeLimit:
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
          type: string
        timeLimit:
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
          type: string
        tls:
          $ref: '#/components/schemas/api.LDAPSearchRequest.TLSConfig'
        typesOnly:
          title: 'BOOLEAN,'
          type: boolean
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          title: Optional. URL to establish connection to LDAP catalog
          type: string
        username:
          title: bind_dn
          type: string
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1'
      type: object
    api.LDAPSearchRequest.TLSConfig:
      properties:
        PEM:
          description: base64
          format: byte
          title: 'TODO: (!)'
          type: string
      title: TLS configuration options
      type: object
    api.LDAPSearchResponse:
      properties:
        controls:
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: '----- LDAPMessage -----'
          type: array
        diagnosticMessage:
          title: 'LDAPString,'
          type: string
        entries:
          items:
            type: object
          title: '----- SearchResult (Entry|Reference) -----'
          type: array
        matchedDN:
          title: 'LDAPDN,'
          type: string
        referral:
          items:
            type: string
          title: '[3] Referral OPTIONAL'
          type: array
        resultCode:
          format: int32
          title: '----- LDAPResult -----'
          type: integer
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.2'
      type: object
    api.LDAPTemplate:
      properties:
        agent:
          title: OPTIONAL. Agent objclass fields mapping
          type: object
        base_dn:
          title: Optional. LDAP Search base entry DN
          type: string
        catalog:
          $ref: '#/components/schemas/api.ObjectId'
          title: LDAPCatalog belongs to
        created_at:
          description: unix
          format: int64
          title: READONLY. Operational attributes
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          title: OPTIONAL. Device objclass fields mapping
          type: object
        enabled:
          title: Optional. This Template is activated ?
          type: boolean
        id:
          format: int64
          title: ID unique
          type: string
        name:
          title: Name this template
          type: string
        role:
          title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
          type: object
        search:
          title: Required. LDAP Search filter string
          type: string
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          title: OPTIONAL. User objclass fields mapping
          type: object
      title: >-
        LDAPTemplate is an LDAP search entries to webitel objects transformation
        template
      type: object
    api.LDAPTemplateResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.LDAPTemplate'
            type: object
          type: array
        next:
          title: 'result: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'result: {page} number'
          type: integer
      type: object
    api.LDAProcess:
      properties:
        complete_at:
          description: Optional. If not <zero> indicates that this process is completed.
          format: int64
          type: string
        execute_at:
          format: int64
          title: Readonly. Process start timestamp
          type: string
        execute_by:
          $ref: '#/components/schemas/api.RoleId'
          title: Optional. Start manually by the user or role
        id:
          format: int64
          title: Readonly. Process unique identifier
          type: string
        options:
          $ref: '#/components/schemas/api.LDAProcessOptions'
          title: Readonly. Executed with options
        progress:
          items:
            $ref: '#/components/schemas/api.LDAPObjentry'
            type: object
          title: Optional. List of entries been already processed
          type: array
        status:
          title: Optional. Status description or an error if any occured
          type: string
      title: LDAP synchronization process details
      type: object
    api.LDAProcessOptions:
      properties:
        link_existing_objects:
          title: |-
            Allows to create links
            with fetched LDAP entries
            for manually created objects
          type: boolean
        reassign_device_users:
          title: |-
            Allows to reassign device's owner user
            due to preconfigured mapping LDAP template
          type: boolean
        test:
          title: |-
            Will NOT perform any operations on storage.
            To review potential processing only
          type: boolean
        timeout:
          format: int64
          title: Operation timeout. Not implemented yet
          type: string
      type: object
    api.LDAProcessResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.LDAProcess'
            type: object
          type: array
        next:
          title: 'result: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'result: {page} number'
          type: integer
      type: object
    api.LicenseUsageResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.LicenseV1'
            type: object
          title: |-
            size = (.next ? len(items) : undef (> len(size)))
            ----- Result entries ----- //
          type: array
        next:
          title: next page exists ? more results ?
          type: boolean
        page:
          description: this page number !
          format: int32
          title: '----- Result paging ----- //'
          type: integer
      type: object
    api.LicenseUser:
      properties:
        expires_at:
          format: int64
          title: not after
          type: string
        id:
          title: license.id
          type: string
        issued_at:
          format: int64
          title: not before
          type: string
        prod:
          title: license.prod
          type: string
        scope:
          items:
            type: string
          title: setof objclass grants
          type: array
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::user'
      title: USAGE details
      type: object
    api.LicenseUsersResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.ProductUser'
            type: object
          title: |-
            size = (.next ? len(items) : undef (> len(size)))
            ----- Result entries ----- //
          type: array
        next:
          title: next page exists ? more results ?
          type: boolean
        page:
          description: this page number !
          format: int32
          title: '----- Result paging ----- //'
          type: integer
      type: object
    api.LicenseV1:
      properties:
        competitive:
          type: boolean
        id:
          title: 'serial number assigned (global::License-ID)'
          type: string
        limit:
          format: int32
          title: 'required: limit count (maximum allowed usage quantity)'
          type: integer
        not_after:
          format: int64
          title: optional
          type: string
        not_before:
          format: int64
          title: optional
          type: string
        product:
          title: 'product name, e.g.: DEVICE, MANAGER, OPERATOR'
          type: string
        remain:
          description: available
          format: int32
          title: |-
            operational attributes ...
            remain = limit - len(users)
          type: integer
        scope:
          description: >-
            list of known classes, &this product grants mandatory access to,
            e.g.: 'users', 'roles', 'cc_agent', 'calendars', ...
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/api.Verification'
        users:
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: users.id (grantees)
          type: array
      type: object
    api.ListAccessResponseV1:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
          title: endregion
          type: array
        next:
          title: 'indicate partial response: ( next || page > 1 ? partial : full )'
          type: boolean
        page:
          format: int32
          title: 'region: paged result control response value'
          type: integer
      type: object
    api.ListRegistrationsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.Registration'
            type: object
          title: registered
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.LoginResponse:
      properties:
        authorization:
          $ref: '#/components/schemas/api.AccessToken'
      type: object
    api.LogoutUserResponse:
      type: object
    api.OAuth2Federation.DeleteOAuthServiceBody:
      properties:
        permanent:
          type: boolean
      type: object
    api.OAuth2Federation.UpdateOAuthServiceBody:
      properties:
        changes:
          description: Configuration changes.
          properties:
            auth_url:
              title: OAuth 2.0 Authorization Endpoint
              type: string
            claims:
              description: google.protobuf.Struct claims = 7;
              items:
                $ref: '#/components/schemas/api.Claim'
                type: object
              title: |-
                Identity claims policy rules
                NOTE: Order matters
              type: array
            client_id:
              type: string
            client_secret:
              type: string
            created_at:
              format: int64
              title: unix
              type: string
            created_by:
              $ref: '#/components/schemas/api.ObjectId'
              title: user
            discovery_url:
              title: OpenID Connect Service Discovery
              type: string
            domain:
              $ref: '#/components/schemas/api.ObjectId'
            enabled:
              type: boolean
            logo:
              type: string
            metadata:
              type: object
            name:
              title: display
              type: string
            scopes:
              items:
                type: string
              title: Scopes to be requested
              type: array
            token_url:
              title: OAuth 2.0 Token Endpoint
              type: string
            type:
              title: well-known vendor; provider
              type: string
            updated_at:
              format: int64
              title: unix
              type: string
            updated_by:
              $ref: '#/components/schemas/api.ObjectId'
              title: user
            userinfo_url:
              title: OpenID Connect Userinfo Endpoint
              type: string
          title: Configuration changes.
          type: object
        fields:
          items:
            type: string
          title: Fields for partial update. PATCH
          type: array
      type: object
    api.OAuthService:
      properties:
        auth_url:
          title: OAuth 2.0 Authorization Endpoint
          type: string
        claims:
          description: google.protobuf.Struct claims = 7;
          items:
            $ref: '#/components/schemas/api.Claim'
            type: object
          title: |-
            Identity claims policy rules
            NOTE: Order matters
          type: array
        client_id:
          type: string
        client_secret:
          type: string
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          $ref: '#/components/schemas/api.ObjectId'
          title: user
        discovery_url:
          title: OpenID Connect Service Discovery
          type: string
        domain:
          $ref: '#/components/schemas/api.ObjectId'
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        logo:
          type: string
        metadata:
          type: object
        name:
          title: display
          type: string
        scopes:
          items:
            type: string
          title: Scopes to be requested
          type: array
        token_url:
          title: OAuth 2.0 Token Endpoint
          type: string
        type:
          title: well-known vendor; provider
          type: string
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.ObjectId'
          title: user
        userinfo_url:
          title: OpenID Connect Userinfo Endpoint
          type: string
      title: 'OAuth 2.0 Authentication [S]ervice [P]rovider Application Configuration'
      type: object
    api.Objclass:
      properties:
        abac:
          description: '[A]ttribute-[b]ased;  not implemented; next releases ...'
          title: 'Is [?]-[b]ased [A]ccess [C]ontrol *model enabled ?'
          type: boolean
        access:
          description: 'flags: [ CREATE | SELECT | UPDATE | DELETE ]'
          title: 'Extension: discretionary access control'
          type: string
        class:
          title: 'class: alphanumeric code name'
          type: string
        id:
          description: 'class: object id'
          format: int64
          title: 'Inherit::ObjectClass'
          type: string
        name:
          title: 'class: display common name'
          type: string
        obac:
          title: >-
            [O]peration-[b]ased;  Mandatory: control access to object.class
            (alias: collection, section, etc.)
          type: boolean
        rbac:
          title: >-
            [R]ecord-[b]ased; Discretionary: control access to object.entry
            (alias: resource, record, etc.)
          type: boolean
      title: |-
        AccessScope represents authorized access level
        to object class declaration within domain namespace
      type: object
    api.ObjectClass:
      properties:
        abac:
          title: '[a]ttribute-[b]ased [a]ccess [c]ontrol'
          type: boolean
        class:
          title: '(class::object).name'
          type: string
        id:
          format: int64
          title: '(class::object).id'
          type: string
        obac:
          title: '[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)'
          type: boolean
        rbac:
          title: '[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)'
          type: boolean
      type: object
    api.ObjectId:
      properties:
        id:
          format: int64
          title: identifier
          type: string
        name:
          title: display name
          type: string
      type: object
    api.Organization:
      properties:
        country:
          type: string
        createdAt:
          format: int64
          title: unix
          type: string
        createdBy:
          title: user
          type: string
        dc:
          format: int64
          title: component
          type: string
        domain:
          title: FQDN
          type: string
        email:
          type: string
        locality:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
        postalCode:
          type: string
        stateOrProvince:
          type: string
        streetAddress:
          type: string
        telephoneNumber:
          type: string
        updatedAt:
          format: int64
          title: unix
          type: string
        updatedBy:
          title: user
          type: string
      type: object
    api.Permission:
      properties:
        id:
          description: '[required] e.g.: ''read'', ''playback_record_file'', ...'
          type: string
        name:
          title: '[optional] e.g.: ''Select Any'''
          type: string
        usage:
          title: '[optional] e.g.: ''Grants permission to select any objects'''
          type: string
      type: object
    api.Presence.SetStatusBody:
      properties:
        fields:
          items:
            type: string
          title: 'PATCH: partial attributes'
          type: array
        publish:
          description: 'BODY: partial modifications'
          properties:
            expires:
              format: int32
              title: '[optional] <note> will be cleaned up after seconds'
              type: integer
            note:
              title: '[optional] human readable comment'
              type: string
            status:
              title: >-
                [optional] set of unique 'active' presentities
                {dnd,dlg,sip,wss}; assume {offline} if omitted
              type: string
            timestamp:
              format: int64
              title: '[required] last activity time'
              type: string
          title: int64 id = 1; // user.id
          type: object
      type: object
    api.PresenceStatus:
      properties:
        app:
          title: '[optional] service node identity'
          type: string
        closed:
          title: >-
            [optional] signify <status> tuple gone from user's presence; equls
            to (open == 0)
          type: boolean
        contact:
          title: '[optional] communication <url>'
          type: string
        domain_id:
          format: int64
          title: '[hidden] for cluster purpose'
          type: string
        expires:
          format: int64
          title: 'NOTE: <dnd> actualy has no expires until user manualy switch it off'
          type: string
        id:
          description: '[required] tuple unique id; <track>'
          title: 'basic:latest'
          type: string
        note:
          title: '[optional] human readable comment'
          type: string
        open:
          format: int32
          title: '[optional] positive value signify ''active'''
          type: integer
        presence:
          description: "// FIXME: well-known types ?\r\n repeated Dialog  call = 9;\r\n repeated Sipreg  sip = 9;\r\n repeated Websock wss = 9;"
          items:
            $ref: '#/components/schemas/api.PresenceStatus'
            type: object
          title: 'detailed: -registered -tracking tuples'
          type: array
        priority:
          format: int32
          title: '[optional] importance level of this within presentity''s'
          type: integer
        sequence:
          format: int64
          title: '[optional] this tuple (document) modifications version'
          type: string
        status:
          title: >-
            [optional] unique set of <enum:dnd|call|sip|wss>; assume <offline>
            if blank; <scope> on request
          type: string
        timestamp:
          format: int64
          title: '[required] opened time'
          type: string
      title: PresenceStatus PUBLISH
      type: object
    api.ProductUser:
      properties:
        domain:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::domain'
        expires_at:
          format: int64
          title: not after
          type: string
        issued_at:
          format: int64
          title: not before
          type: string
        sessions:
          format: int32
          title: User's active sessions count !
          type: integer
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::user'
      title: ProductUser GRANT details
      type: object
    api.ReadClassResponse:
      properties:
        class:
          $ref: '#/components/schemas/api.ObjectClass'
      type: object
    api.ReadDeviceResponse:
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
      type: object
    api.ReadDomainResponse:
      properties:
        domain:
          $ref: '#/components/schemas/api.Organization'
      type: object
    api.ReadRoleResponse:
      properties:
        role:
          $ref: '#/components/schemas/api.Role'
      type: object
    api.ReadUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/api.User'
      type: object
    api.Registration:
      properties:
        callid:
          type: string
        contact:
          title: binding_uri
          type: string
        device:
          $ref: '#/components/schemas/api.DeviceId'
        expires_at:
          format: int64
          type: string
        id:
          format: int64
          type: string
        instance:
          title: '?sip.instance= register contact option'
          type: string
        received:
          title: 'registrant: remote side (proxy)'
          type: string
        register_at:
          format: int64
          type: string
        socket:
          title: 'registrar: local side (host) e.g.:'
          type: string
        user:
          $ref: '#/components/schemas/api.UserId'
        user_agent:
          type: string
      title: REGISTER SIP status
      type: object
    api.RevokeRoleResponse:
      type: object
    api.Role:
      properties:
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deleted_at:
          format: int64
          title: unix
          type: string
        deleted_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        description:
          title: short description
          type: string
        id:
          format: int64
          title: oid
          type: string
        members:
          description: users/roles
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: |-
            Caller caller = 4; // TOBE removed !!!
            map<int64, string> users = 4;
          type: array
        metadata:
          title: >-
            Optional. Metadata bound to this role by the third party
            integrations

            Each attribute of this object represents separate various data

            to be able to store and merge separate keys (documents)
          type: object
        name:
          title: display common name
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          type: array
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          title: >-
            READONLY. Report whether this Role refers to the internal
            User(=true) or Group(=false)
          type: boolean
      title: Role represents group of users
      type: object
    api.Role.Member:
      properties:
        admin:
          title: admin of the group ?
          type: boolean
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          title: 'user.[id|name]'
          type: string
        id:
          format: int64
          title: user.id
          type: string
        name:
          title: user.name
          type: string
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          title: user
          type: string
      type: object
    api.RoleId:
      description: RoleId lookup value.
      properties:
        id:
          format: int64
          title: Unique Object IDentifier
          type: string
        name:
          title: Display Name
          type: string
        user:
          title: |-
            Optional. Indicates that this role ID refers
            to the internal user as the system administrative unit
          type: boolean
      type: object
    api.RoleMembersResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/api.Role.Member'
            type: object
          type: array
      type: object
    api.RoleMetadataResponse:
      properties:
        key:
          title: Optional. Partial metadata document key name
          type: string
        value:
          title: Metadata value
      type: object
    api.Roles.UpdateRoleBody:
      properties:
        fields:
          items:
            type: string
          title: partial changes
          type: array
        role:
          properties:
            created_at:
              format: int64
              title: unix
              type: string
            created_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            deleted_at:
              format: int64
              title: unix
              type: string
            deleted_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            description:
              title: short description
              type: string
            members:
              description: users/roles
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: |-
                Caller caller = 4; // TOBE removed !!!
                map<int64, string> users = 4;
              type: array
            metadata:
              title: >-
                Optional. Metadata bound to this role by the third party
                integrations

                Each attribute of this object represents separate various data

                to be able to store and merge separate keys (documents)
              type: object
            name:
              title: display common name
              type: string
            permissions:
              items:
                $ref: '#/components/schemas/api.Permission'
                type: object
              type: array
            updated_at:
              format: int64
              title: unix
              type: string
            updated_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            user:
              title: >-
                READONLY. Report whether this Role refers to the internal
                User(=true) or Group(=false)
              type: boolean
          title: modifications
          type: object
      type: object
    api.SearchClassesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.ObjectClass'
            type: object
          title: list
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.SearchDeviceResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.Device'
            type: object
          title: devices
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.SearchDomainsResponse:
      properties:
        domains:
          items:
            $ref: '#/components/schemas/api.Organization'
            type: object
          type: array
      type: object
    api.SearchLDAPResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.LDAPCatalog'
            type: object
          type: array
        next:
          title: 'result: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'result: {page} number'
          type: integer
      type: object
    api.SearchOAuthServiceResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.OAuthService'
            type: object
          type: array
        next:
          title: 'result: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'result: {page} number'
          type: integer
      type: object
    api.SearchPermissionResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          title: result entries
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.SearchRolesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.Role'
            type: object
          title: roles
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          description: 'select: offset {page}'
          format: int32
          title: pagedResultsControl response value
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.SearchUsersRequest:
      properties:
        any:
          description: 'filter: include ''deleted'' ALSO ! (inactive)'
          title: |-
            ----- View Modes -----------------------------
            NOTE: by default, search NOT 'deleted' objects ONLY
          type: boolean
        deleted:
          title: 'filter: .deleted_at NOTNULL (view: RECYCLE)'
          type: boolean
        extension:
          title: 'filter: .extension LIKE ''{extension}'''
          type: string
        fields:
          description: 'select: output (fields,...)'
          items:
            type: string
          title: |-
            // navigation filter
            repeated int64 roles = 7;
            ----- Search Options -------------------------
          type: array
        id:
          description: 'filter: .id = any({id}...)'
          items:
            format: int64
            type: string
          title: '----- Base Filters ---------------------------'
          type: array
        name:
          title: 'filter: .name ILIKE ''{name}'''
          type: string
        not_id:
          items:
            format: int64
            type: string
          title: 'filter: .id <> all({not_ids}...)'
          type: array
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        presence:
          $ref: '#/components/schemas/api.SearchUsersRequest.Presence'
        q:
          description: 'filter: (.name|.username|.extension|.status) ILIKE ''{q}'''
          title: '----- User-specific Filters ------------------'
          type: string
        size:
          format: int32
          title: 'select: limit {size}'
          type: integer
        sort:
          items:
            type: string
          title: 'select: order by (fields,...)'
          type: array
        status:
          title: 'filter: .status ILIKE ''{status}'''
          type: string
        username:
          title: 'filter: .username ILIKE ''{username}'''
          type: string
      type: object
    api.SearchUsersRequest.Presence:
      properties:
        note:
          type: string
        status:
          type: string
      title: simplified presence filter params
      type: object
    api.SearchUsersResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.User'
            type: object
          title: users
          type: array
        next:
          title: 'search: has {next} page ?'
          type: boolean
        page:
          format: int32
          title: 'select: offset {page}'
          type: integer
        size:
          format: int32
          title: 'search: limit {size}'
          type: integer
      type: object
    api.ServerInfoResponse:
      properties:
        key:
          format: byte
          title: int64 time = 1; // current timestamp (ms)
          type: string
      type: object
    api.SetStatusRequest:
      properties:
        fields:
          items:
            type: string
          title: 'PATCH: partial attributes'
          type: array
        publish:
          $ref: '#/components/schemas/api.UserPresence'
          description: 'BODY: partial modifications'
          title: int64 id = 1; // user.id
      type: object
    api.SystemObjects:
      default: contacts
      enum:
        - contacts
        - cc_list
        - cc_bucket
        - calendars
        - devices
        - cc_agent
        - cc_team
        - cc_resource
        - cc_resource_group
        - cc_queue
        - roles
        - users
        - cognitive_profile
      type: string
    api.TfaUrl:
      properties:
        url:
          type: string
        user:
          $ref: '#/components/schemas/api.UserId'
      type: object
    api.ToggleDefaultAccessResponse:
      properties:
        granted:
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
          type: array
        revoked:
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
          type: array
      type: object
    api.UpdateAccessResponseV1:
      properties:
        granted:
          format: int64
          title: Affected rules count
          type: string
        revoked:
          format: int64
          type: string
      type: object
    api.UpdateClassResponse:
      properties:
        class:
          $ref: '#/components/schemas/api.ObjectClass'
          title: updated
      type: object
    api.UpdateCustomerResponse:
      properties:
        customer:
          $ref: '#/components/schemas/api.Customer'
          title: detailed
      type: object
    api.UpdateDeviceResponse:
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
      type: object
    api.UpdateDomainResponse:
      properties:
        domain:
          $ref: '#/components/schemas/api.Organization'
      type: object
    api.UpdateRoleResponse:
      properties:
        updated:
          $ref: '#/components/schemas/api.Role'
      type: object
    api.UpdateUserResponse:
      properties:
        updated:
          $ref: '#/components/schemas/api.User'
      type: object
    api.User:
      description: User profile.
      properties:
        chat_name:
          description: >-
            The "chat_name" field is used to store the name displayed externally
            on the platform.

            For example, "chat_name" is shown when an agent connects to chats
            with clients.
          type: string
        contact:
          $ref: '#/components/schemas/api.ObjectId'
          description: '[optional] contact connected to this user'
          title: |-
            repeated Call calls = 13; // order by created_at
            repeated Registration reged = 13; // order by register_last
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deleted_at:
          format: int64
          title: unix
          type: string
        deleted_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] default device assigned ? WebRTC register ?'
        devices:
          description: '[editable] list of unique `regular` devices, attached to this user'
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'map<int64, string> devices = 13;'
          type: array
        email:
          type: string
        extension:
          title: 'Caller-ID-Number:'
          type: string
        hotdesks:
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
          type: array
        id:
          format: int64
          title: Object ID
          type: string
        license:
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: 'list of unique licenses, granted to this user'
          type: array
        name:
          title: 'Caller-ID-Name: Display Name'
          type: string
        password:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          title: set of operational permission grants
          type: array
        presence:
          $ref: '#/components/schemas/api.UserPresence'
          description: >-
            string presence = 7; // unique set of <user> presentity
            <status:basic> tuples open[ed]
             string status = 8; // short display status (short description)
          title: |-
            CallerId caller = 5; // extension
            PresenceStatus presence = 8;
        profile:
          additionalProperties:
            type: string
          title: 'list of variables, assigned to this user as an environment unit'
          type: object
        roles:
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'roles, member of which is this user'
          type: array
        totp_url:
          title: '[readonly][optional] one time password if setting (2fa) is enabled'
          type: string
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/api.UserId'
          title: user
        username:
          title: alphanumeric username (login)
          type: string
      type: object
    api.UserAccessToken:
      description: UserId lookup value.
      properties:
        created_at:
          format: int64
          title: 'unix::ms'
          type: string
        created_by:
          $ref: '#/components/schemas/api.ObjectId'
        deleted_at:
          format: int64
          title: '[optional] disabled at'
          type: string
        deleted_by:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] disabled by'
        id:
          title: 'tokenKey::token_key'
          type: string
        token:
          title: 'tokenString::access_token'
          type: string
        updated_at:
          format: int64
          title: 'unix::ms'
          type: string
        updated_by:
          $ref: '#/components/schemas/api.ObjectId'
        usage:
          title: '[optional] short usage description'
          type: string
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] output depends on API endpoint'
      type: object
    api.UserAccessTokenList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/api.UserAccessToken'
            type: object
          type: array
        next:
          title: is there more results ? next page is available ?
          type: boolean
        page:
          format: int32
          type: integer
        size:
          format: int64
          type: string
      type: object
    api.UserId:
      description: UserId lookup value.
      properties:
        id:
          format: int64
          title: Object ID
          type: string
        name:
          title: Display Name
          type: string
      type: object
    api.UserPresence:
      properties:
        expires:
          format: int32
          title: '[optional] <note> will be cleaned up after seconds'
          type: integer
        id:
          format: int64
          title: '[required] user identity'
          type: string
        note:
          title: '[optional] human readable comment'
          type: string
        status:
          title: >-
            [optional] set of unique 'active' presentities {dnd,dlg,sip,wss};
            assume {offline} if omitted
          type: string
        timestamp:
          format: int64
          title: '[required] last activity time'
          type: string
      type: object
    api.UserSetting:
      properties:
        key:
          type: string
        value: {}
      type: object
    api.Userinfo:
      properties:
        dc:
          format: int64
          title: current domain component id
          type: string
        domain:
          title: session domain.name
          type: string
        expires_at:
          format: int64
          title: unix
          type: string
        extension:
          type: string
        license:
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: 'map[key]details'
          type: array
        name:
          title: current user.id
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          type: array
        preferred_username:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'map[role]oid'
          type: array
        scope:
          items:
            $ref: '#/components/schemas/api.Objclass'
            type: object
          title: 'map[class]dac'
          type: array
        updated_at:
          format: int64
          title: user last updated
          type: string
        user_id:
          format: int64
          title: current user.id
          type: string
        username:
          title: session end-user login
          type: string
      title: 'https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims'
      type: object
    api.Users.LogoutUserBody:
      type: object
    api.Users.UpdateUserBody:
      properties:
        fields:
          items:
            type: string
          title: 'PATCH: partial update'
          type: array
        user:
          properties:
            contact:
              $ref: '#/components/schemas/api.ObjectId'
              description: '[optional] contact connected to this user'
              title: |-
                repeated Call calls = 13; // order by created_at
                repeated Registration reged = 13; // order by register_last
            created_at:
              format: int64
              title: unix
              type: string
            created_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            deleted_at:
              format: int64
              title: unix
              type: string
            deleted_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            device:
              $ref: '#/components/schemas/api.ObjectId'
              title: '[optional] default device assigned ? WebRTC register ?'
            devices:
              description: >-
                [editable] list of unique `regular` devices, attached to this
                user
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: 'map<int64, string> devices = 13;'
              type: array
            email:
              type: string
            extension:
              title: 'Caller-ID-Number:'
              type: string
            hotdesks:
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: >-
                [readonly] list of unique `hotdesk` devices, assigned to this
                user
              type: array
            license:
              items:
                $ref: '#/components/schemas/api.LicenseUser'
                type: object
              title: 'list of unique licenses, granted to this user'
              type: array
            name:
              title: 'Caller-ID-Name: Display Name'
              type: string
            password:
              type: string
            permissions:
              items:
                $ref: '#/components/schemas/api.Permission'
                type: object
              title: set of operational permission grants
              type: array
            presence:
              $ref: '#/components/schemas/api.UserPresence'
              description: >-
                string presence = 7; // unique set of <user> presentity
                <status:basic> tuples open[ed]
                 string status = 8; // short display status (short description)
              title: |-
                CallerId caller = 5; // extension
                PresenceStatus presence = 8;
            profile:
              additionalProperties:
                type: string
              title: 'list of variables, assigned to this user as an environment unit'
              type: object
            roles:
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: 'roles, member of which is this user'
              type: array
            totp_url:
              title: >-
                [readonly][optional] one time password if setting (2fa) is
                enabled
              type: string
            updated_at:
              format: int64
              title: unix
              type: string
            updated_by:
              $ref: '#/components/schemas/api.UserId'
              title: user
            username:
              title: alphanumeric username (login)
              type: string
          title: 'body: modifications/changes'
          type: object
      type: object
    api.Verification:
      properties:
        errors:
          items:
            type: string
          title: invalid
          type: array
        notify:
          items:
            type: string
          title: 'non-fatal warnings, e.g.:'
          type: array
      type: object
    engine.AcceptOfDay:
      properties:
        day:
          format: int32
          type: integer
        disabled:
          type: boolean
        end_time_of_day:
          format: int32
          type: integer
        start_time_of_day:
          format: int32
          type: integer
      type: object
    engine.ActiveCall:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        answered_at:
          format: int64
          type: string
        app_id:
          type: string
        bill_sec:
          format: int32
          type: integer
        blind_transfer:
          type: string
        bridged_at:
          format: int64
          type: string
        bridged_id:
          type: string
        created_at:
          format: int64
          type: string
        destination:
          type: string
        direction:
          type: string
        display:
          type: string
        duration:
          format: int32
          type: integer
        extension:
          type: string
        from:
          $ref: '#/components/schemas/engine.Endpoint'
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        hold_sec:
          format: int32
          type: integer
        id:
          type: string
        joined_at:
          format: int64
          type: string
        leaving_at:
          format: int64
          type: string
        member:
          $ref: '#/components/schemas/engine.Lookup'
        parent_id:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        queue_bridged_at:
          format: int64
          type: string
        queue_duration_sec:
          format: int32
          type: integer
        queue_wait_sec:
          format: int32
          type: integer
        reporting_at:
          format: int64
          type: string
        reporting_sec:
          format: int32
          type: integer
        state:
          type: string
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timestamp:
          format: int64
          type: string
        to:
          $ref: '#/components/schemas/engine.Endpoint'
        type:
          type: string
        user:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
        wait_sec:
          format: int32
          type: integer
      type: object
    engine.ActivityWorkspaceWidgetResponse:
      properties:
        available:
          format: int32
          type: integer
        avg_hold_sec:
          format: float
          type: number
        avg_talk_sec:
          format: float
          type: number
        call_abandoned:
          format: int32
          type: integer
        call_dialer_queue:
          format: int32
          type: integer
        call_handled:
          format: int32
          type: integer
        call_inbound:
          format: int32
          type: integer
        call_inbound_queue:
          format: int32
          type: integer
        call_manual:
          format: int32
          type: integer
        call_missed:
          format: int32
          type: integer
        call_queue_missed:
          format: int32
          type: integer
        chat_accepts:
          format: int32
          type: integer
        chat_aht:
          format: float
          type: number
        occupancy:
          format: float
          type: number
        online:
          format: int32
          type: integer
        processing:
          format: int32
          type: integer
        queue_talk_sec:
          format: int32
          type: integer
        score_count:
          format: int64
          type: string
        score_optional_avg:
          format: float
          type: number
        score_optional_sum:
          format: float
          type: number
        score_required_avg:
          format: float
          type: number
        score_required_sum:
          format: float
          type: number
        sum_talk_sec:
          format: int64
          type: string
        task_accepts:
          format: int32
          type: integer
        utilization:
          format: float
          type: number
        voice_mail:
          format: int32
          type: integer
      type: object
    engine.Agent:
      properties:
        allow_channels:
          items:
            type: string
          type: array
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        channel:
          items:
            $ref: '#/components/schemas/engine.AgentChannel'
            type: object
          type: array
        chat_count:
          format: int64
          type: integer
        description:
          type: string
        extension:
          type: string
        greeting_media:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        is_supervisor:
          type: boolean
        last_status_change:
          format: int64
          type: string
        name:
          type: string
        progressive_count:
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/engine.Lookup'
        skills:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        status:
          type: string
        status_duration:
          format: int64
          type: string
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        task_count:
          format: int64
          type: integer
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentCallStatistics:
      properties:
        abandoned:
          format: int32
          type: integer
        avg_hold_sec:
          format: float
          type: number
        avg_talk_sec:
          format: float
          type: number
        chat_accepts:
          format: int32
          type: integer
        chat_aht:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        handles:
          format: int32
          type: integer
        max_hold_sec:
          format: float
          type: number
        max_talk_sec:
          format: float
          type: number
        min_hold_sec:
          format: float
          type: number
        min_talk_sec:
          format: float
          type: number
        name:
          type: string
        occupancy:
          format: float
          type: number
        sum_hold_sec:
          format: float
          type: number
        sum_talk_sec:
          format: float
          type: number
        utilization:
          format: float
          type: number
      type: object
    engine.AgentCallStatisticsList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentCallStatistics'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.AgentChannel:
      properties:
        channel:
          type: string
        joined_at:
          format: int64
          type: string
        state:
          type: string
        timeout:
          format: int64
          type: string
      type: object
    engine.AgentInQueue:
      properties:
        active_members:
          format: int32
          type: integer
        agents:
          $ref: '#/components/schemas/engine.AgentInQueue.AgentsInQueue'
        count_members:
          format: int32
          type: integer
        enabled:
          type: boolean
        max_member_limit:
          format: int32
          type: integer
        priority:
          format: int32
          type: integer
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        strategy:
          type: string
        type:
          format: int32
          type: integer
        waiting_members:
          format: int32
          type: integer
      type: object
    engine.AgentInQueue.AgentsInQueue:
      properties:
        allow_pause:
          format: int32
          type: integer
        free:
          format: int64
          type: integer
        offline:
          format: int64
          type: integer
        online:
          format: int64
          type: integer
        pause:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      type: object
    engine.AgentInQueueStatistics:
      properties:
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        statistics:
          items:
            $ref: >-
              #/components/schemas/engine.AgentInQueueStatistics.AgentInQueueStatisticsItem
            type: object
          type: array
      type: object
    engine.AgentInQueueStatistics.AgentInQueueStatisticsItem:
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        member_waiting:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentInQueueStatisticsList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentInQueueStatistics'
            type: object
          type: array
      type: object
    engine.AgentInTeam:
      properties:
        strategy:
          type: string
        team:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentPauseCause:
      properties:
        allow_admin:
          type: boolean
        allow_agent:
          type: boolean
        allow_supervisor:
          type: boolean
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        id:
          format: int64
          type: integer
        limit_min:
          format: int64
          type: integer
        name:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentPauseCauseService.PatchAgentPauseCauseBody:
      properties:
        allow_admin:
          type: boolean
        allow_agent:
          type: boolean
        allow_supervisor:
          type: boolean
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        limit_min:
          format: int64
          type: integer
        name:
          type: string
      type: object
    engine.AgentPauseCauseService.UpdateAgentPauseCauseBody:
      properties:
        allow_admin:
          type: boolean
        allow_agent:
          type: boolean
        allow_supervisor:
          type: boolean
        description:
          type: string
        limit_min:
          format: int64
          type: integer
        name:
          type: string
      type: object
    engine.AgentService.AgentSetStateBody:
      type: object
    engine.AgentService.PatchAgentBody:
      properties:
        allow_channels:
          items:
            type: string
          type: array
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        chat_count:
          format: int64
          type: integer
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        greeting_media:
          $ref: '#/components/schemas/engine.Lookup'
        is_supervisor:
          type: boolean
        progressive_count:
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentService.UpdateAgentBody:
      properties:
        allow_channels:
          items:
            type: string
          type: array
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        chat_count:
          format: int64
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        greeting_media:
          $ref: '#/components/schemas/engine.Lookup'
        is_supervisor:
          type: boolean
        progressive_count:
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        task_count:
          format: int64
          type: integer
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentService.UpdateAgentStatusBody:
      properties:
        channels:
          items:
            type: string
          type: array
        domain_id:
          format: int64
          type: string
        on_demand:
          type: boolean
        payload:
          type: string
        status:
          title: FIXME enumerate
          type: string
      type: object
    engine.AgentSetStateResponse:
      type: object
    engine.AgentSkill:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        capacity:
          format: int32
          type: integer
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentSkillItem:
      properties:
        capacity:
          format: int32
          type: integer
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentSkillService.CreateAgentSkillBody:
      properties:
        capacity:
          format: int32
          type: integer
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentSkillService.CreateAgentSkillsBody:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.CreateAgentSkillBulkItem'
            type: object
          type: array
      type: object
    engine.AgentSkillService.PatchAgentSkillBody:
      properties:
        capacity:
          format: int32
          type: integer
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentSkillService.PatchAgentSkillsBody:
      properties:
        capacity:
          format: int32
          type: integer
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        id:
          items:
            format: int64
            type: string
          type: array
        skill_id:
          items:
            format: int64
            type: string
          type: array
      type: object
    engine.AgentSkillService.UpdateAgentSkillBody:
      properties:
        capacity:
          format: int32
          type: integer
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentState:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        duration:
          format: int64
          type: string
        id:
          format: int64
          type: string
        joined_at:
          format: int64
          type: string
        pause_cause:
          type: string
        payload:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        state:
          type: string
      type: object
    engine.AgentStatsStatistic:
      properties:
        active_call_id:
          type: string
        agent_id:
          format: int32
          type: integer
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        call_time:
          format: int64
          type: string
        chat_count:
          format: int32
          type: integer
        extension:
          type: string
        handles:
          format: int32
          type: integer
        max_bridged_at:
          format: int64
          type: string
        max_offering_at:
          format: int64
          type: string
        missed:
          format: int32
          type: integer
        name:
          type: string
        occupancy:
          format: float
          type: number
        offline:
          format: int64
          type: string
        online:
          format: int64
          type: string
        pause:
          format: int64
          type: string
        pause_cause:
          type: string
        queues:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        skills:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        status:
          type: string
        status_duration:
          format: int64
          type: string
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        team:
          $ref: '#/components/schemas/engine.Lookup'
        transferred:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/engine.Lookup'
        utilization:
          format: float
          type: number
      type: object
    engine.AgentStatusStatisticItem:
      properties:
        agent_id:
          format: int32
          type: integer
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        chat_count:
          format: int64
          type: integer
        extension:
          type: string
        name:
          type: string
        offline:
          format: int64
          type: string
        online:
          format: int64
          type: string
        pause:
          format: int64
          type: string
        pause_cause:
          type: string
        progressive_count:
          format: int64
          type: integer
        region:
          $ref: '#/components/schemas/engine.Lookup'
        score_count:
          format: int64
          type: string
        score_optional_avg:
          format: float
          type: number
        score_required_avg:
          format: float
          type: number
        status:
          type: string
        status_duration:
          format: int64
          type: string
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AgentTeam:
      properties:
        admin:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        call_timeout:
          format: int32
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        forecast_calculation:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        invite_chat_timeout:
          format: int32
          type: integer
        max_no_answer:
          format: int32
          type: integer
        name:
          type: string
        no_answer_delay_time:
          format: int32
          type: integer
        strategy:
          type: string
        task_accept_timeout:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        wrap_up_time:
          format: int32
          type: integer
      type: object
    engine.AgentTeamService.UpdateAgentTeamBody:
      properties:
        admin:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        call_timeout:
          format: int32
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        forecast_calculation:
          $ref: '#/components/schemas/engine.Lookup'
        invite_chat_timeout:
          format: int32
          type: integer
        max_no_answer:
          format: int32
          type: integer
        name:
          type: string
        no_answer_delay_time:
          format: int32
          type: integer
        strategy:
          type: string
        task_accept_timeout:
          format: int32
          type: integer
        wrap_up_time:
          format: int32
          type: integer
      type: object
    engine.AgentTodayStatisticsResponse:
      properties:
        available:
          format: int32
          type: integer
        avg_hold_sec:
          format: float
          type: number
        avg_talk_sec:
          format: float
          type: number
        call_abandoned:
          format: int32
          type: integer
        call_dialer_queue:
          format: int32
          type: integer
        call_handled:
          format: int32
          type: integer
        call_inbound:
          format: int32
          type: integer
        call_inbound_queue:
          format: int32
          type: integer
        call_manual:
          format: int32
          type: integer
        call_missed:
          format: int32
          type: integer
        call_queue_missed:
          format: int32
          type: integer
        chat_accepts:
          format: int32
          type: integer
        chat_aht:
          format: float
          type: number
        occupancy:
          format: float
          type: number
        online:
          format: int32
          type: integer
        processing:
          format: int32
          type: integer
        queue_talk_sec:
          format: int32
          type: integer
        score_count:
          format: int64
          type: string
        score_optional_avg:
          format: float
          type: number
        score_optional_sum:
          format: float
          type: number
        score_required_avg:
          format: float
          type: number
        score_required_sum:
          format: float
          type: number
        sum_talk_sec:
          format: int64
          type: string
        task_accepts:
          format: int32
          type: integer
        utilization:
          format: float
          type: number
        voice_mail:
          format: int32
          type: integer
      type: object
    engine.AgentUser:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.AggregateHistoryCallRequest:
      properties:
        tags:
          items:
            type: string
          type: array
        agent_description:
          type: string
        agent_id:
          items:
            format: int64
            type: string
          type: array
        aggs:
          items:
            $ref: '#/components/schemas/engine.AggregateRequest'
            type: object
          type: array
        amd_result:
          items:
            type: string
          type: array
        answered_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        cause:
          items:
            type: string
          type: array
        contact_id:
          items:
            format: int64
            type: string
          type: array
        created_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        dependency_id:
          type: string
        direction:
          type: string
        directions:
          items:
            type: string
          type: array
        domain_id:
          format: int64
          type: string
        duration:
          $ref: '#/components/schemas/engine.FilterBetween'
        fts:
          type: string
        gateway_id:
          items:
            format: int64
            type: string
          type: array
        has_file:
          type: boolean
        has_transcript:
          type: boolean
        id:
          items:
            type: string
          type: array
        member_id:
          items:
            format: int64
            type: string
          type: array
        missed:
          type: boolean
        number:
          type: string
        page:
          format: int32
          type: integer
        parent_id:
          type: string
        q:
          type: string
        queue_id:
          items:
            format: int64
            type: string
          type: array
        size:
          format: int32
          type: integer
        skip_parent:
          type: boolean
        stored_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        team_id:
          items:
            format: int64
            type: string
          type: array
        transfer_from:
          items:
            type: string
          type: array
        transfer_to:
          items:
            type: string
          type: array
        user_id:
          items:
            format: int64
            type: string
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.AggregateRequest:
      properties:
        avg:
          items:
            type: string
          type: array
        count:
          items:
            type: string
          type: array
        group:
          items:
            $ref: '#/components/schemas/engine.AggregateRequest.Group'
            type: object
          type: array
        limit:
          format: int32
          type: integer
        max:
          items:
            type: string
          type: array
        min:
          items:
            type: string
          type: array
        name:
          type: string
        sort:
          items:
            type: string
          type: array
        sum:
          items:
            type: string
          type: array
      type: object
    engine.AggregateRequest.Group:
      properties:
        aggregate:
          type: string
        desc:
          type: boolean
        field:
          type: string
        id:
          type: string
        interval:
          type: string
        top:
          format: int32
          type: integer
      type: object
    engine.AggregateResult:
      properties:
        data: {}
        name:
          type: string
      type: object
    engine.Attempt:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agent_call_id:
          type: string
        attempts:
          format: int32
          type: integer
        bridged_at:
          format: int64
          type: string
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        destination:
          $ref: '#/components/schemas/engine.MemberCommunication'
        display:
          type: string
        id:
          format: int64
          type: string
        joined_at:
          format: int64
          type: string
        last_state_change:
          format: int64
          type: string
        leaving_at:
          format: int64
          type: string
        list:
          $ref: '#/components/schemas/engine.Lookup'
          title: black list ?
        member:
          $ref: '#/components/schemas/engine.Lookup'
        member_call_id:
          type: string
        offering_at:
          format: int64
          type: string
        position:
          format: int32
          type: integer
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reporting_at:
          format: int64
          type: string
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        state:
          type: string
        timeout:
          format: int64
          type: string
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.AttemptHistory:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agent_call_id:
          type: string
        amd_result:
          type: string
        attempts:
          format: int32
          type: integer
        bridged_at:
          format: int64
          type: string
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        destination:
          $ref: '#/components/schemas/engine.MemberCommunication'
        display:
          type: string
        id:
          format: int64
          type: string
        joined_at:
          format: int64
          type: string
        leaving_at:
          format: int64
          type: string
        list:
          $ref: '#/components/schemas/engine.Lookup'
          title: black list ?
        member:
          $ref: '#/components/schemas/engine.Lookup'
        member_call_id:
          type: string
        offered_agents:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        offering_at:
          format: int64
          type: string
        position:
          format: int32
          type: integer
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reporting_at:
          format: int64
          type: string
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.AttemptRenewalResultResponse:
      type: object
    engine.AttemptResultResponse:
      properties:
        status:
          type: string
      type: object
    engine.AuditForm:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        editable:
          title: bool archive = 11;
          type: boolean
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AuditFormService.PatchAuditFormBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          title: bool archive = 8;
          type: array
      type: object
    engine.AuditFormService.UpdateAuditFormBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          title: bool archive = 7;
          type: array
      type: object
    engine.AuditFormService.UpdateAuditRateBody:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/engine.UpdateQuestionAnswerRequest'
            type: object
          type: array
        comment:
          type: string
      type: object
    engine.AuditQuestionType:
      default: question_default
      enum:
        - question_default
        - question_score
        - question_option
        - question_yes
      type: string
    engine.AuditRate:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/engine.QuestionAnswer'
            type: object
          type: array
        comment:
          type: string
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        critical_count:
          format: int64
          type: string
        form:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        questions:
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
          type: array
        rated_user:
          $ref: '#/components/schemas/engine.Lookup'
        score_optional:
          format: float
          type: number
        score_required:
          format: float
          type: number
        select_yes_count:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.AvailableSystemSetting:
      properties:
        name:
          type: string
      type: object
    engine.BlindTransferCallResponse:
      type: object
    engine.Bucket:
      properties:
        description:
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.BucketService.UpdateBucketBody:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.Calendar:
      properties:
        accepts:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        end_at:
          format: int64
          type: string
        excepts:
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
          type: array
        id:
          format: int64
          type: string
        name:
          type: string
        specials:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        start_at:
          format: int64
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CalendarService.UpdateCalendarBody:
      properties:
        accepts:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        description:
          type: string
        domain_id:
          format: int64
          type: string
        end_at:
          format: int64
          type: string
        excepts:
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
          type: array
        name:
          type: string
        specials:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        start_at:
          format: int64
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CallAnnotation:
      properties:
        call_id:
          type: string
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        end_sec:
          format: int32
          type: integer
        id:
          format: int64
          type: string
        note:
          type: string
        start_sec:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CallFile:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        start_at:
          format: int64
          type: string
        stop_at:
          format: int64
          type: string
      type: object
    engine.CallHold:
      properties:
        sec:
          format: float
          type: number
        start:
          format: int64
          type: string
        stop:
          format: int64
          type: string
      type: object
    engine.CallService.BlindTransferCallBody:
      properties:
        app_id:
          type: string
        destination:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.CallService.CreateCallAnnotationBody:
      properties:
        end_sec:
          format: int32
          type: integer
        note:
          type: string
        start_sec:
          format: int32
          type: integer
      type: object
    engine.CallService.DtmfCallBody:
      properties:
        app_id:
          type: string
        digit:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.CallService.EavesdropCallBody:
      properties:
        app_id:
          type: string
        control:
          type: boolean
        from:
          $ref: '#/components/schemas/engine.EavesdropCallRequest.EndpointRequest'
        listen_a:
          type: boolean
        listen_b:
          type: boolean
        whisper_a:
          type: boolean
        whisper_b:
          type: boolean
      type: object
    engine.CallService.HangupCallBody:
      properties:
        app_id:
          type: string
        cause:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.CallService.HoldCallBody:
      properties:
        app_id:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.CallService.PatchHistoryCallBody:
      properties:
        hide_missed:
          type: boolean
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CallService.RedialCallBody:
      type: object
    engine.CallService.SetVariablesCallBody:
      properties:
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CallService.UnHoldCallBody:
      properties:
        app_id:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.CallService.UpdateCallAnnotationBody:
      properties:
        end_sec:
          format: int32
          type: integer
        note:
          type: string
        start_sec:
          format: int32
          type: integer
      type: object
    engine.ChatPlan:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CommunicationChannels:
      default: Undefined
      enum:
        - Undefined
        - Phone
        - Email
        - Messaging
      type: string
    engine.CommunicationType:
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.CommunicationTypeRequest:
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        name:
          type: string
      type: object
    engine.CommunicationTypeService.PatchCommunicationTypeBody:
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    engine.CommunicationTypeService.UpdateCommunicationTypeBody:
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        name:
          type: string
      type: object
    engine.ConfirmPushResponse:
      type: object
    engine.CreateAgentPauseCauseRequest:
      properties:
        allow_admin:
          type: boolean
        allow_agent:
          type: boolean
        allow_supervisor:
          type: boolean
        description:
          type: string
        limit_min:
          format: int64
          type: integer
        name:
          type: string
      type: object
    engine.CreateAgentRequest:
      properties:
        allow_channels:
          items:
            type: string
          type: array
        auditor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        chat_count:
          format: int64
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        greeting_media:
          $ref: '#/components/schemas/engine.Lookup'
        is_supervisor:
          type: boolean
        progressive_count:
          format: int32
          type: integer
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        task_count:
          format: int64
          type: integer
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateAgentSkillBulkItem:
      properties:
        capacity:
          format: int32
          type: integer
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateAgentSkillsResponse:
      properties:
        ids:
          items:
            format: int64
            type: string
          type: array
      type: object
    engine.CreateAgentTeamRequest:
      properties:
        admin:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        call_timeout:
          format: int32
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        forecast_calculation:
          $ref: '#/components/schemas/engine.Lookup'
        invite_chat_timeout:
          format: int32
          type: integer
        max_no_answer:
          format: int32
          type: integer
        name:
          type: string
        no_answer_delay_time:
          format: int32
          type: integer
        strategy:
          type: string
        task_accept_timeout:
          format: int32
          type: integer
        wrap_up_time:
          format: int32
          type: integer
      type: object
    engine.CreateAttemptResponse:
      properties:
        attempt_id:
          format: int64
          type: string
      type: object
    engine.CreateAuditFormRateRequest:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/engine.CreateQuestionAnswerRequest'
            type: object
          type: array
        call_id:
          type: string
        comment:
          type: string
        form:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateAuditFormRequest:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
      type: object
    engine.CreateBucketRequest:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.CreateCalendarRequest:
      properties:
        accepts:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        description:
          type: string
        domain_id:
          format: int64
          type: string
        end_at:
          format: int64
          type: string
        excepts:
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
          type: array
        name:
          type: string
        specials:
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
          type: array
        start_at:
          format: int64
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateCallRequest:
      properties:
        destination:
          type: string
        domain_id:
          format: int64
          type: string
        from:
          $ref: '#/components/schemas/engine.CreateCallRequest.EndpointRequest'
        params:
          $ref: '#/components/schemas/engine.CreateCallRequest.CallSettings'
        to:
          $ref: '#/components/schemas/engine.CreateCallRequest.EndpointRequest'
      type: object
    engine.CreateCallRequest.CallSettings:
      properties:
        audio:
          type: boolean
        cancel_distribute:
          type: boolean
        disable_auto_answer:
          type: boolean
        disable_stun:
          type: boolean
        display:
          type: string
        hide_number:
          type: boolean
        is_online:
          type: boolean
        record:
          type: boolean
        screen:
          type: boolean
        timeout:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
        video:
          type: boolean
      type: object
    engine.CreateCallRequest.EndpointRequest:
      properties:
        app_id:
          type: string
        extension:
          type: string
        id:
          format: int64
          type: string
        type:
          type: string
      type: object
    engine.CreateCallResponse:
      properties:
        id:
          type: string
      type: object
    engine.CreateChatPlanRequest:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateEmailProfileRequest:
      properties:
        auth_type:
          $ref: '#/components/schemas/engine.EmailAuthType'
        description:
          type: string
        enabled:
          type: boolean
        fetch_interval:
          format: int32
          type: integer
        imap_host:
          type: string
        imap_port:
          format: int32
          type: integer
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtp_host:
          type: string
        smtp_port:
          format: int32
          type: integer
      type: object
    engine.CreateListRequest:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.CreateMemberBulkItem:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
          type: array
        expire_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CreateOutboundResourceDisplayRequest:
      properties:
        display:
          type: string
        domain_id:
          format: int64
          type: string
        resource_id:
          format: int64
          type: string
      type: object
    engine.CreateOutboundResourceGroupRequest:
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
        strategy:
          type: string
        time:
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
          type: array
      type: object
    engine.CreateOutboundResourceRequest:
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        error_ids:
          items:
            type: string
          type: array
        failure_dial_delay:
          format: int64
          type: integer
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          format: int32
          type: integer
        max_successively_errors:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
        patterns:
          items:
            type: string
          type: array
        reserve:
          type: boolean
        rps:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CreatePresetQueryRequest:
      properties:
        description:
          type: string
        name:
          type: string
        preset: {}
        section:
          type: string
      type: object
    engine.CreateQuestionAnswerRequest:
      properties:
        score:
          format: float
          type: number
      type: object
    engine.CreateQueueRequest:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
          type: array
        after_schema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dnc_list:
          $ref: '#/components/schemas/engine.Lookup'
        do_schema:
          $ref: '#/components/schemas/engine.Lookup'
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        form_schema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        payload: {}
        priority:
          format: int32
          type: integer
        processing:
          title: deprecated
          type: boolean
        processing_renewal_sec:
          format: int64
          title: deprecated
          type: integer
        processing_sec:
          format: int64
          title: deprecated
          type: integer
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        sec_locate_agent:
          format: int32
          type: integer
        sticky_agent:
          type: boolean
        strategy:
          type: string
        task_processing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CreateQuickReplyRequest:
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        queues:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        text:
          type: string
      type: object
    engine.CreateRegionRequest:
      properties:
        description:
          type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateRoutingOutboundCallRequest:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.CreateRoutingSchemaRequest:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
          type: array
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        name:
          type: string
        payload: {}
        schema: {}
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
      type: object
    engine.CreateRoutingVariableRequest:
      properties:
        domain_id:
          format: int64
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    engine.CreateSchemaVariableRequest:
      properties:
        encrypt:
          type: boolean
        name:
          type: string
        value: {}
      type: object
    engine.CreateSkillAgentResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
          type: array
      type: object
    engine.CreateSkillRequest:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.CreateSystemSettingRequest:
      properties:
        name:
          $ref: '#/components/schemas/engine.SystemSettingName'
        value: {}
      type: object
    engine.CreateTriggerRequest:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.CreateWebHookRequest:
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        origin:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.DefaultDeviceConfigResponse:
      properties:
        sip:
          $ref: >-
            #/components/schemas/engine.DefaultDeviceConfigResponse.SipDeviceConfig
        webrtc:
          $ref: >-
            #/components/schemas/engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig
      type: object
    engine.DefaultDeviceConfigResponse.SipDeviceConfig:
      properties:
        auth:
          type: string
        domain:
          type: string
        extension:
          type: string
        password:
          type: string
        proxy:
          type: string
      type: object
    engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig:
      properties:
        authorization_user:
          type: string
        display_name:
          type: string
        extension:
          type: string
        ha1:
          type: string
        realm:
          type: string
        server:
          type: string
        uri:
          type: string
      type: object
    engine.DeleteAllMembersRequest:
      properties:
        agent_id:
          items:
            format: int32
            type: integer
          type: array
        attempts:
          $ref: '#/components/schemas/engine.FilterBetween'
        bucket_id:
          items:
            format: int32
            type: integer
          type: array
        created_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        destination:
          type: string
        id:
          items:
            format: int64
            type: string
          type: array
        name:
          type: string
        numbers:
          items:
            type: string
          type: array
        offering_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        q:
          type: string
        queue_id:
          items:
            format: int64
            type: string
          type: array
        size:
          format: int32
          type: integer
        sort:
          type: string
        stop_cause:
          items:
            type: string
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
        without_members:
          type: boolean
      type: object
    engine.DeleteSkillAgentResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
          type: array
      type: object
    engine.DtmfCallResponse:
      type: object
    engine.EavesdropCallRequest.EndpointRequest:
      properties:
        app_id:
          type: string
        extension:
          type: string
        id:
          format: int64
          type: string
        type:
          type: string
      type: object
    engine.EmailAuthType:
      default: EmailAuthTypeUndefined
      enum:
        - EmailAuthTypeUndefined
        - Plain
        - OAuth2
      type: string
    engine.EmailProfile:
      properties:
        activity_at:
          format: int64
          type: string
        auth_type:
          $ref: '#/components/schemas/engine.EmailAuthType'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        fetch_error:
          type: string
        fetch_interval:
          format: int32
          type: integer
        id:
          format: int64
          type: string
        imap_host:
          type: string
        imap_port:
          format: int32
          type: integer
        listen:
          type: boolean
        logged:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtp_host:
          type: string
        smtp_port:
          format: int32
          type: integer
        state:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.EmailProfileParams:
      properties:
        oauth2:
          $ref: '#/components/schemas/engine.EmailProfileParams.OAuth2'
      type: object
    engine.EmailProfileParams.OAuth2:
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        redirect_url:
          type: string
      type: object
    engine.EmailProfileService.PatchEmailProfileBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fetch_interval:
          format: int32
          type: integer
        fields:
          items:
            type: string
          type: array
        imap_host:
          type: string
        imap_port:
          format: int32
          type: integer
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtp_host:
          type: string
        smtp_port:
          format: int32
          type: integer
      type: object
    engine.EmailProfileService.UpdateEmailProfileBody:
      properties:
        auth_type:
          $ref: '#/components/schemas/engine.EmailAuthType'
        description:
          type: string
        enabled:
          type: boolean
        fetch_interval:
          format: int32
          type: integer
        imap_host:
          type: string
        imap_port:
          format: int32
          type: integer
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtp_host:
          type: string
        smtp_port:
          format: int32
          type: integer
      type: object
    engine.EmptyResponse:
      type: object
    engine.Endpoint:
      properties:
        id:
          type: string
        name:
          type: string
        number:
          type: string
        type:
          type: string
      type: object
    engine.ExceptDate:
      properties:
        date:
          format: int64
          type: string
        disabled:
          type: boolean
        name:
          type: string
        repeat:
          type: boolean
        work_start:
          format: int32
          type: integer
        work_stop:
          format: int32
          type: integer
        working:
          type: boolean
      type: object
    engine.FilterBetween:
      properties:
        from:
          format: int64
          type: string
        to:
          format: int64
          type: string
      type: object
    engine.ForAgentPauseCause:
      properties:
        duration_min:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        limit_min:
          format: int64
          type: integer
        name:
          type: string
      type: object
    engine.ForAgentPauseCauseList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.ForAgentPauseCause'
            type: object
          type: array
      type: object
    engine.HangupCallResponse:
      type: object
    engine.HistoryCall:
      properties:
        tags:
          items:
            type: string
          type: array
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agent_description:
          type: string
        allow_evaluation:
          type: boolean
        amd_ai_logs:
          items:
            type: string
          type: array
        amd_ai_result:
          type: string
        amd_result:
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/engine.CallAnnotation'
            type: object
          type: array
        answered_at:
          format: int64
          type: string
        app_id:
          type: string
        attempt_id:
          format: int64
          type: string
        bill_sec:
          format: int32
          type: integer
        blind_transfer:
          type: string
        blind_transfers:
          items:
            $ref: '#/components/schemas/engine.HistoryCall.BlindTransfer'
            type: object
          type: array
        bridged_at:
          format: int64
          type: string
        bridged_id:
          type: string
        cause:
          type: string
        contact:
          $ref: '#/components/schemas/engine.Lookup'
        created_at:
          format: int64
          type: string
        destination:
          type: string
        direction:
          type: string
        display:
          type: string
        duration:
          format: int32
          type: integer
        extension:
          type: string
        files:
          items:
            $ref: '#/components/schemas/engine.CallFile'
            type: object
          type: array
        files_job:
          items:
            $ref: '#/components/schemas/engine.HistoryFileJob'
            type: object
          type: array
        form_fields: {}
        from:
          $ref: '#/components/schemas/engine.Endpoint'
        from_number:
          type: string
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        hangup_at:
          format: int64
          type: string
        hangup_by:
          type: string
        hangup_disposition:
          type: string
        hangup_phrase:
          type: string
        has_children:
          type: boolean
        hold:
          items:
            $ref: '#/components/schemas/engine.CallHold'
            type: object
          type: array
        hold_sec:
          format: int32
          type: integer
        id:
          type: string
        joined_at:
          format: int64
          type: string
        leaving_at:
          format: int64
          type: string
        member:
          $ref: '#/components/schemas/engine.Lookup'
        member_id:
          format: int64
          type: string
        parent_id:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        queue_bridged_at:
          format: int64
          type: string
        queue_duration_sec:
          format: int32
          type: integer
        queue_wait_sec:
          format: int32
          type: integer
        rate_id:
          format: int64
          type: string
        rated_by:
          $ref: '#/components/schemas/engine.Lookup'
        rated_user:
          $ref: '#/components/schemas/engine.Lookup'
        reporting_at:
          format: int64
          type: string
        reporting_sec:
          format: int32
          type: integer
        result:
          type: string
        schemas:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        score_optional:
          format: float
          type: number
        score_required:
          format: float
          type: number
        sip_code:
          format: int32
          type: integer
        stored_at:
          format: int64
          type: string
        talk_sec:
          format: int32
          type: integer
        team:
          $ref: '#/components/schemas/engine.Lookup'
        to:
          $ref: '#/components/schemas/engine.Endpoint'
        to_number:
          type: string
        transcripts:
          items:
            $ref: '#/components/schemas/engine.TranscriptLookup'
            type: object
          type: array
        transfer_from:
          type: string
        transfer_to:
          type: string
        type:
          type: string
        user:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
        wait_sec:
          format: int32
          type: integer
      type: object
    engine.HistoryCall.BlindTransfer:
      properties:
        number:
          type: string
        time:
          format: int64
          type: string
        user:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.HistoryFileJob:
      properties:
        action:
          $ref: '#/components/schemas/engine.HistoryFileJob.HistoryFileJobAction'
        created_at:
          format: int64
          type: string
        error_detail:
          type: string
        file_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        state:
          $ref: '#/components/schemas/engine.HistoryFileJob.HistoryFileJobState'
      type: object
    engine.HistoryFileJob.HistoryFileJobAction:
      default: undefined
      enum:
        - undefined
        - STT
        - delete
      type: string
    engine.HistoryFileJob.HistoryFileJobState:
      default: idle
      enum:
        - idle
        - active
        - finished
        - error
      title: '- error: TODO'
      type: string
    engine.HoldCallResponse:
      properties:
        state:
          type: string
      type: object
    engine.List:
      properties:
        count:
          format: int64
          type: string
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.ListAgent:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Agent'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentInQueue:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentInQueue'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentInTeam:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentInTeam'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentPauseCause:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentPauseCause'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentSkill:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentSkillItem'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentStateHistory:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentState'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentStatsStatistic:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentStatsStatistic'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentTeam:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentTeam'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAgentUser:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AgentUser'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAggregate:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AggregateResult'
            type: object
          type: array
      type: object
    engine.ListAttempt:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Attempt'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAuditForm:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AuditForm'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAuditRate:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AuditRate'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListAvailableSystemSetting:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AvailableSystemSetting'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListBucket:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Bucket'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListCalendar:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Calendar'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListCall:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.ActiveCall'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListChatPlan:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.ChatPlan'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListCommunication:
      properties:
        description:
          type: string
        expire_at:
          format: int64
          type: string
        id:
          format: int64
          type: string
        list_id:
          format: int64
          type: string
        number:
          type: string
      type: object
    engine.ListCommunicationType:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.CommunicationType'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListEmailProfile:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.EmailProfile'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListHistoryAttempt:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.AttemptHistory'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListHistoryCall:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.HistoryCall'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListMember:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.MemberInQueue'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListMemberAttempt:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.MemberAttempt'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOfList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.List'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOfListCommunication:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.ListCommunication'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOutboundResource:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.OutboundResource'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOutboundResourceDisplay:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.ResourceDisplay'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOutboundResourceGroup:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.OutboundResourceViewGroup'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListOutboundResourceInGroup:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.OutboundResourceInGroup'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListPresetQuery:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.PresetQuery'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQueue:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Queue'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQueueBucket:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.QueueBucket'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQueueHook:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.QueueHook'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQueueResourceGroup:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.QueueResourceGroup'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQueueSkill:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.QueueSkill'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListQuickReplies:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.QuickReply'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListRegion:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Region'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListReportGeneral:
      properties:
        aggs:
          $ref: '#/components/schemas/engine.QueueReportGeneralAgentStatus'
        items:
          items:
            $ref: '#/components/schemas/engine.QueueReportGeneral'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListResourceDisplay:
      properties:
        id:
          items:
            format: int64
            type: string
          type: array
      type: object
    engine.ListRoutingOutboundCall:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.RoutingOutboundCallCompact'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListRoutingSchema:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.RoutingSchema'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListRoutingSchemaTags:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.RoutingSchemaTag'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListRoutingVariable:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.RoutingVariable'
            type: object
          type: array
      type: object
    engine.ListSchemaVariable:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SchemaVariable'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListService.CreateListCommunicationBody:
      properties:
        description:
          type: string
        expire_at:
          format: int64
          type: string
        number:
          type: string
      type: object
    engine.ListService.UpdateListBody:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.ListService.UpdateListCommunicationBody:
      properties:
        description:
          type: string
        expire_at:
          format: int64
          type: string
        number:
          type: string
      type: object
    engine.ListSkill:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Skill'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListSkillAgent:
      properties:
        aggs:
          $ref: '#/components/schemas/engine.ListSkillAgent.ListSkillAgg'
        items:
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListSkillAgent.ListSkillAgg:
      properties:
        enabled:
          type: boolean
      type: object
    engine.ListSystemSetting:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SystemSetting'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTags:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTeamHook:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.TeamHook'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTeamTrigger:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.TeamTrigger'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTimezoneResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Timezone'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTrigger:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.Trigger'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListTriggerJob:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.TriggerJob'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListUserStatus:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.UserStatus'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.ListWebHook:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.WebHook'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.LoginEmailProfileResponse:
      properties:
        auth_type:
          $ref: '#/components/schemas/engine.EmailAuthType'
        cookie:
          additionalProperties:
            type: string
          type: object
        redirect_url:
          type: string
      type: object
    engine.LogoutEmailProfileResponse:
      type: object
    engine.Lookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.MemberAttempt:
      properties:
        active:
          type: boolean
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        answered_at:
          format: int64
          type: string
        attempts:
          format: int32
          type: integer
        bridged_at:
          format: int64
          type: string
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        created_at:
          format: int64
          type: string
        destination:
          type: string
        hangup_at:
          format: int64
          type: string
        id:
          format: int64
          type: string
        leg_a_id:
          type: string
        leg_b_id:
          type: string
        logs: {}
        member:
          $ref: '#/components/schemas/engine.Lookup'
        node:
          type: string
        originate_at:
          format: int64
          type: string
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        weight:
          format: int32
          type: integer
      type: object
    engine.MemberBulkResponse:
      properties:
        ids:
          items:
            format: int64
            type: string
          type: array
      type: object
    engine.MemberCommunication:
      properties:
        attempts:
          format: int32
          type: integer
        description:
          type: string
        destination:
          type: string
        display:
          type: string
        dtmf:
          type: string
        id:
          format: int64
          type: string
        last_activity_at:
          format: int64
          type: string
        last_cause:
          type: string
        priority:
          format: int32
          type: integer
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        state:
          format: int32
          type: integer
        stop_at:
          format: int64
          type: string
        type:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.MemberCommunicationCreateRequest:
      properties:
        description:
          type: string
        destination:
          type: string
        display:
          type: string
        dtmf:
          type: string
        priority:
          format: int32
          type: integer
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        stop_at:
          format: int64
          type: string
        type:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.MemberInQueue:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          format: int32
          type: integer
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunication'
            type: object
          type: array
        created_at:
          format: int64
          type: string
        expire_at:
          format: int64
          type: string
        id:
          format: int64
          type: string
        last_activity_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          title: deprecated
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reserved:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stop_cause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MemberService.AttemptCallbackBody:
      properties:
        agent_id:
          format: int32
          type: integer
        description:
          type: string
        display:
          type: boolean
        exclude_current_communication:
          type: boolean
        expire_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          type: string
        only_current_communication:
          type: boolean
        status:
          type: string
        variables:
          additionalProperties:
            type: string
          type: object
        wait_between_retries:
          format: int32
          type: integer
      type: object
    engine.MemberService.AttemptResultBody:
      properties:
        agent_id:
          format: int32
          type: integer
        description:
          type: string
        display:
          type: boolean
        exclude_current_communication:
          type: boolean
        expire_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          type: string
        next_member_id:
          format: int64
          type: string
        only_current_communication:
          type: boolean
        status:
          type: string
        transfer_queue_id:
          format: int64
          type: string
        variables:
          additionalProperties:
            type: string
          type: object
        wait_between_retries:
          format: int32
          type: integer
      type: object
    engine.MemberService.AttemptsRenewalResultBody:
      properties:
        renewal:
          format: int64
          type: integer
      type: object
    engine.MemberService.CreateAttemptBody:
      properties:
        agent_id:
          format: int64
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.MemberService.CreateMemberBody:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
          type: array
        domain_id:
          format: int64
          type: string
        expire_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MemberService.CreateMemberBulkBody:
      properties:
        file_name:
          type: string
        items:
          items:
            $ref: '#/components/schemas/engine.CreateMemberBulkItem'
            type: object
          type: array
      type: object
    engine.MemberService.DeleteMembersBody:
      properties:
        agent_id:
          items:
            format: int32
            type: integer
          type: array
        attempts:
          $ref: '#/components/schemas/engine.FilterBetween'
        bucket_id:
          items:
            format: int32
            type: integer
          type: array
        created_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        destination:
          type: string
        id:
          items:
            format: int64
            type: string
          type: array
        ids:
          items:
            format: int64
            type: string
          title: deprecated
          type: array
        name:
          type: string
        numbers:
          items:
            type: string
          type: array
        offering_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        q:
          type: string
        size:
          format: int32
          type: integer
        sort:
          type: string
        stop_cause:
          items:
            type: string
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
        without_members:
          type: boolean
      type: object
    engine.MemberService.PatchMemberBody:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          format: int32
          type: integer
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
          type: array
        domain_id:
          format: int64
          type: string
        expire_at:
          format: int64
          type: string
        fields:
          items:
            type: string
          type: array
        min_offering_at:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stop_cause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MemberService.PatchMemberOneBody:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          format: int32
          type: integer
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
          type: array
        domain_id:
          format: int64
          type: string
        expire_at:
          format: int64
          type: string
        fields:
          items:
            type: string
          type: array
        min_offering_at:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stop_cause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MemberService.ResetMembersBody:
      properties:
        agent_id:
          items:
            format: int32
            type: integer
          type: array
        bucket_id:
          items:
            format: int64
            type: string
          type: array
        created_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        id:
          items:
            format: int64
            type: string
          type: array
        ids:
          items:
            format: int64
            type: string
          type: array
        numbers:
          items:
            type: string
          type: array
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        stop_cause:
          items:
            type: string
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MemberService.UpdateMemberBody:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
          type: array
        domain_id:
          format: int64
          type: string
        expire_at:
          format: int64
          type: string
        min_offering_at:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stop_cause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.MovePositionRoutingOutboundCallResponse:
      properties:
        success:
          type: boolean
      type: object
    engine.OutboundResource:
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        error_ids:
          items:
            type: string
          type: array
        failure_dial_delay:
          format: int64
          type: integer
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        last_error_at:
          format: int64
          type: string
        last_error_id:
          type: string
        limit:
          format: int32
          type: integer
        max_successively_errors:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
        patterns:
          items:
            type: string
          type: array
        reserve:
          type: boolean
        rps:
          format: int32
          type: integer
        successively_errors:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.OutboundResourceGroup:
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        strategy:
          type: string
        time:
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
          type: array
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody:
      properties:
        priority:
          format: int64
          type: integer
        reserve_resource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody:
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
        strategy:
          type: string
        time:
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
          type: array
      type: object
    engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody:
      properties:
        priority:
          format: int64
          type: integer
        reserve_resource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.OutboundResourceInGroup:
      properties:
        group_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        priority:
          format: int64
          type: integer
        reserve_resource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.OutboundResourceParameters:
      properties:
        cid_type:
          type: string
        ignore_early_media:
          type: string
      type: object
    engine.OutboundResourceService.CreateOutboundResourceDisplayBody:
      properties:
        display:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.CreateOutboundResourceDisplayRequest'
            type: object
          type: array
      type: object
    engine.OutboundResourceService.PatchOutboundResourceBody:
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        error_ids:
          items:
            type: string
          type: array
        failure_dial_delay:
          format: int64
          type: integer
        fields:
          items:
            type: string
          type: array
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          format: int32
          type: integer
        max_successively_errors:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
        patterns:
          items:
            type: string
          type: array
        reserve:
          type: boolean
        rps:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.OutboundResourceService.UpdateOutboundResourceBody:
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        error_ids:
          items:
            type: string
          type: array
        failure_dial_delay:
          format: int64
          type: integer
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          format: int32
          type: integer
        max_successively_errors:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
        patterns:
          items:
            type: string
          type: array
        reserve:
          type: boolean
        rps:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.OutboundResourceService.UpdateOutboundResourceDisplayBody:
      properties:
        display:
          type: string
        domain_id:
          format: int64
          type: string
      type: object
    engine.OutboundResourceTimeRange:
      properties:
        end_time_of_day:
          format: int32
          type: integer
        start_time_of_day:
          format: int32
          type: integer
      type: object
    engine.OutboundResourceViewGroup:
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        strategy:
          type: string
      type: object
    engine.PatchSkillAgentResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
          type: array
      type: object
    engine.PresetQuery:
      properties:
        created_at:
          format: int64
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        preset: {}
        section:
          type: string
        updated_at:
          format: int64
          type: string
      type: object
    engine.PresetQueryService.PatchPresetQueryBody:
      properties:
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        preset: {}
        section:
          type: string
      type: object
    engine.PresetQueryService.UpdatePresetQueryBody:
      properties:
        description:
          type: string
        name:
          type: string
        preset: {}
        section:
          type: string
      type: object
    engine.Question:
      properties:
        critical_violation:
          type: boolean
        description:
          type: string
        max:
          format: int32
          type: integer
        min:
          format: int32
          type: integer
        options:
          items:
            $ref: '#/components/schemas/engine.Question.Option'
            type: object
          type: array
        question:
          type: string
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/engine.AuditQuestionType'
      type: object
    engine.Question.Option:
      properties:
        name:
          type: string
        score:
          format: float
          type: number
      type: object
    engine.QuestionAnswer:
      properties:
        comment:
          type: string
        score:
          format: float
          type: number
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.Queue:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
          type: array
        active:
          format: int32
          type: integer
        after_schema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        count:
          format: int32
          type: integer
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dnc_list:
          $ref: '#/components/schemas/engine.Lookup'
        do_schema:
          $ref: '#/components/schemas/engine.Lookup'
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        form_schema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        name:
          type: string
        payload: {}
        priority:
          format: int32
          type: integer
        processing:
          title: deprecated
          type: boolean
        processing_renewal_sec:
          format: int64
          title: deprecated
          type: integer
        processing_sec:
          format: int64
          title: deprecated
          type: integer
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        sec_locate_agent:
          format: int32
          type: integer
        sticky_agent:
          type: boolean
        strategy:
          type: string
        task_processing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          additionalProperties:
            type: string
          type: object
        waiting:
          format: int32
          type: integer
      type: object
    engine.QueueBucket:
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        id:
          format: int64
          type: string
        priority:
          format: int32
          type: integer
        ratio:
          format: int32
          type: integer
      type: object
    engine.QueueBucketService.CreateQueueBucketBody:
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        priority:
          format: int32
          type: integer
        ratio:
          format: int32
          type: integer
      type: object
    engine.QueueBucketService.PatchQueueBucketBody:
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        priority:
          format: int32
          type: integer
        ratio:
          format: int32
          type: integer
      type: object
    engine.QueueBucketService.UpdateQueueBucketBody:
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        priority:
          format: int32
          type: integer
        ratio:
          format: int32
          type: integer
      type: object
    engine.QueueHook:
      properties:
        enabled:
          type: boolean
        event:
          type: string
        id:
          format: int64
          type: integer
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueHookService.CreateQueueHookBody:
      properties:
        enabled:
          type: boolean
        event:
          type: string
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueHookService.PatchQueueHookBody:
      properties:
        enabled:
          type: boolean
        event:
          type: string
        fields:
          items:
            type: string
          type: array
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueHookService.UpdateQueueHookBody:
      properties:
        enabled:
          type: boolean
        event:
          type: string
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueReportGeneral:
      properties:
        abandoned:
          format: int64
          type: integer
        agent_status:
          $ref: '#/components/schemas/engine.QueueReportGeneralAgentStatus'
        attempts:
          format: int64
          type: integer
        avg_aht_sec:
          format: float
          type: number
        avg_asa_sec:
          format: float
          type: number
        avg_awt_sec:
          format: float
          type: number
        avg_wrap_sec:
          format: float
          type: number
        bridged:
          format: float
          type: number
        count:
          format: uint64
          type: string
        missed:
          format: int64
          type: integer
        processed:
          format: int64
          type: integer
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        sl20:
          format: float
          type: number
        sl30:
          format: float
          type: number
        sum_bill_sec:
          format: float
          type: number
        team:
          $ref: '#/components/schemas/engine.Lookup'
        transferred:
          format: int64
          type: integer
        waiting:
          format: int64
          type: integer
      type: object
    engine.QueueReportGeneralAgentStatus:
      properties:
        free:
          format: int64
          type: integer
        offline:
          format: int64
          type: integer
        online:
          format: int64
          type: integer
        pause:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      type: object
    engine.QueueResourceGroup:
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        resource_group:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueResourcesService.CreateQueueResourceGroupBody:
      properties:
        domain_id:
          format: int64
          type: string
        resource_group:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueResourcesService.UpdateQueueResourceGroupBody:
      properties:
        domain_id:
          format: int64
          type: string
        resource_group:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueService.PatchQueueBody:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
          type: array
        after_schema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dnc_list:
          $ref: '#/components/schemas/engine.Lookup'
        do_schema:
          $ref: '#/components/schemas/engine.Lookup'
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        form_schema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        payload: {}
        priority:
          format: int32
          type: integer
        processing:
          title: deprecated
          type: boolean
        processing_renewal_sec:
          format: int64
          title: deprecated
          type: integer
        processing_sec:
          format: int64
          title: deprecated
          type: integer
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        sec_locate_agent:
          format: int32
          type: integer
        sticky_agent:
          type: boolean
        strategy:
          type: string
        task_processing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.QueueService.UpdateQueueBody:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
          type: array
        after_schema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dnc_list:
          $ref: '#/components/schemas/engine.Lookup'
        do_schema:
          $ref: '#/components/schemas/engine.Lookup'
        domain_id:
          format: int64
          type: string
        enabled:
          type: boolean
        form_schema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        payload: {}
        priority:
          format: int32
          type: integer
        processing:
          title: deprecated
          type: boolean
        processing_renewal_sec:
          format: int64
          title: deprecated
          type: integer
        processing_sec:
          format: int64
          title: deprecated
          type: integer
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        sec_locate_agent:
          format: int32
          type: integer
        sticky_agent:
          type: boolean
        strategy:
          type: string
        task_processing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        type:
          format: int32
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.QueueSkill:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        enabled:
          type: boolean
        id:
          format: int64
          type: integer
        lvl:
          format: int32
          type: integer
        max_capacity:
          format: int32
          type: integer
        min_capacity:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueSkillService.CreateQueueSkillBody:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        enabled:
          type: boolean
        lvl:
          format: int32
          type: integer
        max_capacity:
          format: int32
          type: integer
        min_capacity:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueSkillService.PatchQueueSkillBody:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        lvl:
          format: int32
          type: integer
        max_capacity:
          format: int32
          type: integer
        min_capacity:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QueueSkillService.UpdateQueueSkillBody:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        enabled:
          type: boolean
        lvl:
          format: int32
          type: integer
        max_capacity:
          format: int32
          type: integer
        min_capacity:
          format: int32
          type: integer
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.QuickRepliesService.PatchQuickReplyBody:
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        queues:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        text:
          type: string
      type: object
    engine.QuickRepliesService.UpdateQuickReplyBody:
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        queues:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        text:
          type: string
      type: object
    engine.QuickReply:
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: integer
        name:
          type: string
        queues:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        teams:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        text:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.Region:
      properties:
        description:
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RegionService.PatchRegionBody:
      properties:
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RegionService.UpdateRegionBody:
      properties:
        description:
          type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.ResetActiveAttemptsRequest:
      properties:
        attempt_type:
          items:
            type: string
          type: array
        idle_for_minutes:
          format: int64
          type: string
        result:
          type: string
      type: object
    engine.ResetActiveAttemptsResponse:
      type: object
    engine.ResetMembersResponse:
      properties:
        count:
          format: int64
          type: string
      type: object
    engine.ResourceDisplay:
      properties:
        display:
          type: string
        id:
          format: int64
          type: string
      type: object
    engine.Response:
      properties:
        status:
          type: string
      type: object
    engine.RoutingChatPlanService.PatchChatPlanBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingChatPlanService.UpdateChatPlanBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingOutboundCall:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingOutboundCallCompact:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        pattern:
          type: string
        position:
          format: int32
          type: integer
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody:
      properties:
        domain_id:
          format: int64
          type: string
      type: object
    engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingSchema:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
          type: array
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        id:
          format: int64
          type: string
        name:
          type: string
        payload: {}
        schema: {}
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.RoutingSchemaService.PatchRoutingSchemaBody:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
          type: array
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        note:
          type: string
        payload: {}
        schema: {}
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
      type: object
    engine.RoutingSchemaService.UpdateRoutingSchemaBody:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
          type: array
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        name:
          type: string
        note:
          type: string
        payload: {}
        schema: {}
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
      type: object
    engine.RoutingSchemaTag:
      properties:
        count:
          format: int64
          type: integer
        name:
          type: string
      type: object
    engine.RoutingSchemaType:
      default: default
      enum:
        - default
        - voice
        - chat
        - processing
        - service
      type: string
    engine.RoutingVariable:
      properties:
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    engine.RoutingVariableService.UpdateRoutingVariableBody:
      properties:
        domain_id:
          format: int64
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    engine.RunTeamTriggerResponse:
      properties:
        job_id:
          type: string
      type: object
    engine.SchemaTag:
      properties:
        name:
          type: string
      type: object
    engine.SchemaVariable:
      properties:
        encrypt:
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        value: {}
      type: object
    engine.SchemaVariablesService.PatchSchemaVariableBody:
      properties:
        encrypt:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        value: {}
      type: object
    engine.SchemaVariablesService.UpdateSchemaVariableBody:
      properties:
        encrypt:
          type: boolean
        name:
          type: string
        value: {}
      type: object
    engine.SchemaVersion:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        note:
          type: string
        payload: {}
        schema: {}
        schema_id:
          format: int64
          type: string
        version:
          format: uint64
          type: string
      type: object
    engine.SearchHistoryCallRequest:
      properties:
        tags:
          items:
            type: string
          type: array
        agent_description:
          type: string
        agent_id:
          items:
            format: int64
            type: string
          type: array
        amd_ai_result:
          items:
            type: string
          type: array
        amd_result:
          items:
            type: string
          type: array
        answered_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        cause:
          items:
            type: string
          type: array
        contact_id:
          items:
            format: int64
            type: string
          type: array
        created_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        dependency_id:
          type: string
        direction:
          type: string
        directions:
          items:
            type: string
          type: array
        domain_id:
          format: int64
          type: string
        duration:
          $ref: '#/components/schemas/engine.FilterBetween'
        fields:
          items:
            type: string
          type: array
        fts:
          type: string
        gateway_id:
          items:
            format: int64
            type: string
          type: array
        grantee_id:
          items:
            format: int64
            type: string
          type: array
        has_file:
          type: boolean
        has_transcript:
          type: boolean
        has_transfer:
          type: boolean
        id:
          items:
            type: string
          type: array
        member_id:
          items:
            format: int64
            type: string
          type: array
        missed:
          type: boolean
        number:
          type: string
        owner_id:
          items:
            format: int64
            type: string
          type: array
        page:
          format: int32
          type: integer
        parent_id:
          type: string
        q:
          type: string
        queue_id:
          items:
            format: int64
            type: string
          type: array
        rated:
          type: boolean
        rated_by:
          items:
            format: int64
            type: string
          type: array
        rated_user:
          items:
            format: int64
            type: string
          type: array
        schema_id:
          items:
            format: int32
            type: integer
          type: array
        score_optional:
          $ref: '#/components/schemas/engine.FilterBetween'
        score_required:
          $ref: '#/components/schemas/engine.FilterBetween'
        size:
          format: int32
          type: integer
        skip_parent:
          type: boolean
        sort:
          type: string
        stored_at:
          $ref: '#/components/schemas/engine.FilterBetween'
        talk:
          $ref: '#/components/schemas/engine.FilterBetween'
        team_id:
          items:
            format: int64
            type: string
          type: array
        timeline:
          type: boolean
        transfer_from:
          items:
            type: string
          type: array
        transfer_to:
          items:
            type: string
          type: array
        user_id:
          items:
            format: int64
            type: string
          type: array
        'variables[string]':
          additionalProperties:
            type: string
          type: object
      type: object
    engine.SearchSchemaVersionResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/engine.SchemaVersion'
            type: object
          type: array
        next:
          type: boolean
      type: object
    engine.SendPushResponse:
      properties:
        send:
          format: int32
          type: integer
      type: object
    engine.SetVariablesCallResponse:
      type: object
    engine.Skill:
      properties:
        active_agents:
          format: int32
          type: integer
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        total_agents:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.SkillAgentItem:
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        capacity:
          format: int32
          type: integer
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        team:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.SkillService.CreateSkillAgentBody:
      properties:
        agent:
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          type: array
        capacity:
          format: int32
          type: integer
        enabled:
          type: boolean
      type: object
    engine.SkillService.DeleteSkillAgentBody:
      properties:
        agent_id:
          items:
            format: int64
            type: string
          type: array
        id:
          items:
            format: int64
            type: string
          type: array
      type: object
    engine.SkillService.PatchSkillAgentBody:
      properties:
        agent_id:
          items:
            format: int64
            type: string
          type: array
        capacity:
          format: int32
          type: integer
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        id:
          items:
            format: int64
            type: string
          type: array
        skill:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.SkillService.UpdateSkillBody:
      properties:
        description:
          type: string
        domain_id:
          format: int64
          type: string
        name:
          type: string
      type: object
    engine.SystemSetting:
      properties:
        id:
          format: int32
          type: integer
        name:
          $ref: '#/components/schemas/engine.SystemSettingName'
        value: {}
      type: object
    engine.SystemSettingName:
      default: empty_system_settings_name
      enum:
        - empty_system_settings_name
        - enable_omnichannel
        - member_chunk_size
        - amd_cancel_not_human
        - scheme_version_limit
        - enable_2fa
        - export_settings
        - search_number_length
        - chat_ai_connection
        - password_reg_exp
        - password_validation_text
        - autolink_call_to_contact
        - period_to_playback_records
        - is_fulltext_search_enabled
        - wbt_hide_contact
        - show_full_contact
        - call_end_sound_notification
        - call_end_push_notification
        - chat_end_sound_notification
        - chat_end_push_notification
        - task_end_sound_notification
        - task_end_push_notification
        - push_notification_timeout
        - labels_to_limit_contacts
      type: string
    engine.SystemSettingService.PatchSystemSettingBody:
      properties:
        fields:
          items:
            type: string
          type: array
        value: {}
      type: object
    engine.SystemSettingService.UpdateSystemSettingBody:
      properties:
        value: {}
      type: object
    engine.Tag:
      properties:
        name:
          type: string
      type: object
    engine.TaskProcessing:
      properties:
        enabled:
          type: boolean
        form_schema:
          $ref: '#/components/schemas/engine.Lookup'
        renewal_sec:
          format: int64
          type: integer
        sec:
          format: int64
          type: integer
      type: object
    engine.TeamHook:
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        id:
          format: int64
          type: integer
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamHookEvent:
      default: teamHookEventUndefined
      enum:
        - teamHookEventUndefined
        - agent_status
      type: string
    engine.TeamHookService.CreateTeamHookBody:
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamHookService.PatchTeamHookBody:
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        fields:
          items:
            type: string
          type: array
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamHookService.UpdateTeamHookBody:
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        properties:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamTrigger:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int64
          type: integer
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamTriggerService.CreateTeamTriggerBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamTriggerService.PatchTeamTriggerBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TeamTriggerService.RunTeamTriggerBody:
      properties:
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.TeamTriggerService.UpdateTeamTriggerBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TestEmailProfileResponse:
      properties:
        error:
          type: string
      type: object
    engine.Timezone:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
        offset:
          type: string
      type: object
    engine.TranscriptLookup:
      properties:
        file:
          $ref: '#/components/schemas/engine.Lookup'
        file_id:
          format: int64
          title: deprecated
          type: string
        id:
          format: int64
          type: string
        locale:
          type: string
      type: object
    engine.Trigger:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.TriggerEventType:
      default: empty_trigger_event
      enum:
        - empty_trigger_event
        - create
        - update
        - remove
        - resolution_time
      type: string
    engine.TriggerJob:
      properties:
        parameters: {}
        created_at:
          format: int64
          type: string
        error:
          type: string
        id:
          format: int64
          type: string
        result: {}
        started_at:
          format: int64
          type: string
        state:
          $ref: '#/components/schemas/engine.TriggerJobState'
        stopped_at:
          format: int64
          type: string
        trigger:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.TriggerJobState:
      default: idle
      enum:
        - idle
        - active
        - done
        - error
      type: string
    engine.TriggerObjectType:
      default: empty_trigger_object
      enum:
        - empty_trigger_object
        - cases
        - case_files
        - case_comments
        - case_links
      type: string
    engine.TriggerService.CreateTriggerJobBody:
      properties:
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.TriggerService.PatchTriggerBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.TriggerService.UpdateTriggerBody:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          format: int32
          type: integer
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    engine.TriggerType:
      default: default_trigger_type
      enum:
        - default_trigger_type
        - cron
        - event
      type: string
    engine.UpdateQuestionAnswerRequest:
      properties:
        comment:
          type: string
        score:
          format: float
          type: number
      type: object
    engine.UserStatus:
      properties:
        extension:
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        presence:
          $ref: '#/components/schemas/engine.UserStatus.UserPresence'
        status:
          type: string
      type: object
    engine.UserStatus.UserPresence:
      properties:
        status:
          type: string
      type: object
    engine.WebHook:
      properties:
        authorization:
          type: string
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        key:
          type: string
        name:
          type: string
        origin:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.WebHookService.PatchWebHookBody:
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        name:
          type: string
        origin:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    engine.WebHookService.UpdateWebHookBody:
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        origin:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    ftsSearchData:
      properties:
        id:
          type: string
        object_name:
          type: string
        text:
          type: string
      type: object
    ftsSearchResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ftsSearchData'
            type: object
          type: array
        next:
          type: boolean
      type: object
    general.ExtendedLookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    general.Lookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    google.protobuf.Any:
      additionalProperties: {}
      properties:
        '@type':
          type: string
      type: object
    google.protobuf.NullValue:
      default: NULL_VALUE
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.


        The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
        - NULL_VALUE
      type: string
    google.rpc.Status:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
            type: object
          type: array
        message:
          type: string
      type: object
    grpc.gateway.runtime.Error:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          type: array
        error:
          type: string
        message:
          type: string
      type: object
    grpc.gateway.runtime.StreamError:
      properties:
        details:
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          type: array
        grpc_code:
          format: int32
          type: integer
        http_code:
          format: int32
          type: integer
        http_status:
          type: string
        message:
          type: string
      type: object
    loggerAction:
      default: default_no_action
      enum:
        - default_no_action
        - create
        - update
        - read
        - delete
      type: string
    loggerAvailableSystemObjects:
      default: cc_queue
      enum:
        - cc_queue
        - schema
        - users
        - devices
        - calendars
        - cc_list
        - cc_team
        - cc_agent
        - cc_resource
        - cc_resource_group
        - chat_bots
        - cases
        - contacts
        - cc_list_number
        - case_comments
        - record_file
      type: string
    loggerConfig:
      properties:
        days_to_store:
          format: int32
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        logs_count:
          format: int64
          type: string
        logs_size:
          type: string
        object:
          $ref: '#/components/schemas/loggerLookup'
        period:
          format: int32
          type: integer
        storage:
          $ref: '#/components/schemas/loggerLookup'
      type: object
    loggerConfigStatus:
      properties:
        is_enabled:
          type: boolean
      type: object
    loggerConfigs:
      properties:
        items:
          items:
            $ref: '#/components/schemas/loggerConfig'
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    loggerCreateConfigRequest:
      properties:
        days_to_store:
          format: int32
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        object:
          $ref: '#/components/schemas/loggerLookup'
        period:
          format: int32
          type: integer
        storage:
          $ref: '#/components/schemas/loggerLookup'
      type: object
    loggerEmpty:
      type: object
    loggerLog:
      properties:
        action:
          type: string
        config_id:
          format: int32
          type: integer
        date:
          format: int64
          type: string
        id:
          format: int32
          type: integer
        new_state:
          type: string
        object:
          $ref: '#/components/schemas/loggerLookup'
        record:
          $ref: '#/components/schemas/loggerRecord'
        user:
          $ref: '#/components/schemas/loggerLookup'
        user_ip:
          type: string
      type: object
    loggerLogs:
      properties:
        items:
          items:
            $ref: '#/components/schemas/loggerLog'
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    loggerLookup:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    loggerPatchConfigRequest:
      properties:
        config_id:
          format: int32
          type: integer
        days_to_store:
          format: int32
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        period:
          format: int32
          type: integer
        storage:
          $ref: '#/components/schemas/loggerLookup'
      type: object
    loggerRecord:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    loggerSystemObjects:
      properties:
        items:
          items:
            $ref: '#/components/schemas/loggerLookup'
          type: array
      type: object
    loggerUpdateConfigRequest:
      properties:
        config_id:
          format: int32
          type: integer
        days_to_store:
          format: int32
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        period:
          format: int32
          type: integer
        storage:
          $ref: '#/components/schemas/loggerLookup'
      type: object
    protobufAny:
      properties:
        type_url:
          type: string
        value:
          format: byte
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
            type: object
          type: array
        message:
          type: string
      type: object
    runtimeError:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
        error:
          type: string
        message:
          type: string
      type: object
    storage.BackendProfile:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        data_count:
          format: int64
          type: string
        data_size:
          format: int64
          type: string
        description:
          type: string
        disabled:
          type: boolean
        expire_days:
          format: int32
          type: integer
        id:
          format: int64
          type: string
        max_size:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        type:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    storage.BulkGenerateFileLinkResponse:
      properties:
        links:
          items:
            $ref: '#/components/schemas/storage.GenerateFileLinkResponse'
          type: array
      type: object
    storage.CognitiveProfile:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    storage.CognitiveProfileVoice:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    storage.CreateBackendProfileRequest:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        expire_days:
          format: int32
          type: integer
        max_size:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        type:
          type: string
      type: object
    storage.CreateCognitiveProfileRequest:
      description: Create cognitive profile request body for TTS and TTS
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
      required:
        - name
        - provider
        - service
        - properties
      title: Create cognitive profile request body
      type: object
    storage.CreateFilePolicyRequest:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
          type: array
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        max_upload_size:
          format: int64
          type: string
        mime_types:
          items:
            type: string
          type: array
        name:
          type: string
        retention_days:
          format: int32
          type: integer
        speed_download:
          format: int64
          type: string
        speed_upload:
          format: int64
          type: string
      type: object
    storage.CreateImportTemplateRequest:
      description: Create import template for CSV
      properties:
        parameters:
          type: object
        description:
          type: string
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
        source_id:
          format: int64
          type: string
        source_type:
          $ref: '#/components/schemas/storage.ImportSourceType'
      required:
        - name
        - source_id
        - parameters
      title: Create import template request body
      type: object
    storage.DeleteFileTranscriptRequest:
      properties:
        id:
          items:
            format: int64
            type: string
          type: array
        uuid:
          items:
            type: string
          type: array
      type: object
    storage.DeleteFileTranscriptResponse:
      properties:
        items:
          items:
            format: int64
            type: string
          type: array
      type: object
    storage.DeleteFilesRequest:
      properties:
        id:
          items:
            format: int64
            type: string
          type: array
      type: object
    storage.DeleteFilesResponse:
      type: object
    storage.File:
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        reference_id:
          type: string
        retention_until:
          format: int64
          type: string
        sha256sum:
          type: string
        size:
          format: int64
          type: string
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uploaded_at:
          format: int64
          type: string
        uploaded_by:
          $ref: '#/components/schemas/engine.Lookup'
        uuid:
          type: string
        view_name:
          type: string
      type: object
    storage.FilePolicy:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
          type: array
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        id:
          format: int32
          type: integer
        max_upload_size:
          format: int64
          type: string
        mime_types:
          items:
            type: string
          type: array
        name:
          type: string
        position:
          format: int32
          type: integer
        retention_days:
          format: int32
          type: integer
        speed_download:
          format: int64
          type: string
        speed_upload:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    storage.FilePolicyApplyRequest:
      properties:
        id:
          format: int32
          type: integer
      type: object
    storage.FilePolicyApplyResponse:
      properties:
        count:
          format: int64
          type: string
      type: object
    storage.FileTranscriptSafeResponse:
      properties:
        created_at:
          format: int64
          type: string
        file:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        locale:
          type: string
        profile:
          $ref: '#/components/schemas/engine.Lookup'
        transcript:
          type: string
      type: object
    storage.GenerateFileLinkRequest:
      properties:
        action:
          type: string
        domain_id:
          format: int64
          type: string
        file_id:
          format: int64
          type: string
        metadata:
          type: boolean
        query:
          additionalProperties:
            type: string
          type: object
        source:
          type: string
      type: object
    storage.GenerateFileLinkResponse:
      properties:
        base_url:
          type: string
        metadata:
          $ref: '#/components/schemas/storage.GenerateFileLinkResponse.Metadata'
        url:
          type: string
      type: object
    storage.GenerateFileLinkResponse.Metadata:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        uuid:
          type: string
      type: object
    storage.ImportSourceType:
      default: DefaultSourceType
      enum:
        - DefaultSourceType
        - Dialer
      type: string
    storage.ImportTemplate:
      properties:
        parameters:
          type: object
        description:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
        source_id:
          format: int64
          type: string
        source_type:
          $ref: '#/components/schemas/storage.ImportSourceType'
      type: object
    storage.ListBackendProfile:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.BackendProfile'
          type: array
        next:
          type: boolean
      type: object
    storage.ListCognitiveProfile:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.CognitiveProfile'
          type: array
        next:
          type: boolean
      type: object
    storage.ListCognitiveProfileVoices:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.CognitiveProfileVoice'
          type: array
      type: object
    storage.ListFile:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.File'
          type: array
        next:
          type: boolean
      type: object
    storage.ListFilePolicies:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.FilePolicy'
          type: array
        next:
          type: boolean
      type: object
    storage.ListImportTemplate:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.ImportTemplate'
          type: array
        next:
          type: boolean
      type: object
    storage.ListMedia:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.MediaFile'
          type: array
        next:
          type: boolean
      type: object
    storage.ListPhrases:
      properties:
        items:
          items:
            $ref: '#/components/schemas/storage.TranscriptPhrase'
          type: array
        next:
          type: boolean
      type: object
    storage.MediaFile:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/engine.Lookup'
      type: object
    storage.MovePositionFilePolicyRequest:
      properties:
        from_id:
          format: int32
          type: integer
        to_id:
          format: int32
          type: integer
      type: object
    storage.MovePositionFilePolicyResponse:
      properties:
        success:
          type: boolean
      type: object
    storage.PatchBackendProfileRequest:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        expire_days:
          format: int32
          type: integer
        fields:
          items:
            type: string
          type: array
        id:
          format: int64
          type: string
        max_size:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    storage.PatchCognitiveProfileRequest:
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        fields:
          items:
            type: string
          type: array
        id:
          format: int64
          type: string
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
      type: object
    storage.PatchFilePolicyRequest:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
          type: array
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        fields:
          items:
            type: string
          type: array
        id:
          format: int32
          type: integer
        max_upload_size:
          format: int64
          type: string
        mime_types:
          items:
            type: string
          type: array
        name:
          type: string
        retention_days:
          format: int32
          type: integer
        speed_download:
          format: int64
          type: string
        speed_upload:
          format: int64
          type: string
      type: object
    storage.PatchImportTemplateRequest:
      description: Patch import template for CSV
      properties:
        parameters:
          type: object
        description:
          type: string
        fields:
          items:
            type: string
          type: array
        id:
          format: int32
          type: integer
        name:
          type: string
      required:
        - id
      title: Patch import template request body
      type: object
    storage.ProviderType:
      default: DefaultProvider
      enum:
        - DefaultProvider
        - Microsoft
        - Google
        - ElevenLabs
      type: string
    storage.PutFileTranscriptRequest:
      properties:
        file_id:
          format: int64
          type: string
        locale:
          type: string
        phrases:
          items:
            $ref: '#/components/schemas/storage.TranscriptPhrase'
          type: array
        text:
          type: string
        uuid:
          type: string
      type: object
    storage.PutFileTranscriptResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    storage.SafeUploadFileRequest.Metadata:
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        domain_id:
          format: int64
          type: string
        generate_thumbnail:
          type: boolean
        mime_type:
          type: string
        name:
          type: string
        profile_id:
          format: int64
          type: string
        progress:
          type: boolean
        stream_response:
          type: boolean
        uuid:
          type: string
      type: object
    storage.SafeUploadFileResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Metadata'
        part:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Part'
        progress:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Progress'
      type: object
    storage.SafeUploadFileResponse.Metadata:
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        file_id:
          format: int64
          type: string
        file_url:
          type: string
        mime_type:
          type: string
        name:
          type: string
        server:
          type: string
        sha256sum:
          type: string
        size:
          format: int64
          type: string
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uuid:
          type: string
      type: object
    storage.SafeUploadFileResponse.Part:
      properties:
        size:
          format: int64
          type: string
        upload_id:
          type: string
      type: object
    storage.SafeUploadFileResponse.Progress:
      properties:
        uploaded:
          format: int64
          type: string
      type: object
    storage.ServiceType:
      default: DefaultService
      enum:
        - DefaultService
        - STT
        - TTS
      type: string
    storage.StartFileTranscriptRequest:
      properties:
        file_id:
          items:
            format: int64
            type: string
          type: array
        locale:
          type: string
        profile:
          $ref: '#/components/schemas/engine.Lookup'
        uuid:
          items:
            type: string
          type: array
      type: object
    storage.StartFileTranscriptResponse:
      properties:
        items:
          items:
            $ref: >-
              #/components/schemas/storage.StartFileTranscriptResponse.TranscriptJob
          type: array
      type: object
    storage.StartFileTranscriptResponse.TranscriptJob:
      properties:
        action:
          type: string
        created_at:
          format: int64
          type: string
        file_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        state:
          type: string
      type: object
    storage.StreamFile:
      properties:
        chunk:
          format: byte
          type: string
        metadata:
          $ref: '#/components/schemas/storage.StreamFile.Metadata'
      type: object
    storage.StreamFile.Metadata:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        sha256sum:
          type: string
        size:
          format: int64
          type: string
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uuid:
          type: string
      type: object
    storage.Thumbnail:
      properties:
        mime_type:
          type: string
        scale:
          type: string
        size:
          format: int64
          type: string
      type: object
    storage.TranscriptPhrase:
      properties:
        channel:
          format: int64
          type: integer
        end_sec:
          format: float
          type: number
        phrase:
          type: string
        start_sec:
          format: float
          type: number
      type: object
    storage.UpdateBackendProfileRequest:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domain_id:
          format: int64
          type: string
        expire_days:
          format: int32
          type: integer
        id:
          format: int64
          type: string
        max_size:
          format: int64
          type: string
        name:
          type: string
        priority:
          format: int32
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    storage.UpdateCognitiveProfileRequest:
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int64
          type: string
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
      type: object
    storage.UpdateFilePolicyRequest:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
          type: array
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        id:
          format: int32
          type: integer
        max_upload_size:
          format: int64
          type: string
        mime_types:
          items:
            type: string
          type: array
        name:
          type: string
        retention_days:
          format: int32
          type: integer
        speed_download:
          format: int64
          type: string
        speed_upload:
          format: int64
          type: string
      type: object
    storage.UpdateImportTemplateRequest:
      description: Update import template for CSV
      properties:
        parameters:
          type: object
        description:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
      required:
        - id
        - name
      title: Update import template request body
      type: object
    storage.UploadFileChannel:
      default: UnknownChannel
      enum:
        - UnknownChannel
        - ChatChannel
        - MailChannel
        - CallChannel
        - LogChannel
        - MediaChannel
        - KnowledgebaseChannel
        - CasesChannel
      type: string
    storage.UploadFileRequest.Metadata:
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        domain_id:
          format: int64
          type: string
        generate_thumbnail:
          type: boolean
        mime_type:
          type: string
        name:
          type: string
        profile_id:
          format: int64
          type: string
        stream_response:
          type: boolean
        uuid:
          type: string
      type: object
    storage.UploadFileResponse:
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        file_id:
          format: int64
          type: string
        file_url:
          type: string
        server:
          type: string
        sha256sum:
          type: string
        size:
          format: int64
          type: string
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
      type: object
    storage.UploadFileUrlResponse:
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        id:
          format: int64
          type: string
        mime:
          type: string
        server:
          type: string
        sha256sum:
          type: string
        size:
          format: int64
          type: string
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        url:
          type: string
      type: object
    storage.UploadStatusCode:
      default: Unknown
      enum:
        - Unknown
        - Ok
        - Failed
      type: string
    webitel.cases.Attachment:
      properties:
        id:
          format: int64
          type: string
        mime:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        url:
          type: string
      type: object
    webitel.cases.CallEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        files:
          items:
            $ref: '#/components/schemas/webitel.cases.CallFile'
            type: object
          type: array
        flow_scheme:
          $ref: '#/components/schemas/general.Lookup'
        gateway:
          $ref: '#/components/schemas/general.Lookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/general.Lookup'
        total_duration:
          format: int64
          type: string
        transcripts:
          items:
            $ref: '#/components/schemas/webitel.cases.TranscriptLookup'
            type: object
          type: array
      type: object
    webitel.cases.CallFile:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        start_at:
          format: int64
          type: string
        stop_at:
          format: int64
          type: string
      type: object
    webitel.cases.Case:
      description: Message representing a case.
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          description: Assignee responsible for resolving the case.
        author:
          $ref: '#/components/schemas/general.Lookup'
          description: Author or reporter of the case.
        close_reason:
          $ref: '#/components/schemas/general.Lookup'
          title: Close details
        close_reason_group:
          $ref: '#/components/schemas/general.Lookup'
          description: 'Close reason group, immutable once set.'
        close_result:
          type: string
        comments:
          $ref: '#/components/schemas/webitel.cases.CaseCommentList'
          description: List of comments on the case.
        contact_info:
          description: Contact information for the case.
          type: string
        created_at:
          description: Creation timestamp (in milliseconds since Unix epoch).
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          description: Creator of the case.
        custom:
          description: Custom data extension fields ..
          type: object
        dc:
          format: int64
          title: System field
          type: string
        description:
          description: Detailed description of the case.
          type: string
        difference_in_reaction:
          format: int64
          type: string
        difference_in_resolve:
          format: int64
          type: string
        etag:
          description: Unique etag identifier.
          type: string
        files:
          $ref: '#/components/schemas/webitel.cases.CaseFileList'
          description: List of attached files.
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          description: Group associated with the case.
        id:
          description: Unique case ID.
          format: int64
          type: string
        impacted:
          $ref: '#/components/schemas/general.Lookup'
          description: Impacted contact (defaults to reporter if null).
        links:
          $ref: '#/components/schemas/webitel.cases.CaseLinkList'
          description: List of attached links.
        name:
          description: Name of the case (may serve as an ID in docs).
          type: string
        planned_reaction_at:
          description: Planned reaction time (in milliseconds).
          format: int64
          type: string
        planned_resolve_at:
          description: Planned resolution time (in milliseconds).
          format: int64
          type: string
        priority:
          $ref: '#/components/schemas/webitel.cases.Priority'
          description: Priority level of the case.
        rating:
          format: int64
          title: Rating details
          type: string
        rating_comment:
          type: string
        reacted_at:
          format: int64
          type: string
        related:
          $ref: '#/components/schemas/webitel.cases.RelatedCaseList'
          description: List of related cases.
        reporter:
          $ref: '#/components/schemas/general.Lookup'
          description: Reporter of the issue (null if anonymous).
        resolved_at:
          format: int64
          title: Timing details
          type: string
        role_ids:
          items:
            format: int64
            type: string
          title: System field
          type: array
        service:
          $ref: '#/components/schemas/general.Lookup'
          description: Service associated with the case.
        sla:
          $ref: '#/components/schemas/general.Lookup'
          description: SLA associated with the case.
        sla_condition:
          $ref: '#/components/schemas/general.Lookup'
          description: List of SLA conditions.
        source:
          $ref: '#/components/schemas/webitel.cases.SourceTypeLookup'
          description: Source of the case.
        status:
          $ref: '#/components/schemas/general.Lookup'
          description: Current status of the case.
        status_condition:
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
          description: Status condition from status lookup.
        subject:
          description: Subject of the case.
          type: string
        updated_at:
          description: Last update timestamp (in milliseconds since Unix epoch).
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          description: Last updater of the case.
        ver:
          description: Version number of the case.
          format: int32
          type: integer
      type: object
    webitel.cases.CaseComment:
      description: Represents a comment associated with a case.
      properties:
        author:
          $ref: '#/components/schemas/general.Lookup'
          description: Contact-author of the comment.
        can_edit:
          description: Indicates if the comment can be edited by current user.
          type: boolean
        case_id:
          description: Optional relation to the associated case.
          format: int64
          type: string
        created_at:
          description: Timestamp (in milliseconds) of when the comment was created.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          description: User who created the comment.
        edited:
          description: >-
            Indicates if the comment was edited; true if created_at <
            updated_at.
          type: boolean
        etag:
          title: entity tag representing id + ver
          type: string
        id:
          description: 'Main identifier for read, update, and delete operations.'
          format: int64
          type: string
        role_ids:
          items:
            format: int64
            type: string
          title: System field
          type: array
        text:
          description: The content of the comment.
          type: string
        updated_at:
          description: Timestamp (in milliseconds) of the last update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          description: User who last updated the comment.
        ver:
          description: 'Version number of the comment, used for concurrency control.'
          format: int32
          type: integer
      type: object
    webitel.cases.CaseCommentList:
      description: Contains a paginated list of comments.
      properties:
        items:
          description: List of comments on the current page.
          items:
            $ref: '#/components/schemas/webitel.cases.CaseComment'
            type: object
          type: array
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    webitel.cases.CaseCommunication:
      description: Represents a single case communication.
      properties:
        communication_id:
          description: External communication ID.
          type: string
        communication_type:
          $ref: '#/components/schemas/general.Lookup'
          description: 'Type of the communication (e.g., Chat, Call).'
        etag:
          description: Version of the communication record.
          type: string
        id:
          description: Database ID of the communication.
          format: int64
          type: string
        ver:
          description: Version of the communication record.
          format: int32
          type: integer
      type: object
    webitel.cases.CaseFileList:
      description: Contains a list of case files with pagination.
      properties:
        items:
          description: List of case files.
          items:
            $ref: '#/components/schemas/webitel.cases.File'
            type: object
          type: array
        next:
          description: Indicator if there is a next page.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    webitel.cases.CaseLink:
      properties:
        author:
          $ref: '#/components/schemas/general.Lookup'
          title: contact-author calculated on-flight (optional)
        created_at:
          format: int64
          title: unixmilli
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
        etag:
          title: 'main field required for read, update and delete'
          type: string
        id:
          format: int64
          type: string
        name:
          title: link name (optional)
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
        url:
          title: URL
          type: string
        ver:
          format: int32
          type: integer
      type: object
    webitel.cases.CaseLinkList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.CaseLink'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int64
          type: string
      type: object
    webitel.cases.CaseList:
      description: Response message containing a list of cases.
      properties:
        items:
          description: List of cases.
          items:
            $ref: '#/components/schemas/webitel.cases.Case'
            type: object
          type: array
        next:
          description: Flag indicating if there are more pages.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    webitel.cases.CaseTimelineEventType:
      default: chat
      enum:
        - chat
        - call
        - email
      type: string
    webitel.cases.Catalog:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/general.Lookup'
          title: Close reason group associated with the catalog
        code:
          title: Code for external integrations (optional)
          type: string
        created_at:
          format: int64
          title: Timestamp when the catalog was created
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: User who created the catalog
        description:
          title: Description of the catalog (optional)
          type: string
        id:
          format: int64
          title: Unique identifier for the catalog
          type: string
        name:
          title: Name of the catalog
          type: string
        prefix:
          title: Prefix used for case identification (optional)
          type: string
        searched:
          title: flag showing whether the catalog was searched
          type: boolean
        service:
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: Service associated with the catalog
          type: array
        skills:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: Skills associated with the catalog
          type: array
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA associated with the catalog
        state:
          title: 'State of the catalog (true for active, false for inactive)'
          type: boolean
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: Status associated with the catalog
        teams:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: Teams associated with the catalog
          type: array
        updated_at:
          format: int64
          title: Timestamp when the catalog was last updated
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: User who last updated the catalog
      title: Catalog message represents the main catalog entity with metadata
      type: object
    webitel.cases.CatalogList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.Catalog'
            type: object
          title: List of catalog items
          type: array
        next:
          title: Indicates if there are more pages
          type: boolean
        page:
          format: int32
          title: Page number for pagination
          type: integer
      title: CatalogList message contains a list of catalogs with pagination
      type: object
    webitel.cases.ChatEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        flow_scheme:
          $ref: '#/components/schemas/general.Lookup'
        gateway:
          $ref: '#/components/schemas/general.ExtendedLookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/general.Lookup'
      type: object
    webitel.cases.CloseReason:
      properties:
        close_reason_group_id:
          format: int64
          title: Close Reason Group ID of the close reason
          type: string
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason
        description:
          title: Description of the close reason
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason
      title: CloseReason message represents a close reason entity with metadata
      type: object
    webitel.cases.CloseReasonGroup:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason group
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason group
        description:
          title: Description of the close reason group
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason group
          type: string
        name:
          title: Name of the close reason group
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason group
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason group
      title: >-
        CloseReasonGroup message represents a close reason group entity with
        metadata
      type: object
    webitel.cases.CloseReasonGroupList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        CloseReasonGroupList message contains a list of CloseReasonGroup items
        with pagination
      type: object
    webitel.cases.CloseReasonList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.CloseReason'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        CloseReasonList message contains a list of CloseReason items with
        pagination
      type: object
    webitel.cases.CreateCaseRelatedCaseInput:
      description: Structure for related cases input when creating a case.
      properties:
        etag:
          description: Etag of the related case.
          type: string
        related_to:
          description: Identifier of the related case.
          type: string
        relation_type:
          $ref: '#/components/schemas/webitel.cases.RelationType'
          description: 'Type of relation (e.g., duplicate, linked).'
      type: object
    webitel.cases.CreateInputRelatedCase:
      description: Input for creating a related case.
      properties:
        related_case:
          $ref: '#/components/schemas/general.Lookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/webitel.cases.RelationType'
          description: Relation type between the cases.
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.DayTimeline:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          type: string
        day_timestamp:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.Event'
            type: object
          type: array
      type: object
    webitel.cases.EmailEvent:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/webitel.cases.Attachment'
            type: object
          type: array
        body:
          title: plain text of email
          type: string
        cc:
          items:
            type: string
          title: array of ccs (email addresses)
          type: array
        from:
          items:
            type: string
          title: array of senders (email addresses)
          type: array
        html:
          title: html body of email
          type: string
        id:
          type: string
        is_detailed:
          title: reserved for the open
          type: boolean
        is_inbound:
          title: inbound/outbound email
          type: boolean
        owner:
          $ref: '#/components/schemas/general.Lookup'
          title: Agent who sent/accepted
        profile:
          $ref: '#/components/schemas/general.Lookup'
          title: email profile
        sender:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
        subject:
          type: string
        to:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
      type: object
    webitel.cases.Event:
      properties:
        call:
          $ref: '#/components/schemas/webitel.cases.CallEvent'
        chat:
          $ref: '#/components/schemas/webitel.cases.ChatEvent'
        created_at:
          format: int64
          type: string
        email:
          $ref: '#/components/schemas/webitel.cases.EmailEvent'
        type:
          $ref: '#/components/schemas/webitel.cases.CaseTimelineEventType'
      type: object
    webitel.cases.File:
      description: Metadata for a file associated with a case.
      properties:
        author:
          $ref: '#/components/schemas/general.Lookup'
        created_at:
          description: Creation timestamp in Unix milliseconds.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          description: Creator of the file.
        id:
          description: Storage file ID.
          format: int64
          type: string
        mime:
          description: MIME type of the file.
          type: string
        name:
          description: File name.
          type: string
        size:
          description: File size in bytes.
          format: int64
          type: string
        url:
          type: string
      type: object
    webitel.cases.GetTimelineCounterResponse:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          title: defined event types
          type: string
        date_from:
          format: int64
          title: filter dates
          type: string
        date_to:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
      type: object
    webitel.cases.GetTimelineResponse:
      properties:
        days:
          items:
            $ref: '#/components/schemas/webitel.cases.DayTimeline'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    webitel.cases.InputCase:
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default from service or set by UI;'
        close_reason:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required;'
        close_result:
          title: >-
            create: not required; update: required only when case status goes to
            the final state
          type: string
        contact_info:
          title: 'create: not required;'
          type: string
        custom:
          description: Custom data extension fields ..
          type: object
        description:
          title: 'create: not required;'
          type: string
        etag:
          type: string
        group:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default from service or set by UI;'
        impacted:
          $ref: '#/components/schemas/general.Lookup'
          title: >-
            create: required, default is reporter or ui (if empty recognize as
            anonymous);
        priority:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default first value from priority lookup'
        rating:
          format: int64
          type: string
        rating_comment:
          type: string
        reporter:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: required (if empty recognize as anonymous contact);'
        service:
          $ref: '#/components/schemas/general.Lookup'
          title: on this field base many other readonly fields on return
        source:
          $ref: '#/components/schemas/general.Lookup'
          title: source of the case
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: >-
            create: not required, default initial value from status lookup or
            ui;
        status_condition:
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
        subject:
          title: 'create: required;'
          type: string
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.InputCaseComment:
      description: Input structure for creating or updating a case comment.
      example:
        text: My new comment
      properties:
        etag:
          description: Identifier for the comment.
          type: string
        text:
          description: Content of the comment.
          type: string
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.InputCaseCommunication:
      description: Represents input data for creating or linking a communication.
      properties:
        communication_id:
          description: External communication ID.
          type: string
        communication_type:
          $ref: '#/components/schemas/general.Lookup'
          description: Type of the communication.
      type: object
    webitel.cases.InputCaseLink:
      properties:
        etag:
          type: string
        name:
          type: string
        url:
          type: string
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.InputCatalog:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/general.Lookup'
          title: Close reason group ID associated with the catalog
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the catalog (optional)
          type: string
        name:
          title: Name of the catalog (required)
          type: string
        prefix:
          title: Prefix for case identification (optional)
          type: string
        skills:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of skill IDs associated with the catalog
          type: array
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the catalog
        state:
          title: 'State of the catalog (true for active, false for inactive)'
          type: boolean
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: Status ID associated with the catalog
        teams:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of team IDs associated with the catalog
          type: array
      title: >-
        InputCatalog message contains the fields for creating or updating a
        catalog
      type: object
    webitel.cases.InputCloseReason:
      properties:
        description:
          title: Description of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
      title: InputCloseReason message for inputting close reason data
      type: object
    webitel.cases.InputCloseReasonGroup:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    webitel.cases.InputCreateCase:
      description: Input structure for creating a new case.
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          description: Optional assignee ID.
        close_reason:
          $ref: '#/components/schemas/general.Lookup'
          description: Optional close information.
        close_reason_group:
          $ref: '#/components/schemas/general.Lookup'
          description: Optional close reason.
        close_result:
          description: Optional close information.
          type: string
        contact_info:
          description: Optional contact information.
          type: string
        custom:
          description: Custom data extension fields ..
          type: object
        description:
          description: Optional description of the case.
          type: string
        group:
          $ref: '#/components/schemas/general.Lookup'
          description: Optional group ID.
        impacted:
          $ref: '#/components/schemas/general.Lookup'
          description: 'Required impacted user ID (default: reporter).'
        links:
          description: List of links attached to the case.
          items:
            $ref: '#/components/schemas/webitel.cases.InputCaseLink'
            type: object
          type: array
        priority:
          $ref: '#/components/schemas/general.Lookup'
          description: Optional priority level.
        rating:
          description: API-only rating information.
          format: int64
          type: string
        rating_comment:
          description: API-only rating information.
          type: string
        related:
          description: List of related cases.
          items:
            $ref: '#/components/schemas/webitel.cases.CreateCaseRelatedCaseInput'
            type: object
          type: array
        reporter:
          $ref: '#/components/schemas/general.Lookup'
          description: 'Required reporter ID (if empty, anonymous contact).'
        service:
          $ref: '#/components/schemas/general.Lookup'
          description: Service ID (affects many other readonly fields).
        source:
          $ref: '#/components/schemas/general.Lookup'
          description: Source of the case.
        status:
          $ref: '#/components/schemas/general.Lookup'
          description: Initial case status (default from lookup or UI).
        status_condition:
          $ref: '#/components/schemas/general.Lookup'
        subject:
          description: Required subject of the case.
          type: string
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.InputCreateService:
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee ID responsible for the service
        catalog_id:
          format: int64
          title: ID of the root catalog
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group ID responsible for the service
        name:
          title: Name of the service (required)
          type: string
        root_id:
          format: int64
          title: Parent catalog ID (required)
          type: string
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
      type: object
    webitel.cases.InputCreateStatusCondition:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    webitel.cases.InputPriority:
      properties:
        color:
          title: Color of the priority
          type: string
        description:
          title: Description of the priority
          type: string
        name:
          title: Name of the priority
          type: string
      title: InputPriority message for creating a new priority
      type: object
    webitel.cases.InputRelatedCase:
      description: Input for creating or updating a related case.
      properties:
        primary_case:
          $ref: '#/components/schemas/general.Lookup'
          description: Primary case details.
        related_case:
          $ref: '#/components/schemas/general.Lookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/webitel.cases.RelationType'
          description: Relation type.
        userID:
          $ref: '#/components/schemas/general.Lookup'
          description: >-
            Optional creator / updater ID. Use this to explicitly set the case
            creator / updater instead of deriving it from the auth token.
      type: object
    webitel.cases.InputSLA:
      properties:
        calendar:
          $ref: '#/components/schemas/general.Lookup'
          title: Calendar ID from the "Calendars" dictionary
        description:
          title: Description of the SLA
          type: string
        name:
          title: Name of the SLA
          type: string
        reaction_time:
          format: int64
          title: Reaction time
          type: string
        resolution_time:
          format: int64
          title: Resolution time
          type: string
        valid_from:
          format: int64
          title: Validity period for the SLA
          type: string
        valid_to:
          format: int64
          type: string
      title: InputSLA message for inputting SLA data
      type: object
    webitel.cases.InputSLACondition:
      properties:
        name:
          type: string
        priorities:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of priority IDs for creation
          type: array
        reaction_time:
          format: int64
          type: string
        resolution_time:
          format: int64
          type: string
      title: InputSLACondition message for inputting SLACondition data
      type: object
    webitel.cases.InputService:
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee ID responsible for the service
        catalog_id:
          format: int64
          title: The parent catalog (required)
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group ID responsible for the service
        name:
          title: Name of the service (required)
          type: string
        root_id:
          format: int64
          title: ID of the root catalog
          type: string
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
      title: >-
        InputService message contains the fields for creating or updating a
        service
      type: object
    webitel.cases.InputSource:
      externalDocs:
        description: Supported source types documentation
        url: 'https://api.example.com/docs/source-types'
      default: '{ "name": "Default Source", "type": "CALL" }'
      description: The data structure representing a source
      example:
        description: Inbound customer calls
        name: Inbound
        type: CALL
      maxProperties: 5
      minProperties: 2
      properties:
        description:
          default: No description provided
          description: A short description of the source
          example: Handles incoming calls from customers
          format: string
          maxLength: 500
          title: Optional short description for context
          type: string
        name:
          default: New Source
          description: The name of the source
          example: Inbound Calls
          format: string
          maxLength: 100
          minLength: 2
          pattern: '^[a-zA-Z0-9_\- ]+$'
          title: Display name for the source
          type: string
        type:
          $ref: '#/components/schemas/webitel.cases.SourceType'
          default: '"CALL"'
          description: The type of the source
          enum:
            - CALL
            - EMAIL
            - CHAT
          example: CALL
          format: string
          title: Type of the source; restrictable to a fixed set of allowed values
      required:
        - name
        - type
      title: Input Source
      type: object
    webitel.cases.InputStatus:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    webitel.cases.InputStatusCondition:
      properties:
        description:
          title: Description of the status condition
          type: string
        final:
          title: Final status condition
          type: boolean
        initial:
          title: Initial status condition
          type: boolean
        name:
          title: Name of the status condition
          type: string
      title: InputStatusCondition message for inputting status condition data
      type: object
    webitel.cases.LinkCommunicationResponse:
      description: Response message after linking communications to a case.
      properties:
        data:
          description: List of linked communications.
          items:
            $ref: '#/components/schemas/webitel.cases.CaseCommunication'
            type: object
          type: array
      type: object
    webitel.cases.ListCommunicationsResponse:
      description: Response message for listing communications linked to a case.
      properties:
        data:
          description: List of communications.
          items:
            $ref: '#/components/schemas/webitel.cases.CaseCommunication'
            type: object
          type: array
        next:
          type: boolean
        page:
          description: Current page number.
          format: int32
          type: integer
      type: object
    webitel.cases.LocateCatalogResponse:
      properties:
        catalog:
          $ref: '#/components/schemas/webitel.cases.Catalog'
          title: The located catalog
      title: LocateCatalogResponse message contains a single catalog entity
      type: object
    webitel.cases.LocateCloseReasonGroupResponse:
      properties:
        close_reason_group:
          $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
      title: >-
        LocateCloseReasonGroupResponse message contains a single close reason
        group entity
      type: object
    webitel.cases.LocateCloseReasonResponse:
      properties:
        close_reason:
          $ref: '#/components/schemas/webitel.cases.CloseReason'
      title: LocateCloseReasonResponse message contains a single close reason entity
      type: object
    webitel.cases.LocatePriorityResponse:
      properties:
        priority:
          $ref: '#/components/schemas/webitel.cases.Priority'
      title: LocatePriorityResponse message contains a single priority entity
      type: object
    webitel.cases.LocateSLAConditionResponse:
      properties:
        sla_condition:
          $ref: '#/components/schemas/webitel.cases.SLACondition'
      title: LocateSLAConditionResponse message contains a single SLACondition entity
      type: object
    webitel.cases.LocateSLAResponse:
      properties:
        sla:
          $ref: '#/components/schemas/webitel.cases.SLA'
      title: LocateSLAResponse message contains a single SLA entity
      type: object
    webitel.cases.LocateServiceResponse:
      properties:
        service:
          $ref: '#/components/schemas/webitel.cases.Service'
          title: The located service
      title: LocateServiceResponse message contains a single service entity
      type: object
    webitel.cases.LocateSourceResponse:
      description: Response message for locating a source.
      properties:
        source:
          $ref: '#/components/schemas/webitel.cases.Source'
          description: The located source.
      type: object
    webitel.cases.LocateStatusConditionResponse:
      properties:
        status:
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
      title: LocateStatusConditionResponse message contains a single status entity
      type: object
    webitel.cases.LocateStatusResponse:
      properties:
        status:
          $ref: '#/components/schemas/webitel.cases.Status'
      title: LocateStatusResponse message contains a single status entity
      type: object
    webitel.cases.Priority:
      properties:
        color:
          title: Color of the priority
          type: string
        created_at:
          format: int64
          title: CreatedAt timestamp of the priority
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the priority
        description:
          title: Description of the priority
          type: string
        id:
          format: int64
          title: Unique identifier of the priority
          type: string
        name:
          title: Name of the priority
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the priority
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the priority
      title: Priority message represents a priority entity with metadata
      type: object
    webitel.cases.PriorityList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.Priority'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: PriorityList message contains a list of Priority items with pagination
      type: object
    webitel.cases.RelatedCase:
      description: Represents a related case with its relationship details.
      properties:
        created_at:
          description: Timestamp (in milliseconds) of when the relation was created.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          description: User who created the relation.
        etag:
          description: Etag for the related case entity.
          type: string
        id:
          description: Unique identifier for the related case.
          format: int64
          type: string
        primary_case:
          $ref: '#/components/schemas/webitel.cases.RelatedCaseLookup'
          description: Primary case details.
        related_case:
          $ref: '#/components/schemas/webitel.cases.RelatedCaseLookup'
          description: Related case details.
        relation_type:
          $ref: '#/components/schemas/webitel.cases.RelationType'
          description: Relation type between cases.
        updated_at:
          description: Timestamp (in milliseconds) of the last update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          description: User who last updated the relation.
        ver:
          description: 'Version number of the related case, used for concurrency control.'
          format: int32
          type: integer
      type: object
    webitel.cases.RelatedCaseList:
      description: Paginated list of related cases.
      properties:
        data:
          description: List of related cases on the current page.
          items:
            $ref: '#/components/schemas/webitel.cases.RelatedCase'
            type: object
          type: array
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          format: int64
          type: string
      type: object
    webitel.cases.RelatedCaseLookup:
      description: RelatedCaseLookup is created specifically to include the subject field.
      properties:
        color:
          title: colour ( calculated by attached priority )
          type: string
        etag:
          type: string
        id:
          format: int64
          title: id
          type: string
        name:
          title: name
          type: string
        subject:
          title: subject
          type: string
        ver:
          format: int32
          title: ver
          type: integer
      type: object
    webitel.cases.RelationType:
      default: RELATION_TYPE_UNSPECIFIED
      description: Enum for relation types between cases.
      enum:
        - RELATION_TYPE_UNSPECIFIED
        - DUPLICATES
        - IS_DUPLICATED_BY
        - BLOCKS
        - IS_BLOCKED_BY
        - CAUSES
        - IS_CAUSED_BY
        - IS_CHILD_OF
        - IS_PARENT_OF
        - RELATES_TO
      type: string
    webitel.cases.SLA:
      properties:
        calendar:
          $ref: '#/components/schemas/general.Lookup'
          title: Calendar ID from the "Calendars" dictionary - required
        created_at:
          format: int64
          title: CreatedAt timestamp of the SLA
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the SLA
        description:
          title: Description of the SLA - optional
          type: string
        id:
          format: int64
          title: Unique identifier of the SLA
          type: string
        name:
          title: Name of the SLA - required
          type: string
        reaction_time:
          format: int64
          title: Reaction time - required
          type: string
        resolution_time:
          format: int64
          title: Resolution time - required
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the SLA
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the SLA
        valid_from:
          format: int64
          title: Validity period for the SLA - optional
          type: string
        valid_to:
          format: int64
          type: string
      title: SLA message represents an SLA entity with metadata
      type: object
    webitel.cases.SLACondition:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the SLACondition
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the SLACondition
        id:
          format: int64
          title: Unique identifier of the SLACondition
          type: string
        name:
          title: Name of the SLACondition - required
          type: string
        priorities:
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: >-
            Priorities associated with the SLACondition - fetched as Lookup
            entities [ Priority name + ID ]
          type: array
        reaction_time:
          format: int64
          title: Reaction time - required
          type: string
        resolution_time:
          format: int64
          title: Resolution time - required
          type: string
        sla_id:
          format: int64
          title: SLA ID associated with the SLACondition
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the SLACondition
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the SLACondition
      title: SLACondition message represents an SLACondition entity with metadata
      type: object
    webitel.cases.SLAConditionList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.SLACondition'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        SLAConditionList message contains a list of SLACondition items with
        pagination
      type: object
    webitel.cases.SLAList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.SLA'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: SLAList message contains a list of SLA items with pagination
      type: object
    webitel.cases.Service:
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee responsible for the service
        catalog_id:
          format: int64
          title: Catalogs associated with the service
          type: string
        code:
          title: Code for external integrations (optional)
          type: string
        created_at:
          format: int64
          title: Timestamp when the service was created
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: User who created the service
        description:
          title: Description of the service (optional)
          type: string
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group responsible for the service
        id:
          format: int64
          title: Unique identifier for the service
          type: string
        name:
          title: Name of the service
          type: string
        root_id:
          format: int64
          title: ID of the parent catalog
          type: string
        searched:
          title: flag showing whether the catalog was searched
          type: boolean
        service:
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: Service associated with the service
          type: array
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA associated with the service
        state:
          title: 'State of the service (true for active, false for inactive)'
          type: boolean
        updated_at:
          format: int64
          title: Timestamp when the service was last updated
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: User who last updated the service
      title: Service message represents a service entity within a catalog
      type: object
    webitel.cases.ServiceList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: List of service items
          type: array
        next:
          title: Indicates if there are more pages
          type: boolean
        page:
          format: int32
          title: Page number for pagination
          type: integer
      title: ServiceList message contains a list of services with pagination
      type: object
    webitel.cases.Source:
      description: Represents a data source in the contact management system.
      properties:
        created_at:
          description: Unix timestamp representing when the source was created.
          format: int64
          readOnly: true
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          description: Reference to the user who originally created this source.
          readOnly: true
        description:
          description: An optional longer explanation of the source's purpose.
          example: Primary CRM system used for customer relationship tracking.
          maxLength: 500
          type: string
        id:
          description: 'Unique identifier for the source, generated automatically.'
          format: int64
          readOnly: true
          type: string
        name:
          description: 'A unique, descriptive name for the source.'
          example: CRM System
          maxLength: 100
          minLength: 3
          pattern: '^[a-zA-Z0-9_\-\s]+$'
          type: string
        type:
          $ref: '#/components/schemas/webitel.cases.SourceType'
          default: TYPE_UNSPECIFIED
          description: The type of data source represented by this entry.
          enum:
            - TYPE_UNSPECIFIED
            - CALL
            - CHAT
            - SOCIAL_MEDIA
            - EMAIL
            - API
            - MANUAL
          example: CALL
        updated_at:
          description: Unix timestamp representing the most recent update.
          format: int64
          readOnly: true
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          description: Reference to the user who most recently modified this source.
          readOnly: true
      required:
        - id
        - name
        - type
        - created_at
        - updated_at
        - created_by
        - updated_by
      title: Source Entity
      type: object
    webitel.cases.SourceList:
      description: A list of sources.
      properties:
        items:
          description: List of sources.
          items:
            $ref: '#/components/schemas/webitel.cases.Source'
            type: object
          type: array
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.cases.SourceType:
      default: TYPE_UNSPECIFIED
      description: |-
        Represents a source type for the source entity.

         - TYPE_UNSPECIFIED: Unspecified source type.
         - CALL: Phone call source type.
         - CHAT: Chat source type.
         - SOCIAL_MEDIA: Social media source type.
         - EMAIL: Email source type.
         - API: API source type.
         - MANUAL: Manual source type.
      enum:
        - TYPE_UNSPECIFIED
        - CALL
        - CHAT
        - SOCIAL_MEDIA
        - EMAIL
        - API
        - MANUAL
      type: string
    webitel.cases.SourceTypeLookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/webitel.cases.SourceType'
      type: object
    webitel.cases.Status:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the close reason
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason
        description:
          title: Description of the close reason
          type: string
        id:
          format: int64
          title: Unique identifier of the close reason
          type: string
        name:
          title: Name of the close reason
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the close reason
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason
      title: Status message represents a status entity with metadata
      type: object
    webitel.cases.StatusCondition:
      properties:
        created_at:
          format: int64
          title: CreatedAt timestamp of the status condition
          type: string
        created_by:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the status condition
        description:
          title: Description of the status condition
          type: string
        final:
          title: Final status condition
          type: boolean
        id:
          format: int64
          title: Unique identifier of the status condition
          type: string
        initial:
          title: Initial status condition
          type: boolean
        name:
          title: Name of the status condition
          type: string
        status_id:
          format: int64
          title: Status ID of the status condition
          type: string
        updated_at:
          format: int64
          title: UpdatedAt timestamp of the status condition
          type: string
        updated_by:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the status condition
      title: StatusCondition message represents a status entity with metadata
      type: object
    webitel.cases.StatusConditionList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.StatusCondition'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: >-
        StatusConditionList message contains a list of StatusCondition items
        with pagination
      type: object
    webitel.cases.StatusList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.cases.Status'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      title: StatusList message contains a list of Status items with pagination
      type: object
    webitel.cases.TranscriptLookup:
      properties:
        file:
          $ref: '#/components/schemas/general.Lookup'
        id:
          format: int64
          type: string
        locale:
          type: string
      type: object
    webitel.cases.UnlinkCommunicationResponse:
      description: Response message after unlinking a communication from a case.
      properties:
        affected:
          description: Affected rows.
          format: int64
          type: string
      type: object
    webitel.chat.AgentChat:
      properties:
        close_reason:
          title: Close reason (from agent perspective)
          type: string
        closed_at:
          format: int64
          type: string
        contact:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Connected contact
        gateway:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Chat gateway
        id:
          title: Chat id
          type: string
        last_message:
          $ref: '#/components/schemas/webitel.chat.Message'
          title: Chat first message
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Queue name
        started_at:
          format: int64
          title: Chat time length
          type: string
        title:
          title: Chat title
          type: string
        unprocessed_close:
          title: >-
            Special attribute for the closed-active chats (on fact closed but
            should be on active tab on the front-end)

            can be true only when close reason = any("client_leave",
            "client_timeout", "agent_timeout", "silence_timeout")
          type: boolean
      type: object
    webitel.chat.BroadcastError:
      properties:
        error:
          $ref: '#/components/schemas/google.rpc.Status'
        peer_id:
          type: string
      type: object
    webitel.chat.BroadcastMessageRequest:
      properties:
        message:
          $ref: '#/components/schemas/webitel.chat.InputMessage'
        peers:
          items:
            $ref: '#/components/schemas/webitel.chat.InputPeer'
            type: object
          type: array
        timeout:
          format: int64
          type: string
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    webitel.chat.BroadcastMessageResponse:
      properties:
        failure:
          items:
            $ref: '#/components/schemas/webitel.chat.BroadcastError'
            type: object
          type: array
        variables:
          additionalProperties:
            type: string
          type: object
      type: object
    webitel.chat.Button:
      properties:
        code:
          description: Postback/Callback data.
          type: string
        share:
          $ref: '#/components/schemas/webitel.chat.Button.Request'
          description: Request to share contact info.
        text:
          description: Caption to display.
          type: string
        url:
          description: URL to navigate to ..
          type: string
      type: object
    webitel.chat.Button.Request:
      default: phone
      description: |-
        - phone: Phone Number
         - email: Email Address
         - contact: General Form
         - location: Current Location
      enum:
        - phone
        - email
        - contact
        - location
      title: Type of request to share contact info
      type: string
    webitel.chat.ButtonRow:
      properties:
        row:
          items:
            $ref: '#/components/schemas/webitel.chat.Button'
            type: object
          title: Button(s) in a row
          type: array
      type: object
    webitel.chat.Chat:
      description: |-
        The Chat info.
        Alias: participant, subscriber, member, peer, leg.
      properties:
        context:
          additionalProperties:
            type: string
          description: Context. Variables.
          type: object
        dc:
          description: '[D]omain[C]omponent primary ID.'
          format: int64
          type: string
        id:
          description: |-
            Unique identifier for this chat.
            [FROM] Member / Channel ID.

            // [TO] Group. Conversation ID.
             string chat_id = 2;
          type: string
        invite:
          $ref: '#/components/schemas/webitel.chat.Chat.Invite'
          description: 'OPTIONAL. Invite[d] BY member info.'
        join:
          description: |-
            OPTIONAL. A non-zero value indicates that
            the participant has joined the chat.
          format: int64
          type: string
        left:
          format: int64
          title: |-
            OPTIONAL. A non-zero value indicates that
            the participant has left the chat. OFFLINE(!)
          type: string
        peer:
          $ref: '#/components/schemas/webitel.chat.Peer'
          description: '[FROM]: User identity. Seed.'
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: OPTIONAL. Last dialog queue
        title:
          description: '[TO]: Chat title.'
          type: string
        via:
          $ref: '#/components/schemas/webitel.chat.Peer'
          description: '[FROM] VIA text gateway profile.'
      type: object
    webitel.chat.Chat.Invite:
      properties:
        date:
          format: int64
          title: Timestamp when the invitation to join the chat was sent
          type: string
        from:
          title: Chat member ID who invited to join the chat
          type: string
      type: object
    webitel.chat.ChatCustomers:
      properties:
        next:
          title: Next page is available ?
          type: boolean
        page:
          description: Page number of results.
          format: int32
          type: integer
        peers:
          description: Dataset page of Customer(s).
          items:
            $ref: '#/components/schemas/webitel.chat.Customer'
            type: object
          type: array
        vias:
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
          title: 'List of unique text gateways, mentioned in peers. [VIA]'
          type: array
      title: ChatCustomers dataset
      type: object
    webitel.chat.ChatDialogs:
      properties:
        data:
          description: Dataset page of Dialog(s).
          items:
            $ref: '#/components/schemas/webitel.chat.Dialog'
            type: object
          type: array
        next:
          title: Next page available ?
          type: boolean
        page:
          description: Page number of results.
          format: int32
          type: integer
      title: ChatDialogs dataset
      type: object
    webitel.chat.ChatMembers:
      properties:
        data:
          description: Page of the chat participants.
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
          type: array
        next:
          title: Next page available ?
          type: boolean
        page:
          description: Page number of results.
          format: int32
          type: integer
      title: ChatMembers dataset
      type: object
    webitel.chat.ChatMessage:
      description: Chat Message.
      properties:
        chat:
          $ref: '#/components/schemas/webitel.chat.ContactChat'
          description: Conversation the message belongs to ..
        context:
          additionalProperties:
            type: string
          description: Context. Variables. Environment.
          type: object
        date:
          description: Timestamp when this message was sent (published).
          format: int64
          type: string
        edit:
          description: Timestamp when this message was last edited.
          format: int64
          type: string
        file:
          $ref: '#/components/schemas/webitel.chat.MessageFile'
          description: Message Media. Attachment.
        from:
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
          description: Sender of the message.
        id:
          description: Unique message identifier inside this chat.
          format: int64
          type: string
        keyboard:
          $ref: '#/components/schemas/webitel.chat.MessageReplyMarkup'
          description: Keyboard. Buttons. Quick Replies.
        postback:
          $ref: '#/components/schemas/webitel.chat.MessagePostback'
          description: 'Postback. Reply Button Click[ed].'
        sender:
          $ref: '#/components/schemas/webitel.chat.ContactChat'
          description: 'Chat Sender of the message, sent on behalf of a chat (member).'
        text:
          description: Message Text.
          type: string
      type: object
    webitel.chat.ChatMessages:
      properties:
        chats:
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
          title: 'List of chats mentioned in messages. [FROM]'
          type: array
        messages:
          description: Dataset page of messages.
          items:
            $ref: '#/components/schemas/webitel.chat.Message'
            type: object
          type: array
        next:
          title: Next page is available ?
          type: boolean
        page:
          description: Dataset page number.
          format: int32
          type: integer
        peers:
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
          title: 'List of peers mentioned in messages. [FROM]'
          type: array
      title: ChatMessages dataset
      type: object
    webitel.chat.ChatMessagesRequest.Offset:
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          format: int64
          type: string
        id:
          format: int64
          title: Messages ONLY starting from the specified message ID
          type: string
      title: Offset options
      type: object
    webitel.chat.ChatPeer:
      description: Peer contact.
      properties:
        id:
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          type: string
        name:
          description: Contact display **name**.
          type: string
        type:
          description: Contact **type** provider.
          type: string
      type: object
    webitel.chat.ContactChat:
      description: |-
        The Chat info.
        Alias: participant, subscriber, member, peer, leg.
      properties:
        context:
          additionalProperties:
            type: string
          description: Context. Variables.
          type: object
        dc:
          description: '[D]omain[C]omponent primary ID.'
          format: int64
          type: string
        id:
          description: |-
            Unique identifier for this chat.
            [FROM] Member / Channel ID.

            // [TO] Group. Conversation ID.
             string chat_id = 2;
          type: string
        invite:
          $ref: '#/components/schemas/webitel.chat.ContactChat.Invite'
          description: 'OPTIONAL. Invite[d] BY member info.'
        join:
          description: |-
            OPTIONAL. A non-zero value indicates that
            the participant has joined the chat.
          format: int64
          type: string
        left:
          format: int64
          title: |-
            OPTIONAL. A non-zero value indicates that
            the participant has left the chat. OFFLINE(!)
          type: string
        peer:
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
          description: '[FROM]: User identity. Seed.'
        title:
          description: '[TO]: Chat title.'
          type: string
        via:
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
          description: '[FROM] VIA text gateway profile.'
      type: object
    webitel.chat.ContactChat.Invite:
      properties:
        date:
          format: int64
          title: Timestamp when the invitation to join the chat was sent
          type: string
        from:
          title: Chat member ID who invited to join the chat
          type: string
      type: object
    webitel.chat.Customer:
      description: Customer is external chat contact.
      properties:
        id:
          description: |-
            Customer unique **ID**entifier.
            Account **type**-specific string.
          type: string
        name:
          description: Customer account **name**.
          type: string
        type:
          description: Customer account **type**.
          type: string
        via:
          description: '[VIA] Text gateway associations.'
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
          type: array
      type: object
    webitel.chat.Dialog:
      description: Chat Dialog. Conversation info.
      properties:
        closed:
          format: int64
          title: |-
            Timestamp when dialog was closed.
            Zero value means - connected (online)
            Otherwise - disconnected (offline)
          type: string
        closed_cause:
          title: Close reason if closed from the request sender perspective
          type: string
        context:
          additionalProperties:
            type: string
          description: Context. Variables. Environment.
          type: object
        date:
          description: Timestamp of the latest activity.
          format: int64
          type: string
        dc:
          description: '[D]omain[C]omponent primary ID.'
          format: int64
          type: string
        from:
          $ref: '#/components/schemas/webitel.chat.Peer'
          description: |-
            [FROM]: Originator.
            Leg[A]. Contact / User.
        id:
          description: The Conversation thread unique ID.
          type: string
        members:
          description: |-
            [TO]: Participants.
            Leg[A+]. Schema / Agent.
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
          type: array
        message:
          $ref: '#/components/schemas/webitel.chat.Message'
          description: The latest (top) message.
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: OPTIONAL. Last dialog queue
        started:
          description: Timestamp when dialog started.
          format: int64
          type: string
        title:
          description: Title of the dialog.
          type: string
        via:
          $ref: '#/components/schemas/webitel.chat.Peer'
          description: '[VIA] Text gateway [FROM] originated thru ...'
      type: object
    webitel.chat.EmptyResponse:
      type: object
    webitel.chat.File:
      description: Media File.
      properties:
        id:
          title: File location
          type: string
        name:
          title: Filename
          type: string
        size:
          format: int64
          title: Size in bytes
          type: string
        type:
          title: MIME media type
          type: string
        url:
          title: File url (optional)
          type: string
      type: object
    webitel.chat.GetAgentChatsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/webitel.chat.AgentChat'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    webitel.chat.GetCaseChatHistoryRequest.Offset:
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          format: int64
          type: string
        id:
          format: int64
          title: Messages ONLY starting from the specified message ID
          type: string
      title: Offset options
      type: object
    webitel.chat.GetContactChatHistoryRequest.Offset:
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          format: int64
          type: string
        id:
          format: int64
          title: Messages ONLY starting from the specified message ID
          type: string
      title: Offset options
      type: object
    webitel.chat.GetContactChatHistoryResponse:
      properties:
        chats:
          items:
            $ref: '#/components/schemas/webitel.chat.ContactChat'
            type: object
          title: 'List of chats mentioned in messages. [FROM]'
          type: array
        messages:
          description: Dataset page of messages.
          items:
            $ref: '#/components/schemas/webitel.chat.ChatMessage'
            type: object
          type: array
        next:
          title: Next page is available ?
          type: boolean
        page:
          description: Dataset page number.
          format: int32
          type: integer
        peers:
          items:
            $ref: '#/components/schemas/webitel.chat.ChatPeer'
            type: object
          title: 'List of peers mentioned in messages. [FROM]'
          type: array
      title: ChatMessages dataset
      type: object
    webitel.chat.InputButton:
      properties:
        caption:
          type: string
        code:
          type: string
        text:
          type: string
        type:
          type: string
        url:
          type: string
      type: object
    webitel.chat.InputButtonRow:
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/webitel.chat.InputButton'
            type: object
          type: array
      type: object
    webitel.chat.InputFile:
      properties:
        id:
          type: string
        url:
          type: string
      type: object
    webitel.chat.InputKeyboard:
      properties:
        rows:
          items:
            $ref: '#/components/schemas/webitel.chat.InputButtonRow'
            type: object
          type: array
      type: object
    webitel.chat.InputMessage:
      properties:
        file:
          $ref: '#/components/schemas/webitel.chat.InputFile'
        keyboard:
          $ref: '#/components/schemas/webitel.chat.InputKeyboard'
        text:
          type: string
      type: object
    webitel.chat.InputPeer:
      description: InputPeer identity.
      properties:
        id:
          type: string
        type:
          type: string
        via:
          type: string
      type: object
    webitel.chat.LinkContactToClientNAResponse:
      type: object
    webitel.chat.Lookup:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    webitel.chat.MarkChatProcessedResponse:
      type: object
    webitel.chat.Message:
      description: Chat Message.
      properties:
        chat:
          $ref: '#/components/schemas/webitel.chat.Chat'
          description: Conversation the message belongs to ..
        context:
          additionalProperties:
            type: string
          description: Context. Variables. Environment.
          type: object
        date:
          description: Timestamp when this message was sent (published).
          format: int64
          type: string
        edit:
          description: Timestamp when this message was last edited.
          format: int64
          type: string
        file:
          $ref: '#/components/schemas/webitel.chat.File'
          description: Message Media. Attachment.
        from:
          $ref: '#/components/schemas/webitel.chat.Peer'
          description: Sender of the message.
        id:
          description: Unique message identifier inside this chat.
          format: int64
          type: string
        keyboard:
          $ref: '#/components/schemas/webitel.chat.ReplyMarkup'
          description: Keyboard. Buttons. Quick Replies.
        postback:
          $ref: '#/components/schemas/webitel.chat.Postback'
          description: 'Postback. Reply Button Click[ed].'
        sender:
          $ref: '#/components/schemas/webitel.chat.Chat'
          description: 'Chat Sender of the message, sent on behalf of a chat (member).'
        text:
          description: Message Text.
          type: string
      type: object
    webitel.chat.MessageButton:
      properties:
        code:
          description: Postback/Callback data.
          type: string
        share:
          $ref: '#/components/schemas/webitel.chat.MessageButton.Request'
          description: Request to share contact info.
        text:
          description: Caption to display.
          type: string
        url:
          description: URL to navigate to ..
          type: string
      type: object
    webitel.chat.MessageButton.Request:
      default: phone
      description: |-
        - phone: Phone Number
         - email: Email Address
         - contact: General Form
         - location: Current Location
      enum:
        - phone
        - email
        - contact
        - location
      title: Type of request to share contact info
      type: string
    webitel.chat.MessageButtonRow:
      properties:
        row:
          items:
            $ref: '#/components/schemas/webitel.chat.MessageButton'
            type: object
          title: Button(s) in a row
          type: array
      type: object
    webitel.chat.MessageFile:
      description: Media File.
      properties:
        id:
          title: File location
          type: string
        name:
          title: Filename
          type: string
        size:
          format: int64
          title: Size in bytes
          type: string
        type:
          title: MIME media type
          type: string
        url:
          title: Exact url of file (if exists)
          type: string
      type: object
    webitel.chat.MessagePostback:
      description: 'Postback. Reply Button Click[ed].'
      properties:
        code:
          description: Data associated with the Button.
          type: string
        mid:
          description: Message ID of the button.
          format: int64
          type: string
        text:
          description: Button's display caption.
          type: string
      type: object
    webitel.chat.MessageReplyMarkup:
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/webitel.chat.MessageButtonRow'
            type: object
          title: Markup of button(s)
          type: array
        no_input:
          description: |-
            An option used to block input to force
            the user to respond with one of the buttons.
          type: boolean
      type: object
    webitel.chat.Peer:
      description: Peer contact.
      properties:
        id:
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          type: string
        name:
          description: Contact display **name**.
          type: string
        type:
          description: Contact **type** provider.
          type: string
      type: object
    webitel.chat.Postback:
      description: 'Postback. Reply Button Click[ed].'
      properties:
        code:
          description: Data associated with the Button.
          type: string
        mid:
          description: Message ID of the button.
          format: int64
          type: string
        text:
          description: Button's display caption.
          type: string
      type: object
    webitel.chat.ReplyMarkup:
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/webitel.chat.ButtonRow'
            type: object
          title: Markup of button(s)
          type: array
        no_input:
          description: |-
            An option used to block input to force
            the user to respond with one of the buttons.
          type: boolean
      type: object
    webitel.chat.Timerange:
      description: Timerange filter value.
      properties:
        since:
          description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          format: int64
          type: string
        until:
          description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          format: int64
          type: string
      type: object
    webitel.contacts.AccessMode:
      default: READ
      enum:
        - READ
        - WRITE
        - DELETE
      title: |-
        - READ: Can `fetch` record. [GET]
         - WRITE: Can `update` record. [PUT|PATCH]
         - DELETE: Can `delete` record. [DELETE]
      type: string
    webitel.contacts.AddContactsToGroupRequest:
      description: Request message for adding contacts to a group.
      properties:
        contact_ids:
          description: List of contact IDs to add to the group.
          items:
            format: int64
            type: string
          type: array
        group_ids:
          description: The unique ID of the group.
          items:
            format: int64
            type: string
          type: array
      type: object
    webitel.contacts.Attachment:
      properties:
        id:
          format: int64
          type: string
        mime:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        url:
          type: string
      type: object
    webitel.contacts.CallEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        files:
          items:
            $ref: '#/components/schemas/webitel.contacts.CallFile'
            type: object
          type: array
        flow_scheme:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        gateway:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        total_duration:
          format: int64
          type: string
        transcripts:
          items:
            $ref: '#/components/schemas/webitel.contacts.TranscriptLookup'
            type: object
          type: array
      type: object
    webitel.contacts.CallFile:
      properties:
        id:
          format: int64
          type: string
        mime_type:
          type: string
        name:
          type: string
        size:
          format: int64
          type: string
        start_at:
          format: int64
          type: string
        stop_at:
          format: int64
          type: string
      type: object
    webitel.contacts.ChatEvent:
      properties:
        closed_at:
          format: int64
          type: string
        duration:
          format: int64
          type: string
        flow_scheme:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        gateway:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          type: string
        is_detailed:
          type: boolean
        is_inbound:
          type: boolean
        is_missed:
          type: boolean
        participants:
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
          type: array
        queue:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      type: object
    webitel.contacts.Comment:
      example:
        created_at: '1680268507698'
        created_by:
          id: '34'
          name: John Doe
        etag: FqaTCDLbhpaoUreL
        id: '354'
        text: This is a new note about the contact's recent activity. So ...
        updated_at: '1680268507698'
        updated_by:
          id: '34'
          name: John Doe
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        format:
          description: Styles of the text components.
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment.Format'
            type: object
          type: array
        id:
          description: The unique ID of the Comment. Never changes.
          type: string
        text:
          description: 'Rich Text, multi-line[d] string value.'
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      title: |-
        The Contact's internal Comment.
        Output purpose only
      type: object
    webitel.contacts.Comment.Format:
      properties:
        bold:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Bold'
        codeblock:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Codeblock'
        italic:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Italic'
        length:
          description: Length text runes count.
          format: int32
          type: integer
        link:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Link'
        monospace:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Monospace'
        offset:
          description: Offset text runes count.
          format: int32
          type: integer
        strikethrough:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Strikethrough'
        underline:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Underline'
      type: object
    webitel.contacts.Comment.Format.Bold:
      type: object
    webitel.contacts.Comment.Format.Codeblock:
      properties:
        language:
          type: string
      type: object
    webitel.contacts.Comment.Format.Italic:
      type: object
    webitel.contacts.Comment.Format.Link:
      properties:
        url:
          title: >-
            REQUIRED. If text[offset:length] is a regular plaintext, NOT an URL
            itself !
          type: string
      type: object
    webitel.contacts.Comment.Format.Monospace:
      type: object
    webitel.contacts.Comment.Format.Strikethrough:
      type: object
    webitel.contacts.Comment.Format.Underline:
      type: object
    webitel.contacts.CommentList:
      description: Comment dataset.
      example:
        data:
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '354'
            text: This is a new note about the contact's recent activity. So ...
            updated_at: '1680516785357'
            updated_by:
              id: '34'
              name: John Doe
          - created_at: '1680268537698'
            created_by:
              id: '56'
              name: Bruce Wayne
            etag: FZiTxVgr41VPFxyu
            id: '357'
            text: This contact may become a customer in a few days
            updated_at: '1680268563357'
            updated_by:
              name: Jane Lee (deleted)
            ver: '4'
        next: true
        page: 1
      properties:
        data:
          description: Comment dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.Condition:
      properties:
        assignee:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the assignee that should be assigned if the condition is
            met (optional).
        created_at:
          description: The timestamp (in milliseconds) of when the condition was created.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who created this condition.
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the static group that should be assigned if the condition
            is met.
        id:
          description: The unique ID of the condition.
          format: int64
          type: string
        updated_at:
          description: The timestamp (in milliseconds) of the last update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed the last update.
      title: Condition
      type: object
    webitel.contacts.ConditionList:
      description: A list of Conditions.
      properties:
        items:
          description: List of conditions.
          items:
            $ref: '#/components/schemas/webitel.contacts.Condition'
            type: object
          type: array
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.Contact:
      description: |-
        The Contact principal source.
        OUTPUT purpose only.
      properties:
        about:
          description: |-
            BIO. Short description about the Contact person.
            OPTIONAL. Multi-lined text.
          type: string
        comments:
          $ref: '#/components/schemas/webitel.contacts.CommentList'
          description: The Contact's internal comment(s).
        created_at:
          format: int64
          title: unix
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user
        custom:
          description: Custom extension data fields.
          type: object
        domain:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: READONLY. The contact's metadata.
        emails:
          $ref: '#/components/schemas/webitel.contacts.EmailList'
          description: The Contact's email address(es).
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        groups:
          $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
          description: The Contact's associated group(s).
        id:
          description: The unique ID of the association. Never changes.
          type: string
        imclients:
          $ref: '#/components/schemas/webitel.contacts.IMClientList'
          description: 'The contact''s [I]nstant[M]essaging clients.'
        labels:
          $ref: '#/components/schemas/webitel.contacts.LabelList'
          description: The Contact's associated tag(s).
        languages:
          $ref: '#/components/schemas/webitel.contacts.LanguageList'
          description: A Contact's locale preference(s).
        managers:
          $ref: '#/components/schemas/webitel.contacts.ManagerList'
          description: The Contact's internal manager(s).
        mode:
          description: '[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'
          type: string
        name:
          $ref: '#/components/schemas/webitel.contacts.Name'
          description: |-
            The Contact's name.
            This field is a singleton for Contact sources.
        phones:
          $ref: '#/components/schemas/webitel.contacts.PhoneList'
          description: The Contact's phone numbers.
        photos:
          $ref: '#/components/schemas/webitel.contacts.PhotoList'
          description: Output only. The Contact's photo(s).
          readOnly: true
        timezones:
          $ref: '#/components/schemas/webitel.contacts.TimezoneList'
          description: The Contact's timezone preference(s).
        updated_at:
          format: int64
          title: unix
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user
        user:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user connected to the contact
        variables:
          $ref: '#/components/schemas/webitel.contacts.VariableList'
          description: |-
            Arbitrary client data that is populated by clients.
            Duplicate keys and values are allowed.
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.ContactGroup:
      description: The Contact's Group association.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Group of contacts associated.
        id:
          description: The unique ID of the association. Never changes.
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.ContactGroupList:
      description: |-
        Contact groups dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactGroupList.data are always subordinate to some contact.id.
      properties:
        data:
          description: Group dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.ContactGroup'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.ContactList:
      description: Contact dataset.
      properties:
        data:
          description: Contact(s) dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Contact'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.CreateDynamicGroupRequest:
      description: Request message for creating a new dynamic group.
      properties:
        condition:
          description: Input details for the dynamic group.
          items:
            $ref: '#/components/schemas/webitel.contacts.InputDynamicCondition'
            type: object
          type: array
        default_group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Default static group to assign if no conditions are met.
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the dynamic group: active/inactive.'
          type: boolean
        name:
          description: The name of the dynamic group.
          type: string
      required:
        - name
      type: object
    webitel.contacts.CreateGroupRequest:
      description: Request message for creating a new group.
      properties:
        description:
          description: The description of the group.
          type: string
        enabled:
          description: The enabled status of the group.
          type: boolean
        name:
          description: The name of the group.
          type: string
      required:
        - name
      type: object
    webitel.contacts.DayTimeline:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          type: string
        day_timestamp:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
        items:
          items:
            $ref: '#/components/schemas/webitel.contacts.Event'
            type: object
          type: array
      type: object
    webitel.contacts.DynamicCondition:
      properties:
        assignee:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the assignee that should be assigned if the condition is
            met (optional).
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the static group that should be assigned if the condition
            is met.
        id:
          description: The unique ID of the condition.
          format: int64
          type: string
      title: Dynamic Group condition
      type: object
    webitel.contacts.DynamicConditions.CreateConditionBody:
      description: Request message for creating a new condition.
      properties:
        assignee:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the assignee that should be assigned if the condition is
            met (optional).
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the static group that should be assigned if the condition
            is met.
      type: object
    webitel.contacts.DynamicGroup:
      properties:
        conditions:
          description: List of dynamic conditions associated with the group.
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicCondition'
            type: object
          type: array
        created_at:
          description: Timestamp(milli) of the group's creation.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who created this dynamic group.
        default_group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Default static group to be assigned if no conditions are met.
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the group: active or inactive.'
          type: boolean
        id:
          description: The unique ID of the dynamic group. Never changes.
          format: int64
          type: string
        name:
          description: The name of the dynamic group.
          type: string
        updated_at:
          description: Timestamp(milli) of the last group update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed the last update.
      title: Dynamic Group
      type: object
    webitel.contacts.DynamicGroupInput:
      description: Input message for creating/updating a dynamic group.
      properties:
        default_group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Default static group to assign if no conditions are met.
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the dynamic group: active/inactive.'
          type: boolean
        name:
          description: The name of the dynamic group.
          type: string
      type: object
    webitel.contacts.DynamicGroupList:
      description: A list of Dynamic Groups.
      properties:
        items:
          description: List of dynamic groups.
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
            type: object
          type: array
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.EmailAddress:
      description: The Contact's email address.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        email:
          description: The email address.
          type: string
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: >-
            Indicates whether this phone number is default within other channels
            of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the email address.
            Lookup value from CommunicationType dictionary.
            The type can be custom or one of these predefined values:
            - home
            - work
            - other
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
        verified:
          title: >-
            Indicate whether Contact, as a Person, realy owns this associated
            phone number.

            In other words: whether Contact is reachable thru this 'email'
            communication channel ?
          type: boolean
      type: object
    webitel.contacts.EmailEvent:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/webitel.contacts.Attachment'
            type: object
          type: array
        body:
          title: plain text of email
          type: string
        cc:
          items:
            type: string
          title: array of ccs (email addresses)
          type: array
        from:
          items:
            type: string
          title: array of senders (email addresses)
          type: array
        html:
          title: html body of email
          type: string
        id:
          type: string
        is_detailed:
          title: reserved for the open
          type: boolean
        is_inbound:
          title: inbound/outbound email
          type: boolean
        owner:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: Agent who sent/accepted
        profile:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: email profile
        sender:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
        subject:
          type: string
        to:
          items:
            type: string
          title: array of receivers (email addresses)
          type: array
      type: object
    webitel.contacts.EmailList:
      description: Email dataset.
      properties:
        data:
          description: EmailAddress dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.EmailAddress'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.EmptyResponse:
      type: object
    webitel.contacts.Event:
      properties:
        call:
          $ref: '#/components/schemas/webitel.contacts.CallEvent'
        chat:
          $ref: '#/components/schemas/webitel.contacts.ChatEvent'
        created_at:
          format: int64
          type: string
        email:
          $ref: '#/components/schemas/webitel.contacts.EmailEvent'
        type:
          $ref: '#/components/schemas/webitel.contacts.TimelineEventType'
      type: object
    webitel.contacts.GetTimelineCounterResponse:
      properties:
        calls_count:
          format: int64
          type: string
        chats_count:
          format: int64
          title: defined event types
          type: string
        date_from:
          format: int64
          title: filter dates
          type: string
        date_to:
          format: int64
          type: string
        emails_count:
          format: int64
          type: string
      type: object
    webitel.contacts.GetTimelineResponse:
      properties:
        days:
          items:
            $ref: '#/components/schemas/webitel.contacts.DayTimeline'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int64
          type: string
      type: object
    webitel.contacts.Group:
      properties:
        conditions:
          description: List of dynamic conditions associated with the group.
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicCondition'
            type: object
          type: array
        contactsSize:
          format: int64
          type: string
        created_at:
          description: Timestamp(milli) of the group's creation.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who created this group.
        default_group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Default static group to be assigned if no conditions are met.
        description:
          description: The description of the group.
          type: string
        enabled:
          type: boolean
        id:
          description: The unique ID of the group. Never changes.
          type: string
        name:
          description: The name of the group.
          type: string
        type:
          $ref: '#/components/schemas/webitel.contacts.GroupType'
          title: type ( Dynamic / Static )
        updated_at:
          description: Timestamp(milli) of the last group update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed the last update.
      title: Group of Contacts
      type: object
    webitel.contacts.GroupList:
      description: A list of Groups.
      properties:
        items:
          description: List of groups.
          items:
            $ref: '#/components/schemas/webitel.contacts.Group'
            type: object
          type: array
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.GroupType:
      default: GROUP_TYPE_UNSPECIFIED
      description: |-
        - GROUP_TYPE_UNSPECIFIED: Default value
         - STATIC: Static group
         - DYNAMIC: Dynamic group
      enum:
        - GROUP_TYPE_UNSPECIFIED
        - STATIC
        - DYNAMIC
      title: Enum for Group Type
      type: string
    webitel.contacts.IMClient:
      description: 'A contact''s [I]nstant[M]essaging client.'
      properties:
        app:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: |-
            App (Text-Gateway) used to connect the IM client.
            Id will be internal id of gateway.
            Name will be name of the gateway.
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        protocol:
          description: Protocol used to connect the IM client.
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        user:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: |-
            External user which contacted to us.
            Id will be from external service.
            Name will be from external service.
          example:
            id: '596417343'
            name: John Doe
            type: telegram
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
        via:
          description: '[Via] App(-specific) peer(-id) to connect[from] the IM client.'
          type: string
      type: object
    webitel.contacts.IMClientList:
      properties:
        data:
          description: IMClient dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.IMClient'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.InputComment:
      example:
        text: This is a new note about the contact's recent activity. So ...
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        format:
          description: NEW Text components styling format.
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment.Format'
            type: object
          type: array
        text:
          description: NEW Text of the comment.
          type: string
      required:
        - text
      type: object
    webitel.contacts.InputCondition:
      description: Input message for creating/updating a condition.
      properties:
        assignee:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the assignee that should be assigned if the condition is
            met (optional).
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the static group that should be assigned if the condition
            is met.
        position:
          $ref: '#/components/schemas/webitel.contacts.Position'
          description: The position of the condition in the group.
      type: object
    webitel.contacts.InputContact:
      description: The Contact principal input.
      properties:
        about:
          description: |-
            BIO. Short description about the Contact person.
            OPTIONAL. Multi-lined text.
          type: string
        comments:
          description: Publish NEW comment(s) for this Contact.
          items:
            $ref: '#/components/schemas/webitel.contacts.InputComment'
            type: object
          type: array
        custom:
          description: Custom extension data fields.
          type: object
        emails:
          description: The Contact's email address(es).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
            type: object
          type: array
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        groups:
          description: The Contact's associated group(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
            type: object
          type: array
        imclients:
          description: 'The contact''s [I]nstant[M]essaging clients.'
          items:
            $ref: '#/components/schemas/webitel.contacts.InputIMClient'
            type: object
          type: array
        labels:
          description: The Contact's associated label(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputLabel'
            type: object
          type: array
        languages:
          description: A Contact's locale preference(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputLanguage'
            type: object
          type: array
        managers:
          description: The Contact's internal manager(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputManager'
            type: object
          type: array
        name:
          $ref: '#/components/schemas/webitel.contacts.InputName'
          title: The Contact's name. Singleton
        phones:
          description: The Contact's phone numbers.
          items:
            $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
            type: object
          type: array
        photos:
          description: Output only. The Contact's photo(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputPhoto'
            type: object
          readOnly: true
          type: array
        timezones:
          description: The Contact's timezone preference(s).
          items:
            $ref: '#/components/schemas/webitel.contacts.InputTimezone'
            type: object
          type: array
        variables:
          description: Arbitrary client data that is populated by clients.
          items:
            $ref: '#/components/schemas/webitel.contacts.InputVariable'
            type: object
          type: array
      type: object
    webitel.contacts.InputContactGroup:
      description: An input of the Contact's groups.
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Group of contacts associated.
      required:
        - etag
      type: object
    webitel.contacts.InputDynamicCondition:
      properties:
        assignee:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the assignee that should be assigned if the condition is
            met (optional).
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: >-
            The ID of the static group that should be assigned if the condition
            is met.
      title: Dynamic Group condition
      type: object
    webitel.contacts.InputEmailAddress:
      description: Input of the Contact's email address.
      example:
        email: user@domain
        etag: '1679792219687'
        primary: true
        type:
          name: personal
        verified: false
      properties:
        email:
          description: The email address.
          type: string
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        primary:
          description: >-
            Indicates whether this phone number is default within other channels
            of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the email address.
            Lookup value from CommunicationType dictionary.
            The type can be custom or one of these predefined values:
            - home
            - work
            - other
        verified:
          title: >-
            Indicate whether Contact, as a Person, realy owns this associated
            phone number.

            In other words: whether Contact is reachable thru this 'email'
            communication channel ?
          type: boolean
      required:
        - email
      type: object
    webitel.contacts.InputGroup:
      properties:
        description:
          description: The new description of the group.
          type: string
        enabled:
          description: The new enabled status of the group.
          type: boolean
        name:
          description: The new name of the group.
          type: string
      title: Input message for creating/updating a group
      type: object
    webitel.contacts.InputIMClient:
      description: Input of the contact IM client.
      properties:
        created_by:
          description: Id of Agent created this IM client.
          type: string
        external_user:
          title: External user id
          type: string
        gateway_id:
          description: App (Text-Gateway) used to connect the IM client.
          type: string
        protocol:
          type: string
        via:
          description: '[Via] App(-specific) peer(-id) to connect[from] the IM client.'
          type: string
      type: object
    webitel.contacts.InputLabel:
      description: |-
        A Contact's associated Tag.
        Output purpose only.
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        label:
          description: |-
            REQUIRED. Hashtag value;
            NOTE: Keep in mind, hashtags are not case-sensitive,
            but adding capital letters does make them easier to read:
            #MakeAWish vs. #makeawish.
          type: string
      required:
        - tag
      type: object
    webitel.contacts.InputLanguage:
      description: An input of the Contact's language.
      example:
        primary: false
        tag: uk
      properties:
        etag:
          description: Unique ID of the latest version of an existing association.
          type: string
        primary:
          description: |-
            Indicates whether this association must be default
            among others of the same type.
          type: boolean
        tag:
          title: |-
            NEW, well-formed IETF BCP 47 language tag representing the locale.
            https://www.rfc-editor.org/info/bcp47
          type: string
      required:
        - etag
      type: object
    webitel.contacts.InputManager:
      example:
        primary: true
        user:
          id: '357'
          name: Bruce Wayne
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        primary:
          description: Indicates whether this association must be default among others.
          type: boolean
        user:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Responsible User.
      required:
        - etag
      type: object
    webitel.contacts.InputName:
      properties:
        common_name:
          description: |-
            REQUIRED. End-User's full name in displayable form
            including all name parts, possibly including titles and suffixes,
            ordered according to the End-User's locale and preferences.
          type: string
        family_name:
          title: >-
            OPTIONAL. Surname(s) or last name(s) of the End-User.

            Note that in some cultures, people can have multiple family names or
            no family name;

            all can be present, with the names being separated by space
            characters.

            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            #family_name
          type: string
        given_name:
          title: >-
            OPTIONAL. Given name(s) or first name(s) of the End-User.

            Note that in some cultures, people can have multiple given names;

            all can be present, with the names being separated by space
            characters.

            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            #given_name
          type: string
        middle_name:
          description: >-
            OPTIONAL. Middle name(s) of the End-User.

            Note that in some cultures, people can have multiple middle names;

            all can be present, with the names being separated by space
            characters.

            Also note that in some cultures, middle names are not used.
          type: string
        verified:
          description: >-
            Indicate whether Contact, as a Person, realy owns this associated
            name.
          type: boolean
      type: object
    webitel.contacts.InputPhoneNumber:
      description: Input of the contact phone number.
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        number:
          description: The phone number.
          type: string
        primary:
          description: >-
            Indicates whether this phone number is default within other channels
            of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the phone number.
            Reference on CommunicationType dictionary.
            Used for outbound routing while dialup a phone number.
            The type can be custom or one of these predefined values:
            - home
            - work
            - mobile
            - homeFax
            - workFax
            - otherFax
            - pager
            - workMobile
            - workPager
            - main
            - googleVoice
            - other
        verified:
          title: >-
            Indicate whether Contact, as a Person, realy owns this associated
            phone number.

            In other words: whether Contact is reachable thru this 'phone'
            communication channel ?
          type: boolean
      required:
        - number
      type: object
    webitel.contacts.InputPhoto:
      description: Input of the photo.
      properties:
        etag:
          description: Unique ID of the latest version of an existing association.
          type: string
        photo_id:
          format: int64
          title: File unique ID within 'storage' service
          type: string
        photo_url:
          title: >-
            The URL of the photo.

            You can change the desired size by appending

            a query parameter sz={size} at the end of the url,

            where {size} is the size in pixels.

            Example:
            https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50
          type: string
        primary:
          description: >-
            True if the photo is a default photo; false if the photo is a
            user-provided photo.
          type: boolean
      required:
        - file_url
      type: object
    webitel.contacts.InputTimezone:
      description: An input of the Contact's timezones.
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        primary:
          description: Indicates whether this association must be default among others.
          type: boolean
        timezone:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timezone dictionary reference value associated.
      required:
        - etag
      type: object
    webitel.contacts.InputVariable:
      description: Input of the Contact's variable.
      example:
        key: var_rename
        value:
          - string_item
          - - 3
            - 7
          - false
          - null
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        key:
          description: NEW Key.
          pattern: ^\w+$
          type: string
        value:
          description: NEW Value.
      required:
        - key
      type: object
    webitel.contacts.Label:
      description: |-
        A Contact's associated Tag.
        Output purpose only.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        label:
          description: |-
            REQUIRED. Tag value;
            NOTE: Keep in mind, hashtags are not case-sensitive,
            but adding capital letters does make them easier to read:
            #MakeAWish vs. #makeawish.
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.LabelInfo:
      properties:
        label:
          description: |-
            Label tag.

            Count of sources.
            int32 count = 2;
             Sources of Contacts assigned.
            repeated string sources = 3;
          type: string
      title: LabelInfo about the Label's tag
      type: object
    webitel.contacts.LabelList:
      description: |-
        LabelList dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactLabels.data are always subordinate to some contact.id.
      properties:
        data:
          description: Label(s) dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Label'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: Page number of partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.LabelTags:
      description: LabelTags dataset list of label's info.
      properties:
        labels:
          items:
            $ref: '#/components/schemas/webitel.contacts.LabelInfo'
            type: object
          title: Labels info dataset
          type: array
        next:
          title: Next page available ?
          type: boolean
        page:
          description: Page number of partial result.
          format: int32
          type: integer
        sources:
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
          title: Contact sources dataset
          type: array
      type: object
    webitel.contacts.Language:
      description: |-
        A Contact's locale preference.
        Output purpose only.
      properties:
        code:
          title: uk              ; golang.org/x/text/language.MustParse(s).Base()
          type: string
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        lang:
          title: >-
            Ukrainian       ;
            golang.org/x/text/language/display.English.Languages().Name(tag)
          type: string
        name:
          title: >-
            українська      ;
            golang.org/x/text/language/display.Self().Name(tag)
          type: string
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        region:
          title: UA              ; golang.org/x/text/language.MustParse(s).Region()
          type: string
        script:
          title: Cyrl; (Cyrillic); golang.org/x/text/language.MustParse(s).Script()
          type: string
        tag:
          title: |-
            The well-formed IETF BCP 47 language tag representing the locale.
            https://www.rfc-editor.org/info/bcp47
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.LanguageList:
      description: |-
        LabelsData
        NOTE: Edge represents connection between two nodes.
        So this ContactLabels.data are always subordinate to some contact.id.
      example:
        data:
          - code: uk
            created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '7'
            lang: Ukrainian
            name: українська
            primary: true
            region: UA
            script: Cyrl
            tag: uk-UA
            updated_at: '1680516785357'
            updated_by:
              name: Jane Lee (deleted)
            ver: '3'
        next: true
        page: 1
      properties:
        data:
          description: Page of the Contact's Language(s) dataset.
          items:
            $ref: '#/components/schemas/webitel.contacts.Language'
            type: object
          type: array
        next:
          title: >-
            Next indicate whether there are more result records(page+)
            available.

            If set - next page is available with query
            ?size=$(data.length)&page=$(page++)
          type: boolean
        page:
          description: Page number of partial result dataset records.
          format: int32
          type: integer
      type: object
    webitel.contacts.LocateConditionResponse:
      description: Response message for locating a condition by ID.
      properties:
        condition:
          $ref: '#/components/schemas/webitel.contacts.Condition'
      type: object
    webitel.contacts.LocateDynamicGroupResponse:
      description: Response message for locating a dynamic group by ID.
      properties:
        group:
          $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
      type: object
    webitel.contacts.LocateGroupResponse:
      description: Response message for locating a group.
      properties:
        group:
          $ref: '#/components/schemas/webitel.contacts.Group'
          description: The located group.
      type: object
    webitel.contacts.Lookup:
      description: |-
        Lookup reference information.
        Simplified search filter to uniquely identify related object.
      properties:
        id:
          description: Reference Object unique ID.
          type: string
        name:
          description: Reference Object display name.
          type: string
        type:
          description: Reference Object well-known type.
          type: string
      type: object
    webitel.contacts.Manager:
      description: Manager. The Contact's responsible User.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        user:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Responsible User.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.ManagerList:
      description: Manager dataset.
      properties:
        data:
          description: Manager dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Manager'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.Name:
      description: |-
        A contact's name.
        If the name is a mononym, the family name is empty.

        Inspired:
        https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
        https://developers.google.com/people/api/rest/v1/people#name
      properties:
        common_name:
          description: |-
            REQUIRED. End-User's full name in displayable form
            including all name parts, possibly including titles and suffixes,
            ordered according to the End-User's locale and preferences.
          type: string
        family_name:
          title: >-
            OPTIONAL. Surname(s) or last name(s) of the End-User.

            Note that in some cultures, people can have multiple family names or
            no family name;

            all can be present, with the names being separated by space
            characters.

            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            #family_name
          type: string
        given_name:
          title: >-
            OPTIONAL. Given name(s) or first name(s) of the End-User.

            Note that in some cultures, people can have multiple given names;

            all can be present, with the names being separated by space
            characters.

            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            #given_name
          type: string
        middle_name:
          description: >-
            OPTIONAL. Middle name(s) of the End-User.

            Note that in some cultures, people can have multiple middle names;

            all can be present, with the names being separated by space
            characters.

            Also note that in some cultures, middle names are not used.
          type: string
        verified:
          description: >-
            Indicate whether Contact, as a Person, realy owns this associated
            name.
          type: boolean
      type: object
    webitel.contacts.PhoneList:
      description: PhoneNumber dataset.
      properties:
        data:
          description: PhoneNumber dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.PhoneNumber:
      description: The Contact's phone number.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        number:
          description: The phone number.
          type: string
        primary:
          description: >-
            Indicates whether this phone number is default within other channels
            of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the phone number.
            Reference on CommunicationType dictionary.
            Used for outbound routing while dialup a phone number.
            The type can be custom or one of these predefined values:
            - home
            - work
            - mobile
            - homeFax
            - workFax
            - otherFax
            - pager
            - workMobile
            - workPager
            - main
            - googleVoice
            - other
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
        verified:
          title: >-
            Indicate whether Contact, as a Person, realy owns this associated
            phone number.

            In other words: whether Contact is reachable thru this 'phone'
            communication channel ?
          type: boolean
      type: object
    webitel.contacts.Photo:
      description: |-
        A contact's photo.
        A picture shown next to the contact's name
        to help others recognize the contact.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        photo_id:
          format: int64
          title: File unique ID within 'storage' service
          type: string
        photo_url:
          title: >-
            The URL of the photo.

            You can change the desired size by appending

            a query parameter sz={size} at the end of the url,

            where {size} is the size in pixels.

            Example:
            https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50
          type: string
        primary:
          description: >-
            True if the photo is a default photo; false if the photo is a
            user-provided photo.
          type: boolean
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.PhotoList:
      description: Photo dataset.
      properties:
        data:
          description: Photo dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Photo'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.Position:
      description: Position details for conditions in the group.
      properties:
        cond_down:
          format: int64
          title: >-
            The target position where the condition should be moved.

            if we set last (n) index position -- set only cond_down -- cond_up
            should be ZERO
          type: string
        cond_up:
          format: int64
          title: >-
            The current position of the condition in the list.

            if we set zero (0) index position -- set only cond_up -- cond_down
            should be ZERO
          type: string
      type: object
    webitel.contacts.TimelineEventType:
      default: chat
      enum:
        - chat
        - call
        - email
      type: string
    webitel.contacts.Timezone:
      description: A Contact's timezone preference.
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        timezone:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timezone dictionary reference value associated.
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.TimezoneList:
      description: |-
        Timezone dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactTimezones.data are always subordinate to some contact.id.
      properties:
        data:
          description: Timezone dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Timezone'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.contacts.TranscriptLookup:
      properties:
        file:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          format: int64
          type: string
        locale:
          type: string
      type: object
    webitel.contacts.Variable:
      description: |-
        The Contact's variable.
        Arbitrary data that is populated by users or clients.
        Duplicate keys and values are allowed.
      example:
        created_at: '1680268507698'
        created_by:
          id: '34'
          name: John Doe
        etag: FqaTCDLbhpaoUreL
        id: '6'
        key: var_complex
        updated_at: '1680516785357'
        updated_by:
          name: Ja Lee (deleted)
        value:
          inner_var: null
          value_arr:
            - string
            - - null
            - false
            - 1
        ver: '2'
      properties:
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        key:
          description: Key name of the variable.
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          description: The user who performed last Update.
        value:
          description: JSON value of the variable.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.contacts.VariableList:
      description: Variable dataset.
      example:
        data:
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '4'
            key: my_string
            updated_at: '1680268507698'
            updated_by:
              id: '34'
              name: John Doe
            value: string_value
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: ogTsuZAIA1CcEZGC
            id: '6'
            key: var_complex
            updated_at: '1680516785357'
            updated_by:
              name: Ja Lee (deleted)
            value:
              inner_var: null
              value_arr:
                - string
                - - null
                - false
                - 1
            ver: '2'
        next: true
        page: 1
      properties:
        data:
          description: Variable dataset page.
          items:
            $ref: '#/components/schemas/webitel.contacts.Variable'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.Article:
      properties:
        tags:
          description: Tags associated with the article.
          items:
            type: string
          type: array
        created_at:
          description: The user who created this Field.
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: Timestamp(milli) of the Field creation.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        has_children:
          description: Indicates that the article has children.
          type: boolean
        id:
          description: The unique ID of the association. Never changes.
          type: string
        parent_article:
          description: The parent article ID.
          format: int64
          type: string
        pinned:
          description: Indicates that the article is pinned on the top of list.
          type: boolean
        space_id:
          description: Space ID associated with.
          format: int64
          type: string
        state:
          description: Indicates the state of the article.
          type: boolean
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
        updated_at:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: The user who performed last Update.
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.ArticleList:
      description: |-
        Article dataset.
        NOTE: Edge represents connection between two nodes.
        So this spaceArticles.data are always subordinate to some space.id.
      properties:
        data:
          description: Article dataset page.
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Article'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.ArticleVersion:
      properties:
        tags:
          description: Tags associated with the article.
          items:
            type: string
          type: array
        id:
          description: The unique ID of the association. Never changes.
          type: string
        parent_article:
          description: The parent article ID.
          format: int64
          type: string
        space_id:
          description: Space ID associated with.
          format: int64
          type: string
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
        updated_at:
          description: Timestamp(milli) of the last Field update.
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: The user who loaded this attachment.
        ver:
          description: Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.ArticleVersionList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersion'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.Attachment:
      properties:
        id:
          description: The unique ID of the association. Never changes.
          type: string
        size:
          description: The size of the attachment.
          format: int32
          type: integer
        title:
          description: The title of the article.
          type: string
        uploaded_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: The user who loaded this attachment.
      type: object
    webitel.knowledgebase.AttachmentList:
      properties:
        data:
          description: Attachment dataset page.
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Attachment'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.Combined:
      properties:
        id:
          title: Id of the record (article or space)
          type: string
        name:
          title: Display name of the record (article or space)
          type: string
        type:
          title: 'Type of the record: article/space'
          type: string
      type: object
    webitel.knowledgebase.CombinedList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Combined'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.InputArticle:
      description: An input of the Space's Articles.
      properties:
        tags:
          description: Tags associated with the article.
          items:
            type: string
          type: array
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        parent_article:
          description: The parent article ID.
          format: int64
          type: string
        pinned:
          description: Indicates that the article is pinned on the top of list.
          type: boolean
        space_id:
          description: |-
            [VALUE]: --------------------------------------
            Space ID associated with.
          format: int64
          type: string
        state:
          description: Indicates if article is active and actual.
          type: boolean
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
      required:
        - etag
      type: object
    webitel.knowledgebase.InputSpace:
      description: The Space principal input.
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        home_page:
          description: |-
            BIO. Short description about the space.
            OPTIONAL. Multi-lined text.
          type: string
        name:
          description: Represents the name of the knowledge base space.
          type: string
        state:
          description: The state of the space.
          type: boolean
      type: object
    webitel.knowledgebase.Lookup:
      description: |-
        Lookup reference information.
        Simplified search filter to uniquely identify related object.
      properties:
        id:
          description: Reference Object unique ID.
          type: string
        name:
          description: Reference Object display name.
          type: string
        type:
          description: Reference Object well-known type.
          type: string
      type: object
    webitel.knowledgebase.Space:
      properties:
        created_at:
          description: The timestamp when the space was created (in Unix time).
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: The user who created the space.
        domain:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: READONLY. The space's metadata.
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        has_children:
          description: Indicates if the space has children.
          type: boolean
        home_page:
          description: BIO. Short description about the space.
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        mode:
          description: '[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'
          type: string
        name:
          description: The name of the space.
          type: string
        state:
          description: The state of the space.
          type: boolean
        updated_at:
          description: The timestamp when the space was last updated (in Unix time).
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
          description: The user who last updated the space.
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.SpaceList:
      properties:
        data:
          description: Space(s) dataset page.
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Space'
            type: object
          type: array
        next:
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
          type: boolean
        page:
          description: The page number of the partial result.
          format: int32
          type: integer
      type: object
    webitel.knowledgebase.Tag:
      properties:
        name:
          description: The name of the tag.
          type: string
      type: object
    webitel.knowledgebase.TagsList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Tag'
            type: object
          type: array
        next:
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    webitel.proto.data.Dataset:
      description: Dataset records page view.
      properties:
        data:
          description: List of the dataset page records.
          items:
            type: object
          type: array
        next:
          title: Next page available?
          type: boolean
        page:
          description: Current page number.
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/webitel.proto.data.Struct'
          description: Type of the dataset record.
      type: object
    webitel.proto.data.Field:
      description: Field of the struct.
      properties:
        always:
          description: >-
            Always signifies that the field value will be computed on any write
            (INSERT OR UPDATE) operations.

            The field cannot be written to, and when read the result of the last
            generated expression will be returned.


            The generation expression can refer to other columns in the table,
            but not other generated columns. Any functions and operators used
            must be immutable. References to other tables are not allowed.
          title: '[ ON INSERT OR UPDATE ]'
        binary:
          $ref: '#/components/schemas/webitel.proto.data.type.Binary'
        bool:
          $ref: '#/components/schemas/webitel.proto.data.type.Bool'
        datetime:
          $ref: '#/components/schemas/webitel.proto.data.type.Datetime'
        default:
          description: |-
            The `default` expression will be used in `INSERT` operation
            that does not specify a value for the field.

            If there is no default for a field, then the default is null.
          title: '[ ON INSERT ONLY ]'
        disabled:
          title: Optional. Disable data read operation. (selection)
          type: boolean
        duration:
          $ref: '#/components/schemas/webitel.proto.data.type.Duration'
        float:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        float32:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        float64:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        hidden:
          title: |-
            Is hidden (system) field ?
            Do NOT display on the `view` card ?
          type: boolean
        hint:
          description: 'Short description. Default: {name}.'
          type: string
        id:
          description: |-
            Field [code] name.

            code
          type: string
        int:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        int32:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        int64:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        kind:
          $ref: '#/components/schemas/webitel.proto.data.type.Kind'
          description: Required. The field type.
        lookup:
          $ref: '#/components/schemas/webitel.proto.data.type.Lookup'
        name:
          description: |-
            Title of the field. Lang specific.

            title
          type: string
        readonly:
          description: >-
            Optional. Disable any write (INSERT OR UPDATE) operations.

            READONLY signifies that the field value will be always computed on
            any write (INSERT OR UPDATE) operations.

            If selected, the `default` value MUST be specified.


            FIXME: Is base field ? [ id, created_, updated_ ]
          type: boolean
        required:
          title: Optional. Do NOT allow NULL values !
          type: boolean
        richtext:
          $ref: '#/components/schemas/webitel.proto.data.type.Text'
        string:
          $ref: '#/components/schemas/webitel.proto.data.type.Text'
        uint:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
        uint32:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
        uint64:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
      type: object
    webitel.proto.data.ImportCSVRequest.action:
      default: continue
      enum:
        - continue
        - break
      type: string
    webitel.proto.data.Index:
      description: 'INDEX [struct.fields].'
      properties:
        fields:
          description: 'A set of [struct.fields.id] to INDEX within [type] dataset.'
          items:
            type: string
          type: array
        include:
          description: 'A set of [struct.fields.id] to INCLUDE beside the [fields] index.'
          items:
            type: string
          type: array
        unique:
          description: 'Indicates whether set of [fields] MUST be UNIQUE within [type].'
          type: boolean
      type: object
    webitel.proto.data.InputDictionary:
      example:
        about: Dataset of countries we are working with ..
        display: name
        fields:
          - hint: +3(80)
            id: code
            int32:
              max: '9999'
              min: '10'
            kind: int32
            name: Code
          - hint: Country name
            id: name
            kind: string
            name: Country
            string:
              max: 64
          - id: capital
            kind: lookup
            lookup:
              id: name
              name: name
              type: dictionaries/cities
            name: Capital city
          - datetime:
              part: full
              time: s
            default: $(timestamp)
            id: created_at
            kind: datetime
            name: Creation Date
            readonly: true
          - default: $(user)
            id: created_by
            kind: lookup
            lookup:
              id: id
              name: name
              type: users
            name: Author
            readonly: true
          - always: $(timestamp)
            datetime:
              part: full
              time: s
            id: updated_at
            kind: datetime
            name: Last Modified
            readonly: true
          - always: $(user)
            id: updated_by
            kind: lookup
            lookup:
              type: users
            name: Editor
            readonly: true
        indexes:
          capital_city:
            fields:
              - capital
            unique: true
          code:
            unique: true
        name: Countries
        primary: code
        repo: countries
      properties:
        about:
          title: Short description
          type: string
        administered:
          title: Administer access control ? Enable RbAC ?
          type: boolean
        display:
          description: |-
            Required. Display [fields.id] key.
            Used as [lookup].name setting for this [struct] type.
          type: string
        fields:
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
          title: Fields definitions
          type: array
        indexes:
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
          description: INDEX fields.
          type: object
        name:
          description: 'A User-friendly [type.id] name ; lang: specific.'
          type: string
        primary:
          description: |-
            Required. Primary [fields.id] key.
            Used as [lookup].id setting for this [struct] type.
          type: string
        repo:
          description: |-
            string id = 1; // The [type] name (singular form), e.g.: `country`.

            Repository (dataset) name (plural form), e.g.: `countries`.
          type: string
      type: object
    webitel.proto.data.InputExtension:
      example:
        fields:
          - id: country
            kind: lookup
            lookup:
              id: code
              name: name
              type: /dictionaries/countries
            name: Country
          - id: city
            kind: lookup
            lookup:
              id: id
              name: name
              type: '/dictionaries/cities?code={country.code}'
            name: City
        indexes:
          city: {}
          country: {}
      properties:
        fields:
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
          title: Fields definitions
          type: array
        indices:
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
          title: INDEX Fields
          type: object
      type: object
    webitel.proto.data.LookupValue:
      properties:
        id:
          description: Required. Unique Identifier.
          type: string
        name:
          description: Readonly. Display name.
          type: string
        type:
          description: Optional. Reference type.
          type: string
      type: object
    webitel.proto.data.Struct:
      description: |-
        Type of the Structure.

        int64 dc = 0;
      properties:
        about:
          description: Optional. Short description.
          type: string
        administered:
          title: Administer access control ? Enable RbAC ?
          type: boolean
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/webitel.proto.data.LookupValue'
        display:
          description: |-
            Required. Display [fields.id] key.
            Used as [lookup].name setting for this [struct] type.
          type: string
        extendable:
          description: |-
            // Extension fields type.
             Extension extension = 23;
          title: Readonly. System- type(s) support only !
          type: boolean
        fields:
          description: Fields of the struct type.
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
          type: array
        id:
          description: >-
            Deprecated. Use `repo` instead. The [type] name (singular form),
            e.g.: `country`.
          type: string
        indexes:
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
          description: |-
            INDEX fields.

            Extension extension = 15;
          type: object
        name:
          description: 'A User-friendly [id] name ; lang: specific.'
          type: string
        objclass:
          description: Readonly. RbAC objclass identity.
          type: string
        path:
          description: >-
            Readonly. Relative path to access the dataset APIs, e.g.:
            `dictionaries/countries`.
          type: string
        primary:
          description: |-
            Required. Primary [fields.id] key.
            Used as [lookup].id setting for this [struct] type.
          type: string
        readonly:
          title: |-
            Readonly. Is [ system / custom ] type ?
            NOTE: Custom [types.repo] are always prefixed with `/dictionaries`
          type: boolean
        repo:
          description: 'Repository (dataset) name (plural form), e.g.: `countries`.'
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/webitel.proto.data.LookupValue'
      type: object
    webitel.proto.data.StructList:
      description: Dataset of structured types.
      properties:
        data:
          description: List of `Struct` types.
          items:
            $ref: '#/components/schemas/webitel.proto.data.Struct'
            type: object
          type: array
        next:
          title: Next page available ?
          type: boolean
        page:
          description: Page number of results.
          format: int32
          type: integer
      type: object
    webitel.proto.data.type.Binary:
      properties:
        max_bytes:
          format: int64
          type: integer
        violation:
          additionalProperties:
            type: string
          type: object
      type: object
    webitel.proto.data.type.Bool:
      title: no constraints
      type: object
    webitel.proto.data.type.Datetime:
      description: |-
        Datetime type settings.

        enum Part {
           full = 0; // date & time
           date = 1; // date only ; YYYY-MM-DD
           time = 2; // time only ; HH:mm:ss[.pres]
         }
         Part part = 1; // part of: [ date &| time ]
         enum Stamp {
           s  =  0; // seconds
           ms =  1; // [milli]seconds ; E+3
           mc =  2; // [micro]seconds ; E+6
           ns =  3; // [nano]seconds  ; E+9
           m  = -1; // minutes
           h  = -2; // hours
         }
         Stamp time = 2; // time precision
         string zone = 3; // ??? [ Europe/Kyiv | +03:00 ]
      properties:
        epoch:
          description: |-
            Epoch timestamp.
            If zero - UNIX epoch (1970-01-01 00:00:00) will be used.
          format: double
          type: number
        format:
          title: |-
            Display format.
            See [layouts](https://pkg.go.dev/time#pkg-constants) for details.
            Default: `Mon, 02 Jan 2006 15:04:05 -0700`; [time.RFC1123Z]
          type: string
        zone:
          description: |-
            Timezone associated.
            Default: `UTC`.
          type: string
      type: object
    webitel.proto.data.type.Duration:
      properties:
        format:
          title: |-
            Display format.
            TODO: `hh:mm:ss.ms`
          type: string
        max:
          format: int64
          type: string
        min:
          format: int64
          type: string
        violation:
          additionalProperties:
            type: string
          type: object
      title: Duration
      type: object
    webitel.proto.data.type.Float:
      properties:
        frac:
          format: int64
          title: fractional part precision
          type: integer
        max:
          format: double
          type: number
        min:
          format: double
          type: number
        violation:
          additionalProperties:
            type: string
          type: object
      type: object
    webitel.proto.data.type.Int:
      properties:
        max:
          format: int64
          type: string
        min:
          format: int64
          type: string
        violation:
          additionalProperties:
            type: string
          title: |-
            DESIGN. Custom error(s) on spec. constraint violation.
            map < constraint, template > to produce [status.message].
            {
              "min": "country code {value} MUST contain at least 2 digits"
              "max": "country code {value} MAY contain at most 4 digits"
            }
          type: object
      type: object
    webitel.proto.data.type.Kind:
      default: none
      description: |-
        Kind of primitive data types.

         - none: option allow_alias = true;
         - list: [array]
         - int: int32
         - uint: uint32
         - float: float32
         - datetime: date &| time
      enum:
        - none
        - list
        - bool
        - int
        - int32
        - int64
        - uint
        - uint32
        - uint64
        - float
        - float32
        - float64
        - binary
        - lookup
        - string
        - richtext
        - datetime
        - duration
      type: string
    webitel.proto.data.type.Lookup:
      description: |-
        Lookup ( REFERENCE ) type descriptor.
        Simplified [webitel.custom.Struct] options.
      properties:
        display:
          description: |-
            [Readonly]. Display dataset field.
            (lookup).{`name`} value relation.
          type: string
        name:
          description: '[Readonly]. Dataset title.'
          type: string
        path:
          description: |-
            [Required]. Reference dataset relative path
            e.g.: "contacts", "dictionaries/cities".
            (lookup).{`type`} value relation.
          type: string
        primary:
          description: |-
            [Readonly]. Primary dataset field.
            (lookup).{`id`} value relation.
          type: string
        query:
          additionalProperties:
            type: string
          title: |-
            Optional. Query dataset filters ...
            map < filter, template >
          type: object
        violation:
          additionalProperties:
            type: string
          title: '[ "not_found", "too_much_records" ]'
          type: object
      type: object
    webitel.proto.data.type.Text:
      properties:
        max_bytes:
          format: int64
          type: integer
        max_chars:
          format: int64
          type: integer
        multiline:
          type: boolean
        violation:
          additionalProperties:
            type: string
          title: |-
            // accept format
             string accept_regex = 7;
             // equality strategy
             bool ignore_case = 8;
          type: object
      type: object
    webitel.proto.data.type.Uint:
      properties:
        max:
          format: uint64
          type: string
        min:
          format: uint64
          type: string
        violation:
          additionalProperties:
            type: string
          type: object
      type: object
    wfmAbsence:
      properties:
        absent_at:
          format: int64
          type: string
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        type_id:
          $ref: '#/components/schemas/wfmAbsenceType'
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAbsenceType:
      default: ABSENCE_TYPE_UNSPECIFIED
      enum:
        - ABSENCE_TYPE_UNSPECIFIED
        - ABSENCE_TYPE_DAYOFF
        - ABSENCE_TYPE_VACATION
        - ABSENCE_TYPE_SICKDAY
      type: string
    wfmAgentAbsences:
      properties:
        absences:
          items:
            $ref: '#/components/schemas/wfmAbsence'
            type: object
          type: array
        agent:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAgentSchedule:
      properties:
        absence:
          $ref: '#/components/schemas/wfmAbsenceType'
        date:
          format: int64
          type: string
        locked:
          type: boolean
        shift:
          $ref: '#/components/schemas/wfmAgentScheduleShift'
      type: object
    wfmAgentScheduleShift:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        domain_id:
          format: int64
          type: string
        end:
          format: int64
          type: string
        id:
          format: int64
          type: string
        pauses:
          items:
            $ref: '#/components/schemas/wfmAgentScheduleShiftPause'
            type: object
          type: array
        skills:
          items:
            $ref: '#/components/schemas/wfmAgentScheduleShiftSkill'
            type: object
          type: array
        start:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAgentScheduleShiftPause:
      properties:
        cause:
          $ref: '#/components/schemas/wfmLookupEntity'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        domain_id:
          format: int64
          type: string
        end:
          format: int64
          type: string
        id:
          format: int64
          type: string
        start:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAgentScheduleShiftSkill:
      properties:
        capacity:
          format: int64
          type: string
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAgentWorkingConditions:
      properties:
        pause_template:
          $ref: '#/components/schemas/wfmLookupEntity'
        working_condition:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmAgentWorkingSchedule:
      properties:
        agent:
          $ref: '#/components/schemas/wfmLookupEntity'
        schedule:
          items:
            $ref: '#/components/schemas/wfmAgentSchedule'
            type: object
          type: array
      type: object
    wfmCreateAgentAbsenceResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
      type: object
    wfmCreateAgentsAbsencesRequest:
      properties:
        agent_ids:
          items:
            format: int64
            type: string
          type: array
        items:
          items:
            $ref: '#/components/schemas/CreateAgentsAbsencesRequestabsentType'
            type: object
          type: array
      type: object
    wfmCreateAgentsAbsencesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmAgentAbsences'
            type: object
          type: array
      type: object
    wfmCreateAgentsWorkingScheduleShiftsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmAgentWorkingSchedule'
            type: object
          type: array
      type: object
    wfmCreateForecastCalculationRequest:
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
      type: object
    wfmCreateForecastCalculationResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
      type: object
    wfmCreatePauseTemplateRequest:
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
      type: object
    wfmCreatePauseTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
      type: object
    wfmCreateShiftTemplateRequest:
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
      type: object
    wfmCreateShiftTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
      type: object
    wfmCreateWorkingConditionRequest:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
      type: object
    wfmCreateWorkingConditionResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
      type: object
    wfmCreateWorkingScheduleRequest:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
      type: object
    wfmCreateWorkingScheduleResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
      type: object
    wfmDeleteAgentAbsenceResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmDeleteForecastCalculationResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmDeletePauseTemplateResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmDeleteShiftTemplateResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmDeleteWorkingConditionResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmDeleteWorkingScheduleResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmExecuteForecastCalculationResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmExecuteForecastCalculationResponseForecast'
            type: object
          type: array
      type: object
    wfmExecuteForecastCalculationResponseForecast:
      properties:
        agents:
          format: int64
          type: string
        timestamp:
          format: int64
          type: string
      type: object
    wfmFilterBetween:
      properties:
        from:
          format: int64
          type: string
        to:
          format: int64
          type: string
      type: object
    wfmForecastCalculation:
      properties:
        args:
          items:
            type: string
          type: array
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        procedure:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmHoliday:
      properties:
        date:
          format: int64
          type: string
        name:
          type: string
      type: object
    wfmLookupEntity:
      properties:
        id:
          format: int64
          type: string
        name:
          type: string
      type: object
    wfmPauseTemplate:
      properties:
        causes:
          items:
            $ref: '#/components/schemas/wfmPauseTemplateCause'
            type: object
          type: array
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmPauseTemplateCause:
      properties:
        cause:
          $ref: '#/components/schemas/wfmLookupEntity'
        duration:
          format: int64
          type: string
      type: object
    wfmReadAgentAbsenceResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
      type: object
    wfmReadAgentWorkingConditionsResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmAgentWorkingConditions'
      type: object
    wfmReadForecastCalculationResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
      type: object
    wfmReadPauseTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
      type: object
    wfmReadShiftTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
      type: object
    wfmReadWorkingConditionResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
      type: object
    wfmReadWorkingScheduleForecastResponse:
      properties:
        items:
          additionalProperties:
            $ref: '#/components/schemas/wfmWorkingScheduleForecast'
          type: object
      type: object
    wfmReadWorkingScheduleResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
      type: object
    wfmSearchAgentAbsenceResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmAbsence'
            type: object
          type: array
      type: object
    wfmSearchAgentsAbsencesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmAgentAbsences'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmSearchAgentsWorkingScheduleResponse:
      properties:
        holidays:
          items:
            $ref: '#/components/schemas/wfmHoliday'
            type: object
          type: array
        items:
          items:
            $ref: '#/components/schemas/wfmAgentWorkingSchedule'
            type: object
          type: array
        total:
          format: int64
          type: string
      type: object
    wfmSearchForecastCalculationResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmForecastCalculation'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmSearchPauseTemplateResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmPauseTemplate'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmSearchShiftTemplateResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmShiftTemplate'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmSearchWorkingConditionResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmWorkingCondition'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmSearchWorkingScheduleResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/wfmWorkingSchedule'
            type: object
          type: array
        next:
          type: boolean
      type: object
    wfmShiftTemplate:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        times:
          items:
            $ref: '#/components/schemas/wfmShiftTemplateTime'
            type: object
          type: array
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmShiftTemplateTime:
      properties:
        end:
          format: int32
          type: integer
        start:
          format: int32
          type: integer
      type: object
    wfmUpdateAgentAbsenceResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
      type: object
    wfmUpdateAgentWorkingConditionsResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmAgentWorkingConditions'
      type: object
    wfmUpdateForecastCalculationResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
      type: object
    wfmUpdatePauseTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
      type: object
    wfmUpdateShiftTemplateResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
      type: object
    wfmUpdateWorkingConditionResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
      type: object
    wfmUpdateWorkingScheduleAddAgentsResponse:
      properties:
        agents:
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
          type: array
      type: object
    wfmUpdateWorkingScheduleRemoveAgentResponse:
      properties:
        id:
          format: int64
          type: string
      type: object
    wfmUpdateWorkingScheduleResponse:
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
      type: object
    wfmWorkingCondition:
      properties:
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        days_off:
          format: int32
          type: integer
        description:
          type: string
        domain_id:
          format: int64
          type: string
        id:
          format: int64
          type: string
        name:
          type: string
        pause_duration:
          format: int32
          type: integer
        pause_template:
          $ref: '#/components/schemas/wfmLookupEntity'
        shift_template:
          $ref: '#/components/schemas/wfmLookupEntity'
        sick_leaves:
          format: int32
          type: integer
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        vacation:
          format: int32
          type: integer
        workday_hours:
          format: int32
          type: integer
        workdays_per_month:
          format: int32
          type: integer
      type: object
    wfmWorkingSchedule:
      properties:
        agents:
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
          type: array
        block_outside_activity:
          type: boolean
        calendar:
          $ref: '#/components/schemas/wfmLookupEntity'
        created_at:
          format: int64
          type: string
        created_by:
          $ref: '#/components/schemas/wfmLookupEntity'
        domain_id:
          format: int64
          type: string
        end_date_at:
          format: int64
          type: string
        end_time_at:
          format: int64
          type: string
        extra_skills:
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
          type: array
        id:
          format: int64
          type: string
        name:
          type: string
        start_date_at:
          format: int64
          type: string
        start_time_at:
          format: int64
          type: string
        state:
          $ref: '#/components/schemas/wfmWorkingScheduleState'
        team:
          $ref: '#/components/schemas/wfmLookupEntity'
        total_agents:
          format: int64
          type: string
        updated_at:
          format: int64
          type: string
        updated_by:
          $ref: '#/components/schemas/wfmLookupEntity'
      type: object
    wfmWorkingScheduleForecast:
      properties:
        forecast:
          items:
            $ref: '#/components/schemas/wfmWorkingScheduleForecastForecast'
            type: object
          type: array
      type: object
    wfmWorkingScheduleForecastForecast:
      properties:
        agents:
          format: int64
          type: string
        hour:
          format: int64
          type: string
      type: object
    wfmWorkingScheduleState:
      default: WORKING_SCHEDULE_STATE_UNSPECIFIED
      enum:
        - WORKING_SCHEDULE_STATE_UNSPECIFIED
        - WORKING_SCHEDULE_STATE_ACTIVE
        - WORKING_SCHEDULE_STATE_PENDING
        - WORKING_SCHEDULE_STATE_DRAFT
        - WORKING_SCHEDULE_STATE_ARCHIVED
      type: string
  securitySchemes:
    AccessToken:
      in: header
      name: X-Webitel-Access
      type: apiKey
security:
  - AccessToken: []
tags:
  - name: RoutingChatPlanService
  - name: RoutingOutboundCallService
  - name: RoutingSchemaService
  - name: RoutingVariableService
  - name: AgentService
  - name: SkillService
  - name: AgentSkillService
  - name: AgentTeamService
  - name: AuditFormService
  - name: BucketService
  - name: CalendarService
  - name: CallService
  - name: EmailProfileService
  - name: ListService
  - name: MemberService
  - name: OutboundResourceService
  - name: OutboundResourceGroupService
  - name: AgentPauseCauseService
  - name: PresetQueryService
  - name: PushService
  - name: QueueService
  - name: QueueBucketService
  - name: CommunicationTypeService
  - name: QueueHookService
  - name: QueueResourcesService
  - name: QueueSkillService
  - name: QuickRepliesService
  - name: RegionService
  - name: SchemaVariablesService
  - name: SchemaVersionService
  - name: SystemSettingService
  - name: TeamHookService
  - name: TeamTriggerService
  - name: TriggerService
  - name: UserHelperService
  - name: WebHookService

