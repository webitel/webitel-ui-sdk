openapi: 3.0.0
info:
  contact:
    email: support@webitel.com
    name: Webitel
    url: 'https://webitel.com'
  license:
    name: MIT
  title: Webitel API
  version: 24.04.0
servers:
  - url: 'https://dev.webitel.com/api'
paths:
  '/acl/{object.name}/{object.id}':
    get:
      operationId: AccessStore_ListDefaultAccess
      summary: 'default: TODO: indicate objclass=default as a default rights repo'
      parameters:
        - name: object.name
          in: path
          description: display name
          required: true
          schema:
            type: string
        - name: object.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: grantor
          in: query
          description: |-
            --- filters ---

            [optional] [FROM] each rule owner is any of role(s) id; user -or- role
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: grantee
          in: query
          description: '[optional] [TO] subject role(s) id; user -or- role'
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: granted
          in: query
          description: '[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: '[optional] [TO] subject.name ILIKE ?q=; user -or- role'
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            ----- Select Options -------------------------

            attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: size
          in: query
          description: |-
            pagedResultsControl

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListAccessResponseV1'
      tags:
        - AccessStore
  '/acl/{object.name}/{object.id}/grantor/{grantor}':
    patch:
      operationId: AccessStore_ToggleDefaultAccess
      summary: Same as UpdateAccess except for DEFAULT access control system
      parameters:
        - name: object.name
          in: path
          description: display name
          required: true
          schema:
            type: string
        - name: object.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: grantor
          in: path
          description: '[FOR] creator user/role'
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.AccessStore.ToggleDefaultAccessBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToggleDefaultAccessResponse'
      tags:
        - AccessStore
  /agent/chats:
    get:
      operationId: AgentChatService_GetAgentChats
      parameters:
        - name: size
          in: query
          description: default
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
        - name: onlyClosed
          in: query
          description: filter
          schema:
            type: boolean
        - name: onlyUnprocessed
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.GetAgentChatsResponse'
      tags:
        - AgentChatService
  '/agent/chats/{chat_id}':
    patch:
      operationId: AgentChatService_MarkChatProcessed
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.MarkChatProcessedResponse'
      tags:
        - AgentChatService
  /calendars:
    get:
      operationId: SearchCalendar
      summary: List of calendar
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCalendar'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
    post:
      operationId: CreateCalendar
      summary: Create calendar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateCalendarRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
  /calendars/timezones:
    get:
      operationId: SearchTimezones
      summary: List timezones
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTimezoneResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
  '/calendars/{id}':
    delete:
      operationId: DeleteCalendar
      summary: Remove calendar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
    get:
      operationId: ReadCalendar
      summary: Calendar item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
    put:
      operationId: UpdateCalendar
      summary: Update calendar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CalendarService.UpdateCalendarBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Calendar'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CalendarService
  /call_center/agents:
    get:
      operationId: SearchAgent
      summary: List of Agent
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: allowChannels
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: supervisorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: regionId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: auditorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: isSupervisor
          in: query
          schema:
            type: boolean
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: notSupervisor
          in: query
          schema:
            type: boolean
        - name: userId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: extension
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: notTeamId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: notSkillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
    post:
      operationId: CreateAgent
      summary: Create Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  /call_center/agents/reports/call:
    get:
      operationId: SearchAgentCallStatistics
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: timeFrom
          in: query
          schema:
            type: string
            format: int64
        - name: timeTo
          in: query
          schema:
            type: string
            format: int64
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: q
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentCallStatisticsList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  /call_center/agents/reports/status:
    get:
      operationId: SearchAgentStatusStatistic
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: timeFrom
          in: query
          schema:
            type: string
            format: int64
        - name: timeTo
          in: query
          schema:
            type: string
            format: int64
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: utilizationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: utilizationTo
          in: query
          schema:
            type: string
            format: int64
        - name: hasCall
          in: query
          schema:
            type: boolean
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: regionId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: supervisorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: auditorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStatsStatistic'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/reports/status/{agent_id}':
    get:
      operationId: SearchAgentStatusStatisticItem
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: timeFrom
          in: query
          schema:
            type: string
            format: int64
        - name: timeTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentStatusStatisticItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  /call_center/agents/states/history:
    get:
      operationId: SearchAgentStateHistory
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: joinedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: joinedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: fromId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStateHistory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{agent_id}/pause_causes':
    get:
      operationId: SearchPauseCauseForAgent
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: allowChange
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ForAgentPauseCauseList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{agent_id}/skills':
    delete:
      operationId: DeleteAgentSkills
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    get:
      operationId: SearchAgentSkill
      summary: List of AgentSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    patch:
      operationId: PatchAgentSkills
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentSkillService.PatchAgentSkillsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    post:
      operationId: CreateAgentSkill
      summary: Create AgentSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentSkillService.CreateAgentSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
  '/call_center/agents/{agent_id}/skills/bulk':
    post:
      operationId: CreateAgentSkills
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentSkillService.CreateAgentSkillsBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateAgentSkillsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
  '/call_center/agents/{agent_id}/skills/{id}':
    delete:
      operationId: DeleteAgentSkill
      summary: Remove AgentSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    get:
      operationId: ReadAgentSkill
      summary: AgentSkill item
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    patch:
      operationId: PatchAgentSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentSkillService.PatchAgentSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
    put:
      operationId: UpdateAgentSkill
      summary: Update AgentSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentSkillService.UpdateAgentSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
  '/call_center/agents/{agent_id}/states/history':
    get:
      operationId: AgentStateHistory
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: timeFrom
          in: query
          schema:
            type: string
            format: int64
        - name: timeTo
          in: query
          schema:
            type: string
            format: int64
        - name: q
          in: query
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentStateHistory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{agent_id}/states/waiting':
    patch:
      operationId: AgentSetState
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.AgentSetStateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentSetStateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{agent_id}/statistics/queues':
    get:
      operationId: SearchAgentInQueueStatistics
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentInQueueStatisticsList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{agent_id}/statistics/today':
    get:
      operationId: AgentTodayStatistics
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTodayStatisticsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{id}':
    delete:
      operationId: DeleteAgent
      summary: Remove Agent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
    get:
      operationId: ReadAgent
      summary: Agent item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
    patch:
      operationId: PatchAgent
      summary: Update Agent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.PatchAgentBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
    put:
      operationId: UpdateAgent
      summary: Update Agent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.UpdateAgentBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Agent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{id}/queues':
    get:
      operationId: SearchAgentInQueue
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{id}/status':
    patch:
      operationId: UpdateAgentStatus
      summary: Change agent status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentService.UpdateAgentStatusBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Response'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/agents/{id}/teams':
    get:
      operationId: SearchAgentInTeam
      summary: todo deprecated ?
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentInTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  '/call_center/attempts/{attempt_id}':
    patch:
      operationId: AttemptCallback
      parameters:
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.AttemptCallbackBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptResultResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/audit/forms:
    get:
      operationId: SearchAuditForm
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: editable
          in: query
          description: |-
            bool archive = 9;

            bool active = 11; // not archive
          schema:
            type: boolean
        - name: question
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    post:
      operationId: CreateAuditForm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAuditFormRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
  '/call_center/audit/forms/{form_id}/rate':
    get:
      operationId: SearchAuditRate
      parameters:
        - name: form_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: callId
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ratedUser
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAuditRate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
  '/call_center/audit/forms/{id}':
    delete:
      operationId: DeleteAuditForm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    get:
      operationId: ReadAuditForm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    patch:
      operationId: PatchAuditForm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.PatchAuditFormBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    put:
      operationId: UpdateAuditForm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.UpdateAuditFormBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditForm'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
  /call_center/audit/rate:
    post:
      operationId: CreateAuditFormRate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAuditFormRateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
  '/call_center/audit/rate/{id}':
    delete:
      operationId: DeleteAuditRate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    get:
      operationId: ReadAuditRate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
    put:
      operationId: UpdateAuditRate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AuditFormService.UpdateAuditRateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AuditRate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AuditFormService
  /call_center/buckets:
    get:
      operationId: SearchBucket
      summary: List of Bucket
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - BucketService
    post:
      operationId: CreateBucket
      summary: Create Bucket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateBucketRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - BucketService
  '/call_center/buckets/{id}':
    delete:
      operationId: DeleteBucket
      summary: Remove Bucket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - BucketService
    get:
      operationId: ReadBucket
      summary: Bucket item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - BucketService
    put:
      operationId: UpdateBucket
      summary: Update Bucket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.BucketService.UpdateBucketBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Bucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - BucketService
  /call_center/communication_type:
    get:
      operationId: SearchCommunicationType
      summary: List of CommunicationType
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: channel
          in: query
          schema:
            type: array
            items:
              enum:
                - Undefined
                - Phone
                - Email
                - Messaging
              type: string
          explode: true
        - name: default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
    post:
      operationId: CreateCommunicationType
      summary: Create CommunicationType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CommunicationTypeRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
  '/call_center/communication_type/{id}':
    delete:
      operationId: DeleteCommunicationType
      summary: Remove CommunicationType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
    get:
      operationId: ReadCommunicationType
      summary: CommunicationType item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
    patch:
      operationId: PatchCommunicationType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CommunicationTypeService.PatchCommunicationTypeBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
    put:
      operationId: UpdateCommunicationType
      summary: Update CommunicationType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CommunicationTypeService.UpdateCommunicationTypeBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CommunicationType'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CommunicationTypeService
  /call_center/list:
    get:
      operationId: SearchList
      summary: List of List
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOfList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    post:
      operationId: CreateList
      summary: Create List
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateListRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
  '/call_center/list/{id}':
    delete:
      operationId: DeleteList
      summary: Remove list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    get:
      operationId: ReadList
      summary: List item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    put:
      operationId: UpdateList
      summary: Update list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ListService.UpdateListBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.List'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
  '/call_center/list/{list_id}/communication':
    get:
      operationId: SearchListCommunication
      summary: List of List
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: expireAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: expireAtTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOfListCommunication'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    post:
      operationId: CreateListCommunication
      summary: Create ListCommunication
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ListService.CreateListCommunicationBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
  '/call_center/list/{list_id}/communication/{id}':
    delete:
      operationId: DeleteListCommunication
      summary: Remove ListCommunication
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    get:
      operationId: ReadListCommunication
      summary: List item
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
    put:
      operationId: UpdateListCommunication
      summary: Update ListCommunication
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ListService.UpdateListCommunicationBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCommunication'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - ListService
  '/call_center/lookups/agents/skills/{agent_id}':
    get:
      operationId: SearchLookupAgentNotExistsSkill
      summary: SearchLookupAgentNotExistsSkill
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentSkillService
  /call_center/lookups/agents/users:
    get:
      operationId: SearchLookupUsersAgentNotExists
      summary: SearchLookupAgentNotExistsUser
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentUser'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  /call_center/members:
    get:
      operationId: SearchMembers
      summary: Search of Member
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: bucketId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: destination
          in: query
          schema:
            type: string
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: stopCause
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: priorityFrom
          in: query
          schema:
            type: string
            format: int64
        - name: priorityTo
          in: query
          schema:
            type: string
            format: int64
        - name: name
          in: query
          schema:
            type: string
        - name: attemptsFrom
          in: query
          schema:
            type: string
            format: int64
        - name: attemptsTo
          in: query
          schema:
            type: string
            format: int64
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/members/{id}':
    patch:
      operationId: PatchMemberOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.PatchMemberOneBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/pause_causes:
    get:
      operationId: SearchAgentPauseCause
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
    post:
      operationId: CreateAgentPauseCause
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentPauseCauseRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
  '/call_center/pause_causes/{id}':
    delete:
      operationId: DeleteAgentPauseCause
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
    get:
      operationId: ReadAgentPauseCause
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
    patch:
      operationId: PatchAgentPauseCause
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentPauseCauseService.PatchAgentPauseCauseBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
    put:
      operationId: UpdateAgentPauseCause
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentPauseCauseService.UpdateAgentPauseCauseBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentPauseCause'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentPauseCauseService
  /call_center/preset/query:
    get:
      operationId: SearchPresetQuery
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: section
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListPresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
    post:
      operationId: CreatePresetQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreatePresetQueryRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
  '/call_center/preset/query/{id}':
    delete:
      operationId: DeletePresetQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
    get:
      operationId: ReadPresetQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
    patch:
      operationId: PatchPresetQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.PresetQueryService.PatchPresetQueryBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
    put:
      operationId: UpdatePresetQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.PresetQueryService.UpdatePresetQueryBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PresetQuery'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - PresetQueryService
  /call_center/queues:
    get:
      operationId: SearchQueue
      summary: List of Queue
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: type
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
    post:
      operationId: CreateQueue
      summary: Create Queue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateQueueRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
  /call_center/queues/attempts/active:
    get:
      operationId: SearchAttempts
      summary: SearchAttempts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: joinedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: joinedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: bucketId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: memberId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: result
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: leavingAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: leavingAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: durationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: durationTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeredAgentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAttempt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/queues/attempts/active/reset:
    put:
      operationId: ResetActiveAttempts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.ResetActiveAttemptsRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResetActiveAttemptsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/queues/attempts/history:
    get:
      operationId: SearchAttemptsHistory
      summary: SearchMemberAttempts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: joinedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: joinedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: bucketId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: memberId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: result
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: leavingAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: leavingAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: durationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: durationTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeredAgentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryAttempt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/attempts/{attempt_id}/renewal':
    patch:
      operationId: AttemptsRenewalResult
      parameters:
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.AttemptsRenewalResultBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptRenewalResultResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/queues/members:
    delete:
      operationId: DeleteAllMembers
      summary: DeleteAllMembers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.DeleteAllMembersRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  /call_center/queues/reports/general:
    get:
      operationId: SearchQueueReportGeneral
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: joinedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: joinedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: type
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListReportGeneral'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
  /call_center/queues/tags:
    get:
      operationId: SearchQueueTags
      summary: List RoutingSchemaTags
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTags'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
  '/call_center/queues/{id}':
    delete:
      operationId: DeleteQueue
      summary: Remove Queue
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
    get:
      operationId: ReadQueue
      summary: Queue item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
    patch:
      operationId: PatchQueue
      summary: Patch Queue
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueService.PatchQueueBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
    put:
      operationId: UpdateQueue
      summary: Update Queue
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueService.UpdateQueueBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Queue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueService
  '/call_center/queues/{queue_id}/buckets':
    get:
      operationId: SearchQueueBucket
      summary: SearchQueueRouting
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
    post:
      operationId: CreateQueueBucket
      summary: Create QueueBucket
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueBucketService.CreateQueueBucketBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
  '/call_center/queues/{queue_id}/buckets/{id}':
    delete:
      operationId: DeleteQueueBucket
      summary: DeleteQueueRouting
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
    get:
      operationId: ReadQueueBucket
      summary: ReadQueueRouting
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
    patch:
      operationId: PatchQueueBucket
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueBucketService.PatchQueueBucketBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
    put:
      operationId: UpdateQueueBucket
      summary: UpdateQueueBucket
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueBucketService.UpdateQueueBucketBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueBucket'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueBucketService
  '/call_center/queues/{queue_id}/hooks':
    get:
      operationId: SearchQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: event
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
    post:
      operationId: CreateQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.CreateQueueHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
  '/call_center/queues/{queue_id}/hooks/{id}':
    delete:
      operationId: DeleteQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
    get:
      operationId: ReadQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
    patch:
      operationId: PatchQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.PatchQueueHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
    put:
      operationId: UpdateQueueHook
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueHookService.UpdateQueueHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueHookService
  '/call_center/queues/{queue_id}/members':
    delete:
      operationId: DeleteMembers
      summary: DeleteMembers
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.DeleteMembersBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    get:
      operationId: SearchMemberInQueue
      summary: List of Member
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: bucketId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: destination
          in: query
          schema:
            type: string
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: offeringAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: stopCause
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: priorityFrom
          in: query
          schema:
            type: string
            format: int64
        - name: priorityTo
          in: query
          schema:
            type: string
            format: int64
        - name: name
          in: query
          schema:
            type: string
        - name: attemptsFrom
          in: query
          schema:
            type: string
            format: int64
        - name: attemptsTo
          in: query
          schema:
            type: string
            format: int64
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: variablesString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMember'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    post:
      operationId: CreateMember
      summary: Create Member
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateMemberBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/members/bulk':
    post:
      operationId: CreateMemberBulk
      summary: Create Member
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateMemberBulkBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberBulkResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/members/reset':
    patch:
      operationId: ResetMembers
      summary: ResetMembers
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.ResetMembersBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResetMembersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/members/{id}':
    delete:
      operationId: DeleteMember
      summary: DeleteMember
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: force
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    get:
      operationId: ReadMember
      summary: ReadQueueRouting
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    patch:
      operationId: PatchMember
      summary: Patch Member
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.PatchMemberBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    put:
      operationId: UpdateMember
      summary: UpdateMember
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.UpdateMemberBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MemberInQueue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/members/{member_id}/attempts':
    get:
      operationId: SearchMemberAttempts
      summary: SearchMemberAttempts
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: member_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListMemberAttempt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
    post:
      operationId: CreateAttempt
      summary: Offline queue
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: member_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.CreateAttemptBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateAttemptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/members/{member_id}/attempts/{attempt_id}':
    patch:
      operationId: AttemptResult
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: member_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.MemberService.AttemptResultBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AttemptResultResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MemberService
  '/call_center/queues/{queue_id}/resource_groups':
    get:
      operationId: SearchQueueResourceGroup
      summary: SearchQueueResourceGroup
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueResourcesService
    post:
      operationId: CreateQueueResourceGroup
      summary: CreateQueueResourceGroup
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueResourcesService.CreateQueueResourceGroupBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueResourcesService
  '/call_center/queues/{queue_id}/resource_groups/{id}':
    delete:
      operationId: DeleteQueueResourceGroup
      summary: DeleteQueueResourceGroup
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueResourcesService
    get:
      operationId: ReadQueueResourceGroup
      summary: ReadQueueResourceGroup
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueResourcesService
    put:
      operationId: UpdateQueueResourceGroup
      summary: UpdateQueueResourceGroup
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueResourcesService.UpdateQueueResourceGroupBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueResourcesService
  '/call_center/queues/{queue_id}/skills':
    get:
      operationId: SearchQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: bucketId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: lvl
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: minCapacity
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: maxCapacity
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
    post:
      operationId: CreateQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueSkillService.CreateQueueSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
  '/call_center/queues/{queue_id}/skills/{id}':
    delete:
      operationId: DeleteQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
    get:
      operationId: ReadQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
    patch:
      operationId: PatchQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueSkillService.PatchQueueSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
    put:
      operationId: UpdateQueueSkill
      parameters:
        - name: queue_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QueueSkillService.UpdateQueueSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QueueSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QueueSkillService
  /call_center/quick_replies:
    get:
      operationId: SearchQuickReplies
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListQuickReplies'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
    post:
      operationId: CreateQuickReply
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateQuickReplyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
  '/call_center/quick_replies/{id}':
    delete:
      operationId: DeleteQuickReply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
    get:
      operationId: ReadQuickReply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
    patch:
      operationId: PatchQuickReply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QuickRepliesService.PatchQuickReplyBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
    put:
      operationId: UpdateQuickReply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.QuickRepliesService.UpdateQuickReplyBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.QuickReply'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - QuickRepliesService
  /call_center/resource_group:
    get:
      operationId: SearchOutboundResourceGroup
      summary: List of OutboundResourceGroup
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    post:
      operationId: CreateOutboundResourceGroup
      summary: Create OutboundResourceGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateOutboundResourceGroupRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
  '/call_center/resource_group/{group_id}/resource':
    get:
      operationId: SearchOutboundResourceInGroup
      summary: List of OutboundResourceInGroup
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceInGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    post:
      operationId: CreateOutboundResourceInGroup
      summary: Create OutboundResourceGroup
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
  '/call_center/resource_group/{group_id}/resource/{id}':
    delete:
      operationId: DeleteOutboundResourceInGroup
      summary: Remove OutboundResourceInGroup
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    get:
      operationId: ReadOutboundResourceInGroup
      summary: OutboundResourceInGroup item
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    put:
      operationId: UpdateOutboundResourceInGroup
      summary: Update OutboundResourceInGroup
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceInGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
  '/call_center/resource_group/{id}':
    delete:
      operationId: DeleteOutboundResourceGroup
      summary: Remove OutboundResourceGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    get:
      operationId: ReadOutboundResourceGroup
      summary: OutboundResourceGroup item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
    put:
      operationId: UpdateOutboundResourceGroup
      summary: Update OutboundResourceGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResourceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceGroupService
  /call_center/resources:
    get:
      operationId: SearchOutboundResource
      summary: List of OutboundResource
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    post:
      operationId: CreateOutboundResource
      summary: Create OutboundResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateOutboundResourceRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
  '/call_center/resources/{id}':
    delete:
      operationId: DeleteOutboundResource
      summary: Remove OutboundResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    get:
      operationId: ReadOutboundResource
      summary: OutboundResource item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    patch:
      operationId: PatchOutboundResource
      summary: Patch OutboundResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceService.PatchOutboundResourceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    put:
      operationId: UpdateOutboundResource
      summary: Update OutboundResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceService.UpdateOutboundResourceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.OutboundResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
  '/call_center/resources/{resource_id}/display':
    delete:
      operationId: DeleteOutboundResourceDisplays
      summary: Remove ResourceDisplays
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: items
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    get:
      operationId: SearchOutboundResourceDisplay
      summary: List of ResourceDisplay
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListOutboundResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    post:
      operationId: CreateOutboundResourceDisplay
      summary: Create CreateOutboundResourceDisplay
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceService.CreateOutboundResourceDisplayBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
  '/call_center/resources/{resource_id}/display/bulk':
    post:
      operationId: CreateOutboundResourceDisplayBulk
      summary: Create CreateOutboundResourceDisplay
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
  '/call_center/resources/{resource_id}/display/{id}':
    delete:
      operationId: DeleteOutboundResourceDisplay
      summary: Remove ResourceDisplay
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    get:
      operationId: ReadOutboundResourceDisplay
      summary: ResourceDisplay item
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
    put:
      operationId: UpdateOutboundResourceDisplay
      summary: Update ResourceDisplay
      parameters:
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.OutboundResourceService.UpdateOutboundResourceDisplayBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ResourceDisplay'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - OutboundResourceService
  /call_center/skills:
    get:
      operationId: SearchSkill
      summary: List of Skill
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    post:
      operationId: CreateSkill
      summary: Create Skill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSkillRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
  '/call_center/skills/{id}':
    delete:
      operationId: DeleteSkill
      summary: Remove Skill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    get:
      operationId: ReadSkill
      summary: Skill item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    put:
      operationId: UpdateSkill
      summary: Update Skill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.UpdateSkillBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Skill'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
  '/call_center/skills/{skill_id}/agents':
    delete:
      operationId: DeleteSkillAgent
      parameters:
        - name: skill_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.DeleteSkillAgentBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DeleteSkillAgentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    get:
      operationId: SearchSkillAgent
      summary: |-
        For agents
        SearchSkillAgent
      parameters:
        - name: skill_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSkillAgent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    patch:
      operationId: PatchSkillAgent
      parameters:
        - name: skill_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.PatchSkillAgentBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.PatchSkillAgentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
    post:
      operationId: CreateSkillAgent
      parameters:
        - name: skill_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SkillService.CreateSkillAgentBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateSkillAgentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SkillService
  /call_center/teams:
    get:
      operationId: SearchAgentTeam
      summary: List of AgentTeam
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: strategy
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: adminId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAgentTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentTeamService
    post:
      operationId: CreateAgentTeam
      summary: Create AgentTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateAgentTeamRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentTeamService
  /call_center/teams/triggers/agent:
    get:
      operationId: SearchAgentTrigger
      parameters:
        - name: teamId
          in: query
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
  '/call_center/teams/triggers/{trigger_id}':
    post:
      operationId: RunTeamTrigger
      parameters:
        - name: trigger_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamTriggerService.RunTeamTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RunTeamTriggerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
  '/call_center/teams/{id}':
    delete:
      operationId: DeleteAgentTeam
      summary: Remove AgentTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentTeamService
    get:
      operationId: ReadAgentTeam
      summary: AgentTeam item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentTeamService
    put:
      operationId: UpdateAgentTeam
      summary: Update AgentTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AgentTeamService.UpdateAgentTeamBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.AgentTeam'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentTeamService
  '/call_center/teams/{team_id}/hooks':
    get:
      operationId: SearchTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: event
          in: query
          schema:
            type: array
            items:
              enum:
                - teamHookEventUndefined
                - agent_status
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
    post:
      operationId: CreateTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.CreateTeamHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
  '/call_center/teams/{team_id}/hooks/{id}':
    delete:
      operationId: DeleteTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
    get:
      operationId: ReadTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
    patch:
      operationId: PatchTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.PatchTeamHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
    put:
      operationId: UpdateTeamHook
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamHookService.UpdateTeamHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamHookService
  '/call_center/teams/{team_id}/triggers':
    get:
      operationId: SearchTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
    post:
      operationId: CreateTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamTriggerService.CreateTeamTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
  '/call_center/teams/{team_id}/triggers/{id}':
    delete:
      operationId: DeleteTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
    get:
      operationId: ReadTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
    patch:
      operationId: PatchTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamTriggerService.PatchTeamTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
    put:
      operationId: UpdateTeamTrigger
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TeamTriggerService.UpdateTeamTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TeamTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TeamTriggerService
  /call_center/users:
    get:
      operationId: SearchUserStatus
      summary: List of UserStatus
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListUserStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - AgentService
  /calls:
    post:
      operationId: CreateCall
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateCallRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  /calls/active:
    get:
      operationId: SearchActiveCall
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: userId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: memberId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: gatewayId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: durationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: durationTo
          in: query
          schema:
            type: string
            format: int64
        - name: skipParent
          in: query
          schema:
            type: boolean
        - name: parentId
          in: query
          schema:
            type: string
        - name: cause
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: existsFile
          in: query
          schema:
            type: boolean
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: number
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: answeredAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: answeredAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: missed
          in: query
          schema:
            type: boolean
        - name: storedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: storedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: supervisorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: state
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}':
    delete:
      operationId: HangupCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.HangupCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HangupCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
    get:
      operationId: ReadCall
      summary: Call item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ActiveCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/confirm_push':
    patch:
      operationId: ConfirmPush
      summary: Call item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ConfirmPushResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/dtmf':
    patch:
      operationId: DtmfCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.DtmfCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DtmfCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/eavesdrop':
    post:
      operationId: EavesdropCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.EavesdropCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/hold':
    patch:
      operationId: HoldCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.HoldCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HoldCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/transfer':
    patch:
      operationId: BlindTransferCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.BlindTransferCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.BlindTransferCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/unhold':
    patch:
      operationId: UnHoldCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.UnHoldCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HoldCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/active/{id}/variables':
    patch:
      operationId: SetVariablesCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.SetVariablesCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SetVariablesCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  /calls/history:
    get:
      operationId: SearchHistoryCall
      summary: List of call
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: userId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: agentId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: queueId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: memberId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: gatewayId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: durationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: durationTo
          in: query
          schema:
            type: string
            format: int64
        - name: skipParent
          in: query
          schema:
            type: boolean
        - name: parentId
          in: query
          schema:
            type: string
        - name: cause
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: hasFile
          in: query
          schema:
            type: boolean
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
        - name: number
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: string
        - name: answeredAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: answeredAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: missed
          in: query
          schema:
            type: boolean
        - name: storedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: storedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: id
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: transferFrom
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: transferTo
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: dependencyId
          in: query
          schema:
            type: string
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: variablesString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
        - name: amdResult
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fts
          in: query
          schema:
            type: string
        - name: directions
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: hasTranscript
          in: query
          schema:
            type: boolean
        - name: agentDescription
          in: query
          schema:
            type: string
        - name: ownerId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: granteeId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: amdAiResult
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: talkFrom
          in: query
          schema:
            type: string
            format: int64
        - name: talkTo
          in: query
          schema:
            type: string
            format: int64
        - name: rated
          in: query
          schema:
            type: boolean
        - name: ratedBy
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: scoreRequiredFrom
          in: query
          schema:
            type: string
            format: int64
        - name: scoreRequiredTo
          in: query
          schema:
            type: string
            format: int64
        - name: scoreOptionalFrom
          in: query
          schema:
            type: string
            format: int64
        - name: scoreOptionalTo
          in: query
          schema:
            type: string
            format: int64
        - name: ratedUser
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: contactId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: hasTransfer
          in: query
          schema:
            type: boolean
        - name: timeline
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
    post:
      operationId: SearchHistoryCallPost
      summary: List of call
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SearchHistoryCallRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListHistoryCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  /calls/history/aggregate:
    post:
      operationId: AggregateHistoryCall
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.AggregateHistoryCallRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAggregate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/history/{call_id}/annotation':
    post:
      operationId: CreateCallAnnotation
      parameters:
        - name: call_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.CreateCallAnnotationBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/history/{call_id}/annotation/{id}':
    delete:
      operationId: DeleteCallAnnotation
      parameters:
        - name: call_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
    put:
      operationId: UpdateCallAnnotation
      parameters:
        - name: call_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.UpdateCallAnnotationBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CallAnnotation'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/history/{call_id}/redial':
    post:
      operationId: RedialCall
      parameters:
        - name: call_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.RedialCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.CreateCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  '/calls/history/{id}':
    patch:
      operationId: PatchHistoryCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CallService.PatchHistoryCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.HistoryCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CallService
  /cases:
    get:
      operationId: SearchCases
      summary: RPC method for searching cases.
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of results per page.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: Query string for searching cases.
          schema:
            type: string
        - name: ids
          in: query
          description: List of specific case IDs to retrieve.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'Sorting criteria (e.g., field:asc).'
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: filters
          in: query
          description: Key-value pairs for additional filtering.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: contactId
          in: query
          description: Contact ID for filtering cases.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
    post:
      operationId: CreateCase
      summary: RPC method for creating a new case.
      parameters:
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for creating the case.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateCase'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
  /cases/catalogs:
    get:
      operationId: ListCatalogs
      summary: Retrieve a list of catalogs or search catalogs
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sorting options by fields
          schema:
            type: string
        - name: id
          in: query
          description: List of IDs to filter the catalogs
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: query
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
        - name: state
          in: query
          description: 'Filter by state (true for active, false for inactive)'
          schema:
            type: boolean
        - name: depth
          in: query
          description: |-
            Filter by the depth of the hierarchy to retrieve services.
            The depth indicates how many ancestor levels of services
            will be included for each catalog.
            - A depth of 0 includes only the direct catalog.
            - A depth of 1 includes the catalog and its immediate services.
            - By default the depth is limited by 3,
              meaning all nested services and sub-services will be included.
          schema:
            type: string
            format: int64
        - name: subFields
          in: query
          description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: hasSubservices
          in: query
          description: Filter catalogs with subservices
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CatalogList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
    post:
      operationId: CreateCatalog
      summary: Create a new catalog
      parameters:
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
  '/cases/catalogs/{id}':
    delete:
      operationId: DeleteCatalog
      summary: Delete a catalog
      parameters:
        - name: id
          in: path
          description: ID of the catalog to be deleted
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CatalogList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
    get:
      operationId: LocateCatalog
      summary: Locate a catalog by ID
      parameters:
        - name: id
          in: path
          description: ID of the catalog to be located
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: |-
            Fields to be retrieved as a result.
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: subFields
          in: query
          description: |-
            Fields to be retrieved as a result for [SUBSERVICES].
            If the user passes "-" as the value for fields,
            it will retrieve all available fields for each catalog subservices.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateCatalogResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
    patch:
      operationId: UpdateCatalog2
      summary: Update an existing catalog
      parameters:
        - name: id
          in: path
          description: ID of the catalog to be updated
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for updating the catalog
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
    put:
      operationId: UpdateCatalog
      summary: Update an existing catalog
      parameters:
        - name: id
          in: path
          description: ID of the catalog to be updated
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for updating the catalog
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCatalog'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Catalog'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Catalogs
  /cases/close_reason_groups:
    get:
      operationId: ListCloseReasonGroups
      summary: Retrieve a list of close reason groups or search close reason groups
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroupList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
    post:
      operationId: CreateCloseReasonGroup
      summary: Create a new close reason group
      parameters:
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputCloseReasonGroup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
  '/cases/close_reason_groups/{id}':
    delete:
      operationId: DeleteCloseReasonGroup
      summary: Delete a close reason group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
    get:
      operationId: LocateCloseReasonGroup
      summary: Locate a close reason group by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateCloseReasonGroupResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
    patch:
      operationId: UpdateCloseReasonGroup2
      summary: Update an existing close reason group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
    put:
      operationId: UpdateCloseReasonGroup
      summary: Update an existing close reason group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasonGroups
  '/cases/comments/{etag}':
    delete:
      operationId: DeleteComment
      summary: Delete a specific comment by its etag
      parameters:
        - name: etag
          in: path
          description: Identifier of the comment to delete.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return after deletion.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
    get:
      operationId: LocateComment
      summary: Retrieve a specific comment by its etag
      parameters:
        - name: etag
          in: path
          description: Identifier of the comment to retrieve.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Specific fields to return for the comment.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
  '/cases/comments/{input.etag}':
    patch:
      operationId: UpdateComment2
      summary: Update a specific comment by its etag
      parameters:
        - name: input.etag
          in: path
          description: Identifier for the comment.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Data for the comment to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  description: Content of the comment.
                  type: string
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              example:
                text: My new comment
              title: Data for the comment to update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
    put:
      operationId: UpdateComment
      summary: Update a specific comment by its etag
      parameters:
        - name: input.etag
          in: path
          description: Identifier for the comment.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Data for the comment to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  description: Content of the comment.
                  type: string
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              example:
                text: My new comment
              title: Data for the comment to update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
  /cases/priorities:
    get:
      operationId: ListPriorities
      summary: Retrieve a list of priorities or search priorities
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
        - name: notInSla
          in: query
          description: Filter priorities that are not in filtered SLA
          schema:
            type: string
            format: int64
        - name: inSlaCond
          in: query
          description: Filter priorities that are in filtered SlaCondition and not in current SLA
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.PriorityList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
    post:
      operationId: CreatePriority
      summary: Create a new priority
      parameters:
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputPriority'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
  '/cases/priorities/{id}':
    delete:
      operationId: DeletePriority
      summary: Delete a priority
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
    get:
      operationId: LocatePriority
      summary: Locate a priority by ID
      parameters:
        - name: id
          in: path
          description: ID of the priority to be located
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocatePriorityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
    patch:
      operationId: UpdatePriority2
      summary: Update an existing priority
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputPriority'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
    put:
      operationId: UpdatePriority
      summary: Update an existing priority
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputPriority'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Priority'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Priorities
  /cases/services:
    get:
      operationId: ListServices
      summary: Retrieve a list of services or search services within a catalog
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sorting options by fields
          schema:
            type: string
        - name: id
          in: query
          description: List of IDs to filter the services
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
        - name: rootId
          in: query
          description: Filter services by catalog ID (required)
          schema:
            type: string
            format: int64
        - name: state
          in: query
          description: 'Filter by state (true for active, false for inactive)'
          schema:
            type: boolean
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ServiceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
    post:
      operationId: CreateService
      summary: Create a new service within a catalog
      parameters:
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateService'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
  '/cases/services/{id}':
    delete:
      operationId: DeleteService
      summary: Delete a service
      parameters:
        - name: id
          in: path
          description: ID of the service to be deleted
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ServiceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
    get:
      operationId: LocateService
      summary: Locate a service by ID
      parameters:
        - name: id
          in: path
          description: ID of the service to be located
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateServiceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
    patch:
      operationId: UpdateService2
      summary: Update an existing service
      parameters:
        - name: id
          in: path
          description: ID of the service to be updated
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for updating the service
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputService'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
    put:
      operationId: UpdateService
      summary: Update an existing service
      parameters:
        - name: id
          in: path
          description: ID of the service to be updated
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for updating the service
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputService'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Services
  /cases/slas:
    get:
      operationId: ListSLAs
      summary: Retrieve a list of SLAs or search SLA conditions
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLAList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
    post:
      operationId: CreateSLA
      summary: Create a new SLA
      parameters:
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputSLA'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
  '/cases/slas/{id}':
    delete:
      operationId: DeleteSLA
      summary: Delete an SLA
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
    get:
      operationId: LocateSLA
      summary: Locate an SLA by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSLAResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
    patch:
      operationId: UpdateSLA2
      summary: Update an existing SLA
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLA'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
    put:
      operationId: UpdateSLA
      summary: Update an existing SLA
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLA'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLA'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAs
  /cases/sources:
    get:
      operationId: ListSources
      summary: Retrieve a list of sources or search sources
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
        - name: type
          in: query
          description: |-
            Filter by source type.

             - TYPE_UNSPECIFIED: Unspecified source type.
             - CALL: Phone call source type.
             - CHAT: Chat source type.
             - SOCIAL_MEDIA: Social media source type.
             - EMAIL: Email source type.
             - API: API source type.
             - MANUAL: Manual source type.
          schema:
            type: array
            items:
              enum:
                - TYPE_UNSPECIFIED
                - CALL
                - CHAT
                - SOCIAL_MEDIA
                - EMAIL
                - API
                - MANUAL
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SourceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
    post:
      operationId: CreateSource
      summary: Create a new source
      parameters:
        - name: fields
          in: query
          description: |-
            Optional list of specific fields to return after creation

            Specific fields to include in response
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          explode: true
      requestBody:
        description: Main input payload for the source being created
        required: true
        content:
          application/json:
            schema:
              description: The input data for the source
              format: object
              example:
                description: For inbound communication
                name: Inbound
                type: CALL
              $ref: '#/components/schemas/webitel.cases.InputSource'
              required:
                - input
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
  '/cases/sources/{id}':
    delete:
      operationId: DeleteSource
      summary: Delete a source
      parameters:
        - name: id
          in: path
          description: The unique ID of the source to delete.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
    get:
      operationId: LocateSource
      summary: Locate a source by ID
      parameters:
        - name: id
          in: path
          description: The unique ID of the source to locate.
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSourceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
    patch:
      operationId: UpdateSource2
      summary: Update an existing source
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSource'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
    put:
      operationId: UpdateSource
      summary: Update an existing source
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSource'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Source'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Sources
  /cases/statuses:
    get:
      operationId: ListStatuses
      summary: Retrieve a list of statuses or search statuses
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
    post:
      operationId: CreateStatus
      summary: Create a new status
      parameters:
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        $ref: '#/components/requestBodies/webitel.cases.InputStatus'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
  '/cases/statuses/{id}':
    delete:
      operationId: DeleteStatus
      summary: Delete a status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
    get:
      operationId: LocateStatus
      summary: Locate a status by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
    patch:
      operationId: UpdateStatus2
      summary: Update an existing status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatus'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
    put:
      operationId: UpdateStatus
      summary: Update an existing status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatus'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Status'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Statuses
  '/cases/{case_etag}/comments':
    get:
      operationId: ListComments
      summary: Retrieve a list of comments associated with a specific case
      parameters:
        - name: case_etag
          in: path
          description: Etag or ID of the case for which comments are requested.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of comments per page.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: Query string for search.
          schema:
            type: string
        - name: ids
          in: query
          description: Array of requested id.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sorting order.
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return for each comment.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseCommentList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
    post:
      operationId: PublishComment
      summary: Publish comment into a specific case
      parameters:
        - name: case_etag
          in: path
          description: Etag or ID of the case to which comments belong.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Result fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Comment to publish.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCaseComment'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseComment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseComments
  '/cases/{case_etag}/communication':
    get:
      operationId: ListCommunications
      summary: |-
        Lists all communications linked to a specific case.
        Currently a feature for future development.
      parameters:
        - name: case_etag
          in: path
          description: Case identifier.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: Query string for filtering results.
          schema:
            type: string
        - name: size
          in: query
          description: Number of records per page.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number for pagination.
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sorting order.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.ListCommunicationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseCommunications
    post:
      operationId: LinkCommunication
      summary: Links a communication to a specific case.
      parameters:
        - name: case_etag
          in: path
          description: Case identifier.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for the communications to link.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCaseCommunication'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LinkCommunicationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseCommunications
  '/cases/{case_etag}/communication/{id}':
    delete:
      operationId: UnlinkCommunication
      summary: Unlinks a communication from a specific case.
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Communication identifier.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.UnlinkCommunicationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseCommunications
  '/cases/{case_etag}/files':
    get:
      operationId: ListFiles
      summary: Retrieve a list of files associated with a case
      parameters:
        - name: case_etag
          in: path
          description: ID of the case to fetch files for (required).
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page number to retrieve.
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of items per page.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: Search term.
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ids
          in: query
          description: Array of requested id.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sorting
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseFileList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseFiles
  '/cases/{case_etag}/files/{id}':
    delete:
      operationId: DeleteFile
      summary: Delete a file
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The unique ID of the file to delete.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.File'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseFiles
  '/cases/{case_etag}/links':
    get:
      operationId: ListLinks
      summary: With Case
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLinkList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
    post:
      operationId: CreateLink
      parameters:
        - name: case_etag
          in: path
          description: new comment link
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: result fields needed on the front-end for each comment
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: inputEtag
          in: query
          schema:
            type: string
        - name: inputUrl
          in: query
          schema:
            type: string
        - name: inputName
          in: query
          schema:
            type: string
        - name: inputUserIdId
          in: query
          schema:
            type: string
            format: int64
        - name: inputUserIdName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
  '/cases/{case_etag}/links/{etag}':
    delete:
      operationId: DeleteLink
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: etag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
    get:
      operationId: LocateLink
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: (id allowed)
          required: true
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
  '/cases/{case_etag}/links/{input.etag}':
    patch:
      operationId: UpdateLink2
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: input.etag
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: on return
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
    put:
      operationId: UpdateLink
      parameters:
        - name: case_etag
          in: path
          required: true
          schema:
            type: string
        - name: input.etag
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: on return
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseLinks
  '/cases/{case_id}/chat/{chat_id}/messages':
    get:
      operationId: CasesChatCatalog_GetCaseChatHistory
      parameters:
        - name: case_id
          in: path
          description: Contact identificator
          required: true
          schema:
            type: string
        - name: chat_id
          in: path
          description: Unique chat dialog
          required: true
          schema:
            type: string
        - name: offsetId
          in: query
          description: Messages ONLY starting from the specified message ID
          schema:
            type: string
            format: int64
        - name: offsetDate
          in: query
          description: Messages ONLY been sent before the specified epochtime(milli).
          schema:
            type: string
            format: int64
        - name: size
          in: query
          description: Number of messages to return.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: message.text'
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: groupString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
      tags:
        - CasesChatCatalog
  '/cases/{case_id}/timeline':
    get:
      operationId: GetTimeline
      parameters:
        - name: case_id
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
        - name: type
          in: query
          schema:
            type: array
            items:
              enum:
                - chat
                - call
                - email
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.GetTimelineResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseTimeline
  '/cases/{case_id}/timeline/counter':
    get:
      operationId: GetTimelineCounter
      parameters:
        - name: case_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.GetTimelineCounterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CaseTimeline
  '/cases/{etag}':
    delete:
      operationId: DeleteCase
      summary: RPC method for deleting an existing case by its etag.
      parameters:
        - name: etag
          in: path
          description: Unique etag identifier of the case.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the deleted case response.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
    get:
      operationId: LocateCase
      summary: RPC method to retrieve a specific case by its etag identifier.
      parameters:
        - name: etag
          in: path
          description: Unique etag identifier of the case.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
  '/cases/{input.etag}':
    patch:
      operationId: UpdateCase2
      summary: RPC method for updating an existing case.
      parameters:
        - name: input.etag
          in: path
          required: true
          schema:
            type: string
        - name: xJsonMask
          in: query
          description: List of JSON fields to update.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data with updated fields.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assignee:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                closeReason:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required;'
                closeResult:
                  type: string
                  title: 'create: not required; update: required only when case status goes to the final state'
                contactInfo:
                  type: string
                  title: 'create: not required;'
                custom:
                  description: Custom data extension fields ..
                  type: object
                description:
                  type: string
                  title: 'create: not required;'
                group:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required, default is reporter or ui (if empty recognize as anonymous);'
                priority:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default first value from priority lookup'
                rating:
                  type: string
                  format: int64
                ratingComment:
                  type: string
                reporter:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/general.Lookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/general.Lookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default initial value from status lookup or ui;'
                statusCondition:
                  $ref: '#/components/schemas/webitel.cases.StatusCondition'
                subject:
                  type: string
                  title: 'create: required;'
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              title: Input data with updated fields.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
    put:
      operationId: UpdateCase
      summary: RPC method for updating an existing case.
      parameters:
        - name: input.etag
          in: path
          required: true
          schema:
            type: string
        - name: xJsonMask
          in: query
          description: List of JSON fields to update.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data with updated fields.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assignee:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                closeReason:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required;'
                closeResult:
                  type: string
                  title: 'create: not required; update: required only when case status goes to the final state'
                contactInfo:
                  type: string
                  title: 'create: not required;'
                custom:
                  description: Custom data extension fields ..
                  type: object
                description:
                  type: string
                  title: 'create: not required;'
                group:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default from service or set by UI;'
                impacted:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required, default is reporter or ui (if empty recognize as anonymous);'
                priority:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default first value from priority lookup'
                rating:
                  type: string
                  format: int64
                ratingComment:
                  type: string
                reporter:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: required (if empty recognize as anonymous contact);'
                service:
                  $ref: '#/components/schemas/general.Lookup'
                  title: on this field base many other readonly fields on return
                source:
                  $ref: '#/components/schemas/general.Lookup'
                  title: source of the case
                status:
                  $ref: '#/components/schemas/general.Lookup'
                  title: 'create: not required, default initial value from status lookup or ui;'
                statusCondition:
                  $ref: '#/components/schemas/webitel.cases.StatusCondition'
                subject:
                  type: string
                  title: 'create: required;'
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              title: Input data with updated fields.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.Case'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
  '/cases/{input.primary_case.id}/related/{etag}':
    patch:
      operationId: UpdateRelatedCase2
      summary: Update an existing related case
      parameters:
        - name: input.primary_case.id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: etag
          in: path
          description: Identifier of the related case to update.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for the related case update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primaryCase:
                  description: Primary case details.
                  type: object
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                relatedCase:
                  description: Related case details.
                  $ref: '#/components/schemas/general.Lookup'
                relationType:
                  description: Relation type.
                  $ref: '#/components/schemas/webitel.cases.RelationType'
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              title: Input data for the related case update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
    put:
      operationId: UpdateRelatedCase
      summary: Update an existing related case
      parameters:
        - name: input.primary_case.id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: etag
          in: path
          description: Identifier of the related case to update.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for the related case update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primaryCase:
                  description: Primary case details.
                  type: object
                  properties:
                    name:
                      type: string
                  title: Primary case details.
                relatedCase:
                  description: Related case details.
                  $ref: '#/components/schemas/general.Lookup'
                relationType:
                  description: Relation type.
                  $ref: '#/components/schemas/webitel.cases.RelationType'
                userId:
                  description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                  $ref: '#/components/schemas/general.Lookup'
              title: Input data for the related case update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
  '/cases/{primary_case_etag}/related':
    get:
      operationId: ListRelatedCases
      summary: List all related cases for a specific case
      parameters:
        - name: primary_case_etag
          in: path
          description: Primary Case ID for which related cases are requested.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of related cases per page.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: Query string for search.
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting order.
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return for each related case.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ids
          in: query
          description: Filter by ids
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCaseList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
    post:
      operationId: CreateRelatedCase
      summary: Create a new related case
      parameters:
        - name: primary_case_etag
          in: path
          description: Primary case details.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Input data for the related case.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.CreateInputRelatedCase'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
  '/cases/{primary_case_etag}/related/{etag}':
    delete:
      operationId: DeleteRelatedCase
      summary: Delete a specific related case
      parameters:
        - name: primary_case_etag
          in: path
          description: Etag or ID of the primary case
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Identifier of the related case to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
    get:
      operationId: LocateRelatedCase
      summary: Retrieve a specific related case by ID
      parameters:
        - name: primary_case_etag
          in: path
          description: Primary case identifier.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Identifier of the related case.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.RelatedCase'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RelatedCases
  /chat/broadcast:
    post:
      operationId: BroadcastMessage
      summary: Broadcast message send message from via to peer recipients.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.chat.BroadcastMessageRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.BroadcastMessageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - MessagesService
  /chat/customers:
    get:
      operationId: Catalog_GetCustomers
      summary: Query of external chat customers
      parameters:
        - name: page
          in: query
          description: 'Page number to return. **default**: 1.'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'Page records limit. **default**: 16.'
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: peer{id,name}'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort records by { fields } specification.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: 'Fields [Q]uery to build result dataset record.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Set of unique contact **ID**entifier(s).
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: type
          in: query
          description: The type of contact to filter.
          schema:
            type: string
        - name: viaId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: viaType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: viaName
          in: query
          description: Contact display **name**.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatCustomers'
      tags:
        - Catalog
  /chat/dialogs:
    get:
      operationId: Catalog_GetDialogs
      summary: Query of chat conversations
      parameters:
        - name: page
          in: query
          description: 'Page number to return. **default**: 1.'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'Page records limit. **default**: 16.'
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: peer.name'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort records by { fields } specification.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: 'Fields [Q]uery to build result dataset record.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: |-
            Set of unique chat IDentifier(s).
            Accept: dialog -or- member ID.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: viaId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: viaType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: viaName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: peerId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: peerType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: peerName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: dateSince
          in: query
          description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          schema:
            type: string
            format: int64
        - name: dateUntil
          in: query
          description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          schema:
            type: string
            format: int64
        - name: online
          in: query
          description: 'Dialogs ONLY that are currently [not] active( closed: ? ).'
          schema:
            type: boolean
        - name: groupString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatDialogs'
      tags:
        - Catalog
  '/chat/dialogs/{chat_id}/members':
    get:
      operationId: Catalog_GetMembers
      summary: Query of chat participants
      parameters:
        - name: chat_id
          in: path
          description: ID of the chat dialog.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: 'Page number to return. **default**: 1.'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'Page records limit. **default**: 16.'
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: peer(type;name)'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort records by { fields } specification.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: 'Fields [Q]uery to build result dataset record.'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Set of unique chat member ID.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: viaId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: viaType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: viaName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: peerId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: peerType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: peerName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: dateSince
          in: query
          description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          schema:
            type: string
            format: int64
        - name: dateUntil
          in: query
          description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          schema:
            type: string
            format: int64
        - name: online
          in: query
          description: |-
            Participants ONLY who are currently [not] connected to the chat.
            ( left: ( 0 ? online : offline ) )
          schema:
            type: boolean
        - name: joined
          in: query
          description: |-
            Participants ONLY who have [not] been connected to the chat.
            ( join: ( 0 ? [request|abandoned] : connected ) )
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMembers'
      tags:
        - Catalog
  '/chat/dialogs/{chat_id}/messages':
    get:
      operationId: Catalog_GetHistory
      summary: Query of the chat history
      parameters:
        - name: chat_id
          in: path
          description: Unique chat dialog
          required: true
          schema:
            type: string
        - name: offsetId
          in: query
          description: Messages ONLY starting from the specified message ID
          schema:
            type: string
            format: int64
        - name: offsetDate
          in: query
          description: Messages ONLY been sent before the specified epochtime(milli).
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: Number of messages to return.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: message.text'
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: peerId
          in: query
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          schema:
            type: string
        - name: peerType
          in: query
          description: Contact **type** provider.
          schema:
            type: string
        - name: peerName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: groupString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
      tags:
        - Catalog
  '/chat/{conversation_id}/contact':
    post:
      operationId: ContactLinkingService_CreateContactFromConversation
      summary: CreateContactFromConversation creates new contact from the data existing in the conversation and after that links this contact to the external user.
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
        - name: timezoneId
          in: query
          schema:
            type: string
            format: int64
        - name: timezoneName
          in: query
          schema:
            type: string
        - name: ownerId
          in: query
          schema:
            type: string
            format: int64
        - name: ownerName
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: name
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.Lookup'
      tags:
        - ContactLinkingService
  '/chat/{conversation_id}/link':
    post:
      operationId: ContactLinkingService_LinkContactToClient
      summary: LinkContactToClient creates connection between existing internal contact and external client.
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
        - name: contactId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.EmptyResponse'
      tags:
        - ContactLinkingService
  '/chat/{peer.type}/{peer.id}/messages':
    get:
      operationId: Catalog_GetHistory2
      summary: Query of the chat history
      parameters:
        - name: peer.type
          in: path
          description: Contact **type** provider.
          required: true
          schema:
            type: string
        - name: peer.id
          in: path
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          required: true
          schema:
            type: string
        - name: offsetId
          in: query
          description: Messages ONLY starting from the specified message ID
          schema:
            type: string
            format: int64
        - name: offsetDate
          in: query
          description: Messages ONLY been sent before the specified epochtime(milli).
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: Number of messages to return.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: message.text'
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: chatId
          in: query
          description: Unique chat dialog
          schema:
            type: string
        - name: peerName
          in: query
          description: Contact display **name**.
          schema:
            type: string
        - name: groupStringString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.ChatMessages'
      tags:
        - Catalog
  '/close_reason_groups/{close_reason_group_id}/close_reasons':
    get:
      operationId: ListCloseReasons
      summary: Retrieve a list of close reasons or search close reasons
      parameters:
        - name: close_reason_group_id
          in: path
          description: Close reason group ID filter
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReasonList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
    post:
      operationId: CreateCloseReason
      summary: Create a new close reason
      parameters:
        - name: close_reason_group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
  '/close_reason_groups/{close_reason_group_id}/close_reasons/{id}':
    delete:
      operationId: DeleteCloseReason
      summary: Delete a close reason
      parameters:
        - name: close_reason_group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
    get:
      operationId: LocateCloseReason
      summary: Locate a close reason by ID
      parameters:
        - name: close_reason_group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateCloseReasonResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
    patch:
      operationId: UpdateCloseReason2
      summary: Update an existing close reason
      parameters:
        - name: close_reason_group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
    put:
      operationId: UpdateCloseReason
      summary: Update an existing close reason
      parameters:
        - name: close_reason_group_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCloseReason'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CloseReason'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - CloseReasons
  /contacts:
    get:
      operationId: Contacts_SearchContacts
      summary: Search for Contact(s)
      description: |
        | Field       | Type 
        | ----------- | ---- 
        | **----------- READ-ONLY -----------** | 
        | `id`        | int64 
        | `ver`       | int32 
        | `etag`      | string 
        | **---------- OPERATIONAL ----------** | 
        | `created_at` | int64(epoch:milli) 
        | `created_by` | lookup(user) 
        | `updated_at` | int64(epoch:milli) 
        | `updated_by` | lookup(user) 
        | **---------- ATTRIBUTES -----------** | 
        | `name`      | name! 
        | `about`     | string 
        | `labels`    | list[label!] 
        | `emails`    | list[email!] 
        | `photos`    | list[photo!] 
        | `phones`    | list[phone!] 
        | `managers`  | list[manager!] 
        | `comments`  | list[comment!] 
        | `addresses` | list[address!] 
        | `languages` | list[language!] 
        | `timezones` | list[timezone!] 
        | `variables` | list[variable!] 
        | `imclients` | list[imClient!] 
      parameters:
        - name: page
          in: query
          description: |-
            Page number of result records.   _default(1); offset=(size*(page-1));_

            ```javascript
            let
                offset = 0
              , page = req.page
            ;
            if (page <= 0)
                page = 1;
            if (page > 1)
                offset = ((page-1)*size);
            // . . .
            ```
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: |-
            Limit of result page records count.   _default(16); limit=(size<=0?-1:size+1);_

            ```javascript
            const
                default = 16
              , maximum = 32
            ;
            let limit = req.size;
            if (limit <= 0)
                limit = default;
            if (maximum < limit)
                limit = maximum;
            // . . .
            ```
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            Used to query records within a set of `qin` fields, eg: name,emails{type},labels etc...
          schema:
            type: string
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          schema:
            type: array
            items:
              default: id
              pattern: '^[+|-|!]?\w+$'
              type: string
            uniqueItems: true
          explode: true
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
            uniqueItems: true
          explode: true
        - name: id
          in: query
          description: |-
            Records with unique IDentifier(s).
            Accept: `id` -or- `etag`.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: qin
          in: query
          description: |-
            [Q]uery[IN] is a set of search fields for term `q`.
            Default: `name{common_name}`.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: mode
          in: query
          description: |-
            Source access mode requirement.

             - READ: Can `fetch` record. [GET]
             - WRITE: Can `update` record. [PUT|PATCH]
             - DELETE: Can `delete` record. [DELETE]
          schema:
            type: string
            default: READ
            enum:
              - READ
              - WRITE
              - DELETE
        - name: notIdGroup
          in: query
          description: |-
            Excludes contacts that belong to the specified group ID.
            - Filters out contacts associated with the given `group_id`.
          schema:
            type: string
            format: int64
        - name: group
          in: query
          description: |-
            Filters contacts by the specified group(s).
            - Includes only contacts that belong to one or more of the given group Group(s).
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: owner
          in: query
          description: |-
            Filters contacts by the specified owner(s).
            - Includes only contacts whose owner matches one or more of the given Owner(s).
            - The owner ID corresponds to `contact_id` in the `directory.wbt_user` table.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: label
          in: query
          description: |-
            Filters contacts by the specified label(s).
            - Includes only contacts that have one or more of the given Label(s).
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: user
          in: query
          description: |-
            Filters contacts based on whether they are user-associated.
            - `true`  → Includes only user-associated contacts.
            - `false` → Includes only contacts that are NOT user-associated.
            - A contact is considered user-associated if it exists in `directory.wbt_user`.
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
      tags:
        - Contacts
    post:
      operationId: Contacts_CreateContact
      summary: Create NEW Contact
      parameters:
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Contact source changes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputContact'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
      tags:
        - Contacts
  /contacts/groups:
    get:
      operationId: Groups_ListGroups
      summary: Retrieve a list of groups or search groups
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: name
          in: query
          description: Filter by group name.
          schema:
            type: string
        - name: type
          in: query
          description: |-
            Filter by group type.

             - GROUP_TYPE_UNSPECIFIED: Default value
             - STATIC: Static group
             - DYNAMIC: Dynamic group
          schema:
            type: string
            default: GROUP_TYPE_UNSPECIFIED
            enum:
              - GROUP_TYPE_UNSPECIFIED
              - STATIC
              - DYNAMIC
        - name: enabled
          in: query
          description: Filter by only enabled group
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.GroupList'
      tags:
        - Groups
    post:
      operationId: Groups_CreateGroup
      summary: Create a new group
      requestBody:
        description: Request message for creating a new group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.CreateGroupRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
      tags:
        - Groups
  '/contacts/groups/conditions/{id}':
    delete:
      operationId: DynamicConditions_DeleteCondition
      summary: Delete a condition
      parameters:
        - name: id
          in: path
          description: |-
            The unique ID of the condition to delete.

            Unique ID of the condition.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
      tags:
        - DynamicConditions
    get:
      operationId: DynamicConditions_LocateCondition
      summary: Locate a condition by ID
      parameters:
        - name: id
          in: path
          description: Unique ID of the condition.
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LocateConditionResponse'
      tags:
        - DynamicConditions
    patch:
      operationId: DynamicConditions_UpdateCondition2
      summary: Update an existing condition
      parameters:
        - name: id
          in: path
          description: The unique ID of the condition to update.
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        description: Input details for the condition.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputCondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
      tags:
        - DynamicConditions
    put:
      operationId: DynamicConditions_UpdateCondition
      summary: Update an existing condition
      parameters:
        - name: id
          in: path
          description: The unique ID of the condition to update.
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        description: Input details for the condition.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputCondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
      tags:
        - DynamicConditions
  '/contacts/groups/contacts:attach':
    post:
      operationId: Groups_AddContactsToGroups
      summary: Attach contacts to multiple groups
      requestBody:
        description: Request message for adding contacts to a group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.AddContactsToGroupRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
      tags:
        - Groups
  /contacts/groups/dynamic:
    get:
      operationId: DynamicGroups_ListDynamicGroups
      summary: Retrieve a list of dynamic groups or search dynamic groups
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: name
          in: query
          description: Filter by group name.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroupList'
      tags:
        - DynamicGroups
    post:
      operationId: DynamicGroups_CreateDynamicGroup
      summary: Create a new dynamic group
      requestBody:
        description: Request message for creating a new dynamic group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.CreateDynamicGroupRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
      tags:
        - DynamicGroups
  '/contacts/groups/{group_id}/conditions':
    get:
      operationId: DynamicConditions_ListConditions
      summary: Retrieve a list of conditions
      parameters:
        - name: group_id
          in: path
          description: The ID of the group to which the conditions belong.
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: Search term for conditions.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ConditionList'
      tags:
        - DynamicConditions
    post:
      operationId: DynamicConditions_CreateCondition
      summary: Create a new condition
      parameters:
        - name: group_id
          in: path
          description: The ID of the group to which the condition belongs.
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.DynamicConditions.CreateConditionBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Condition'
      tags:
        - DynamicConditions
  '/contacts/groups/{group_id}/contact':
    delete:
      operationId: Groups_RemoveContactsFromGroup
      summary: Remove contacts from a group
      parameters:
        - name: group_id
          in: path
          description: The unique ID of the group.
          required: true
          schema:
            type: string
            format: int64
        - name: contactIds
          in: query
          description: List of contact IDs to remove from the group.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactList'
      tags:
        - Groups
  '/contacts/groups/{id}':
    delete:
      operationId: Groups_DeleteGroup
      summary: Delete a group
      parameters:
        - name: id
          in: path
          description: The unique ID of the group to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
      tags:
        - Groups
    get:
      operationId: Groups_LocateGroup
      summary: Locate a group by ID
      parameters:
        - name: id
          in: path
          description: The unique ID of the group to locate.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LocateGroupResponse'
      tags:
        - Groups
    patch:
      operationId: Groups_UpdateGroup2
      summary: Update an existing group
      parameters:
        - name: id
          in: path
          description: The unique ID of the group to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputGroup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
      tags:
        - Groups
    put:
      operationId: Groups_UpdateGroup
      summary: Update an existing group
      parameters:
        - name: id
          in: path
          description: The unique ID of the group to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.InputGroup'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Group'
      tags:
        - Groups
  '/contacts/groups/{id}/dynamic':
    delete:
      operationId: DynamicGroups_DeleteDynamicGroup
      summary: Delete a dynamic group
      parameters:
        - name: id
          in: path
          description: The unique ID of the dynamic group to delete.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
      tags:
        - DynamicGroups
    get:
      operationId: DynamicGroups_LocateDynamicGroup
      summary: Locate a dynamic group by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LocateDynamicGroupResponse'
      tags:
        - DynamicGroups
    patch:
      operationId: DynamicGroups_UpdateDynamicGroup2
      summary: Update an existing dynamic group
      parameters:
        - name: id
          in: path
          description: The unique ID of the dynamic group to update.
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        description: Input details for the dynamic group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
      tags:
        - DynamicGroups
    put:
      operationId: DynamicGroups_UpdateDynamicGroup
      summary: Update an existing dynamic group
      parameters:
        - name: id
          in: path
          description: The unique ID of the dynamic group to update.
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        description: Input details for the dynamic group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
      tags:
        - DynamicGroups
  /contacts/labels:
    get:
      operationId: Labels_GetLabels
      summary: Search for Contacts engaged Label(s).
      parameters:
        - name: page
          in: query
          description: Page number of result dataset records. offset = ((page-1)*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size+1)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: label.
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelTags'
      tags:
        - Labels
  '/contacts/{contact_id}/cases':
    get:
      operationId: SearchCases2
      summary: RPC method for searching cases.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID for filtering cases.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of results per page.
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: Query string for searching cases.
          schema:
            type: string
        - name: ids
          in: query
          description: List of specific case IDs to retrieve.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'Sorting criteria (e.g., field:asc).'
          schema:
            type: string
        - name: fields
          in: query
          description: List of fields to include in the response.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: filters
          in: query
          description: Key-value pairs for additional filtering.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.CaseList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - Cases
  '/contacts/{contact_id}/chat/messages':
    get:
      operationId: ContactsChatCatalog_GetContactChatHistory2
      parameters:
        - name: contact_id
          in: path
          description: Contact identificator
          required: true
          schema:
            type: string
        - name: offsetId
          in: query
          description: Messages ONLY starting from the specified message ID
          schema:
            type: string
            format: int64
        - name: offsetDate
          in: query
          description: Messages ONLY been sent before the specified epochtime(milli).
          schema:
            type: string
            format: int64
        - name: size
          in: query
          description: Number of messages to return.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: message.text'
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: chatId
          in: query
          description: Unique chat dialog
          schema:
            type: string
        - name: groupStringString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.GetContactChatHistoryResponse'
      tags:
        - ContactsChatCatalog
  '/contacts/{contact_id}/chat/{chat_id}/messages':
    get:
      operationId: ContactsChatCatalog_GetContactChatHistory
      parameters:
        - name: contact_id
          in: path
          description: Contact identificator
          required: true
          schema:
            type: string
        - name: chat_id
          in: path
          description: Unique chat dialog
          required: true
          schema:
            type: string
        - name: offsetId
          in: query
          description: Messages ONLY starting from the specified message ID
          schema:
            type: string
            format: int64
        - name: offsetDate
          in: query
          description: Messages ONLY been sent before the specified epochtime(milli).
          schema:
            type: string
            format: int64
        - name: size
          in: query
          description: Number of messages to return.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: 'Search term: message.text'
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: groupString
          in: query
          description: 'This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.chat.GetContactChatHistoryResponse'
      tags:
        - ContactsChatCatalog
  '/contacts/{contact_id}/emails':
    delete:
      operationId: Emails_DeleteEmails
      summary: Remove email address(es) of the contact.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique ID(s) to remove.
          required: true
          schema:
            type: array
            items:
              pattern: ^.+$
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
    get:
      operationId: Emails_ListEmails
      summary: Locates email address(es) of the contact.
      parameters:
        - name: contact_id
          in: path
          description: The Contact ID linked with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: email address.
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Link(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: primary
          in: query
          description: Primary email address only.
          schema:
            type: boolean
        - name: verified
          in: query
          description: Verified email addresses only.
          schema:
            type: boolean
        - name: typeId
          in: query
          description: Reference Object unique ID.
          schema:
            type: string
        - name: typeType
          in: query
          description: Reference Object well-known type.
          schema:
            type: string
        - name: typeName
          in: query
          description: Reference Object display name.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
    post:
      operationId: Emails_MergeEmails
      summary: Update or append email address(es) of the contact.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Fixed set of email address(es) to be linked with the contact.
          Email address(es) that conflicts(email) with already linked will be updated.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                type: object
              example:
                - email: user@domain
                  primary: true
                  type:
                    name: personal
                  verified: false
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
    put:
      operationId: Emails_ResetEmails
      summary: Resets all emails of the contact according to the input dataset.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of email address(es) to be linked with the contact.
          Email address(es) that are already linked with the contact
          but not given in here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                type: object
              example:
                - email: johndoe_43@gmail.com
                  type:
                    name: personal
                  verified: true
                - email: j.doe@x-company.org
                  etag: k0WqvUn4IJGnuCyG
                  primary: true
                  type:
                    id: '11'
                    name: business
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
  '/contacts/{contact_id}/emails/{etag}':
    delete:
      operationId: Emails_DeleteEmail
      summary: Remove the contact's email address link
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailAddress'
      tags:
        - Emails
    get:
      operationId: Emails_LocateEmail
      summary: Locate the email address link.
      parameters:
        - name: contact_id
          in: path
          description: Contact source ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: |-
            Unique mail address link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailAddress'
      tags:
        - Emails
    patch:
      operationId: Emails_UpdateEmail2
      summary: Update the contact's email address link details
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the email address link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email address.
                  type: string
                primary:
                  description: Indicates whether this phone number is default within other channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the email address.
                    Lookup value from CommunicationType dictionary.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - other
                verified:
                  type: boolean
                  title: |-
                    Indicate whether Contact, as a Person, realy owns this associated phone number.
                    In other words: whether Contact is reachable thru this 'email' communication channel ?
              example:
                email: user@domain
                etag: '1679792219687'
                primary: true
                type:
                  name: personal
                verified: false
              required:
                - email
              title: NEW Update of the email address link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
    put:
      operationId: Emails_UpdateEmail
      summary: Update the contact's email address link details
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the email address link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email address.
                  type: string
                primary:
                  description: Indicates whether this phone number is default within other channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the email address.
                    Lookup value from CommunicationType dictionary.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - other
                verified:
                  type: boolean
                  title: |-
                    Indicate whether Contact, as a Person, realy owns this associated phone number.
                    In other words: whether Contact is reachable thru this 'email' communication channel ?
              example:
                email: user@domain
                etag: '1679792219687'
                primary: true
                type:
                  name: personal
                verified: false
              required:
                - email
              title: NEW Update of the email address link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmailList'
      tags:
        - Emails
  '/contacts/{contact_id}/groups':
    delete:
      operationId: ContactGroups_DeleteContactGroups
      summary: Remove the Contact's group(s).
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique ID(s) to remove.
          required: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
    get:
      operationId: ContactGroups_ListContactGroups
      summary: List of the Contact's group(s).
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: query
          in: query
          description: |-
            Search term: group name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Record(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
    post:
      operationId: ContactGroups_MergeContactGroups
      summary: Associate more group(s) with the Contact.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
    put:
      operationId: ContactGroups_ResetContactGroups
      summary: Resets all groups of the contact according to the input dataset.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of group(s) to be linked with the contact.
          Group(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
  '/contacts/{contact_id}/groups/{etag}':
    delete:
      operationId: ContactGroups_DeleteContactGroup
      summary: Remove the Contact's group association.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroup'
      tags:
        - ContactGroups
    get:
      operationId: ContactGroups_LocateContactGroup
      summary: Locate the Contact's group association.
      parameters:
        - name: contact_id
          in: path
          description: Contact source ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: |-
            Unique group link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroup'
      tags:
        - ContactGroups
    patch:
      operationId: ContactGroups_UpdateContactGroup2
      summary: Update the Contact's group details.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the group link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  description: Group of contacts associated.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              title: NEW Update of the group link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
    put:
      operationId: ContactGroups_UpdateContactGroup
      summary: Update the Contact's group details.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the group link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  description: Group of contacts associated.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              title: NEW Update of the group link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
      tags:
        - ContactGroups
  '/contacts/{contact_id}/imclients':
    get:
      operationId: IMClients_ListIMClients
      summary: Search IM client links
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: IMClient.
            `?` - matches any one character
            `*` - matches 0 or more characters
            Search fields: {user,app}
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Link(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.IMClientList'
      tags:
        - IMClients
  '/contacts/{contact_id}/imclients/{id}':
    delete:
      operationId: IMClients_DeleteIMClient
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.EmptyResponse'
      tags:
        - IMClients
  '/contacts/{contact_id}/labels':
    delete:
      operationId: Labels_DeleteLabels
      summary: Remove Contact Labels associations.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique label(s).etag identifiers.
          required: true
          schema:
            type: array
            items:
              pattern: '^(\w+)(,\w+)*$'
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
      tags:
        - Labels
    get:
      operationId: Labels_ListLabels
      summary: Locate the Contact's associated Label(s).
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = ((page-1)*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size+1)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: label tag.
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Record(s) with unique ID or ETag.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
      tags:
        - Labels
    post:
      operationId: Labels_MergeLabels
      summary: Associate NEW Labels to the Contact.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Fixed set of label(s) to be linked with the contact.
          Label(s) that conflicts with already linked will be updated.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputLabel'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
      tags:
        - Labels
    put:
      operationId: Labels_ResetLabels
      summary: Reset Labels to fit the specified final set.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of labels(s) to be linked with the contact.
          Label(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputLabel'
                type: object
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.LabelList'
      tags:
        - Labels
  '/contacts/{contact_id}/managers':
    delete:
      operationId: Managers_DeleteManagers
      summary: Remove Contact Managers associations.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique ID(s) to remove.
          required: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: Manager dataset page.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/webitel.contacts.Manager'
                  type: object
      tags:
        - Managers
    get:
      operationId: Managers_ListManagers
      summary: Search the Contact's Managers.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result. offset = ((page-1)*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: user name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Record(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
      tags:
        - Managers
    post:
      operationId: Managers_MergeManagers
      summary: Associate new Managers to the Contact.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputManager'
                type: object
              example:
                - primary: true
                  user:
                    id: '357'
                    name: Bruce Wayne
                - user:
                    id: '354'
                    name: Johnny Doe
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
      tags:
        - Managers
    put:
      operationId: Managers_ResetManagers
      summary: Reset Managers to fit the specified final set.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of unique User(s) to be linked with the Contact.
          User(s) that are already linked with the Contact
          but not listed here will be removed.
          The first element will become `primary` if no other specified.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputManager'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
      tags:
        - Managers
  '/contacts/{contact_id}/managers/{etag}':
    delete:
      operationId: Managers_DeleteManager
      summary: Remove the contact's manager address link
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Manager'
      tags:
        - Managers
    get:
      operationId: Managers_LocateManager
      summary: Locate the manager address link.
      parameters:
        - name: contact_id
          in: path
          description: Contact source ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: |-
            Unique manager link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Manager'
      tags:
        - Managers
    patch:
      operationId: Managers_UpdateManager2
      summary: Update the contact's manager address link details
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the manager link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  description: Indicates whether this association must be default among others.
                  type: boolean
                user:
                  description: Responsible User.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              example:
                primary: true
                user:
                  id: '357'
                  name: Bruce Wayne
              title: NEW Update of the manager link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
      tags:
        - Managers
    put:
      operationId: Managers_UpdateManager
      summary: Update the contact's manager address link details
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the manager link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  description: Indicates whether this association must be default among others.
                  type: boolean
                user:
                  description: Responsible User.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              example:
                primary: true
                user:
                  id: '357'
                  name: Bruce Wayne
              title: NEW Update of the manager link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.ManagerList'
      tags:
        - Managers
  '/contacts/{contact_id}/phones':
    delete:
      operationId: Phones_DeletePhones
      summary: Remove the Contact's phone number association(s)
      parameters:
        - name: contact_id
          in: path
          description: The Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of linked ID(s) to be removed.
          required: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
    get:
      operationId: Phones_ListPhones
      summary: Search phone number(s)
      parameters:
        - name: contact_id
          in: path
          description: The Contact ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: phone number.
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Link(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: primary
          in: query
          description: Primary phone  only.
          schema:
            type: boolean
        - name: verified
          in: query
          description: Verified phone only.
          schema:
            type: boolean
        - name: typeId
          in: query
          description: Reference Object unique ID.
          schema:
            type: string
        - name: typeType
          in: query
          description: Reference Object well-known type.
          schema:
            type: string
        - name: typeName
          in: query
          description: Reference Object display name.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
    post:
      operationId: Phones_MergePhones
      summary: Associate phone number(s) with the Contact
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Fixed set of phone number(s) to be linked with the Contact.
          Phone number(s) that conflicts with already linked will be updated.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                type: object
              example:
                - number: +38 (099) 672-23-54
                  primary: true
                  type:
                    name: mobile
                  verified: false
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
    put:
      operationId: Phones_ResetPhones
      summary: Reset the Contact's phone numbers to fit given data set.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of phone number(s) to be linked with the contact.
          Phone number(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                type: object
              example:
                - etag: '1679792219687'
                  number: +38 (099) 672-23-54
                  primary: true
                  type:
                    name: personal
                  verified: true
                - number: +1 482 555-36558
                  type:
                    name: business
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
  '/contacts/{contact_id}/phones/{etag}':
    delete:
      operationId: Phones_DeletePhone
      summary: Remove the Contact's phone number
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique link ID to be removed.
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
      tags:
        - Phones
    get:
      operationId: Phones_LocatePhone
      summary: Locate the Contact's phone number association.
      parameters:
        - name: contact_id
          in: path
          description: Reference Contact unique ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: 'Fields [Q]uery to build result record.'
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
      tags:
        - Phones
    patch:
      operationId: Phones_UpdatePhone2
      summary: Update the Contact's phone number association details
      parameters:
        - name: contact_id
          in: path
          description: The Contact ID to be associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the phone number details.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  description: The phone number.
                  type: string
                primary:
                  description: Indicates whether this phone number is default within other channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the phone number.
                    Reference on CommunicationType dictionary.
                    Used for outbound routing while dialup a phone number.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - mobile
                    - homeFax
                    - workFax
                    - otherFax
                    - pager
                    - workMobile
                    - workPager
                    - main
                    - googleVoice
                    - other
                verified:
                  type: boolean
                  title: |-
                    Indicate whether Contact, as a Person, realy owns this associated phone number.
                    In other words: whether Contact is reachable thru this 'phone' communication channel ?
              required:
                - number
              title: NEW Update of the phone number details.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
    put:
      operationId: Phones_UpdatePhone
      summary: Update the Contact's phone number association details
      parameters:
        - name: contact_id
          in: path
          description: The Contact ID to be associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the phone number details.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  description: The phone number.
                  type: string
                primary:
                  description: Indicates whether this phone number is default within other channels of the same type(phone).
                  type: boolean
                type:
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
                  title: |-
                    The type of the phone number.
                    Reference on CommunicationType dictionary.
                    Used for outbound routing while dialup a phone number.
                    The type can be custom or one of these predefined values:
                    - home
                    - work
                    - mobile
                    - homeFax
                    - workFax
                    - otherFax
                    - pager
                    - workMobile
                    - workPager
                    - main
                    - googleVoice
                    - other
                verified:
                  type: boolean
                  title: |-
                    Indicate whether Contact, as a Person, realy owns this associated phone number.
                    In other words: whether Contact is reachable thru this 'phone' communication channel ?
              required:
                - number
              title: NEW Update of the phone number details.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.PhoneList'
      tags:
        - Phones
  '/contacts/{contact_id}/timeline':
    get:
      operationId: Timeline_GetTimeline
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
            format: int64
        - name: size
          in: query
          schema:
            type: string
            format: int64
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
        - name: type
          in: query
          schema:
            type: array
            items:
              enum:
                - chat
                - call
                - email
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.GetTimelineResponse'
      tags:
        - Timeline
  '/contacts/{contact_id}/timeline/counter':
    get:
      operationId: Timeline_GetTimelineCounter
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.GetTimelineCounterResponse'
      tags:
        - Timeline
  '/contacts/{contact_id}/timezones':
    delete:
      operationId: Timezones_DeleteTimezones
      summary: Remove the Contact's timezone(s).
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique ID(s) to remove.
          required: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
    get:
      operationId: Timezones_ListTimezones
      summary: List of the Contact's timezone(s).
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Record(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: primary
          in: query
          description: Primary timezone only.
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
    post:
      operationId: Timezones_MergeTimezones
      summary: Associate more timezone(s) with the Contact.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Array of the unique User(s) to associate with the Contact.
          Any duplicate of an already linked user{id} will result in an error.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
    put:
      operationId: Timezones_ResetTimezones
      summary: Resets all timezones of the contact according to the input dataset.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Final set of timezone(s) to be linked with the contact.
          Timezone(s) that are already linked with the contact
          but not given in here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
  '/contacts/{contact_id}/timezones/{etag}':
    delete:
      operationId: Timezones_DeleteTimezone
      summary: Remove the Contact's timezone association.
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Timezone'
      tags:
        - Timezones
    get:
      operationId: Timezones_LocateTimezone
      summary: Locate the Contact's timezone association.
      parameters:
        - name: contact_id
          in: path
          description: Contact source ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: |-
            Unique timezone link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Timezone'
      tags:
        - Timezones
    patch:
      operationId: Timezones_UpdateTimezone2
      summary: Update the Contact's timezone details.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the timezone link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  description: Indicates whether this association must be default among others.
                  type: boolean
                timezone:
                  description: Timezone dictionary reference value associated.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              title: NEW Update of the timezone link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
    put:
      operationId: Timezones_UpdateTimezone
      summary: Update the Contact's timezone details.
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the timezone link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  description: Indicates whether this association must be default among others.
                  type: boolean
                timezone:
                  description: Timezone dictionary reference value associated.
                  $ref: '#/components/schemas/webitel.contacts.Lookup'
              title: NEW Update of the timezone link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.TimezoneList'
      tags:
        - Timezones
  '/contacts/{contact_id}/variables':
    delete:
      operationId: Variables_DeleteVariables
      summary: Remove variable(s) of the contact
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: etag
          in: query
          description: Set of unique ID(s) to remove.
          required: true
          schema:
            type: array
            items:
              pattern: ^.+$
              type: string
            uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
    get:
      operationId: Variables_ListVariables
      summary: List variables of the contact
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result. offset = ((page-1)*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term: variable key;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: Record(s) with unique ID only.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
    post:
      operationId: Variables_MergeVariables
      summary: Update or append variables to the contact
      parameters:
        - name: contact_id
          in: path
          description: Link contact ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Fixed object of unique variables to associate with a Contact.
          Each individual key of an object represents a separate variable.
          Variable{key} already linked with the Contact and listed here will be updated.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputVariable'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
    put:
      operationId: Variables_ResetVariables
      summary: Reset all variables of the contact
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: |-
          Fixed object of unique variables to associate with a Contact.
          Each individual key of an object represents a separate variable.
          Variable{key} already linked with the Contact but not listed here will be removed.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.contacts.InputVariable'
                type: object
              minItems: 1
              uniqueItems: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
  '/contacts/{contact_id}/variables/{etag}':
    delete:
      operationId: Variables_DeleteVariable
      summary: Remove the contact's variable by etag
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Variable'
      tags:
        - Variables
    patch:
      operationId: Variables_UpdateVariable2
      summary: Update contact variable
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Variable update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  description: NEW Key.
                  type: string
                  pattern: ^\w+$
                value:
                  description: NEW Value.
              example:
                key: var_rename
                value:
                  - string_item
                  - - 3
                    - 7
                  - false
                  - null
              required:
                - key
              title: NEW Variable update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
    put:
      operationId: Variables_UpdateVariable
      summary: Update contact variable
      parameters:
        - name: contact_id
          in: path
          description: Contact ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Variable update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  description: NEW Key.
                  type: string
                  pattern: ^\w+$
                value:
                  description: NEW Value.
              example:
                key: var_rename
                value:
                  - string_item
                  - - 3
                    - 7
                  - false
                  - null
              required:
                - key
              title: NEW Variable update.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.VariableList'
      tags:
        - Variables
  '/contacts/{etag}':
    delete:
      operationId: Contacts_DeleteContact
      summary: Remove Contact source
      parameters:
        - name: etag
          in: path
          description: Unique ID of the latest version of a resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
      tags:
        - Contacts
    get:
      operationId: Contacts_LocateContact
      summary: Locate Contact source
      parameters:
        - name: etag
          in: path
          description: |-
            The Contact source IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: mode
          in: query
          description: |-
            The requirement of a special access mode to the Source.

             - READ: Can `fetch` record. [GET]
             - WRITE: Can `update` record. [PUT|PATCH]
             - DELETE: Can `delete` record. [DELETE]
          schema:
            type: string
            default: READ
            enum:
              - READ
              - WRITE
              - DELETE
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
      tags:
        - Contacts
    patch:
      operationId: Contacts_UpdateContact
      summary: NEW Update of the Contact source
      parameters:
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Contact source changes
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                about:
                  description: |-
                    BIO. Short description about the Contact person.
                    OPTIONAL. Multi-lined text.
                  type: string
                comments:
                  description: Publish NEW comment(s) for this Contact.
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputComment'
                    type: object
                custom:
                  description: Custom extension data fields.
                  type: object
                emails:
                  description: The Contact's email address(es).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
                    type: object
                groups:
                  description: The Contact's associated group(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
                    type: object
                imclients:
                  description: 'The contact''s [I]nstant[M]essaging clients.'
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputIMClient'
                    type: object
                labels:
                  description: The Contact's associated label(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputLabel'
                    type: object
                languages:
                  description: A Contact's locale preference(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputLanguage'
                    type: object
                managers:
                  description: The Contact's internal manager(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputManager'
                    type: object
                name:
                  $ref: '#/components/schemas/webitel.contacts.InputName'
                  title: The Contact's name. Singleton
                phones:
                  description: The Contact's phone numbers.
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
                    type: object
                photos:
                  description: Output only. The Contact's photo(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputPhoto'
                    type: object
                  readOnly: true
                timezones:
                  description: The Contact's timezone preference(s).
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputTimezone'
                    type: object
                variables:
                  description: Arbitrary client data that is populated by clients.
                  type: array
                  items:
                    $ref: '#/components/schemas/webitel.contacts.InputVariable'
                    type: object
              title: NEW Contact source changes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.contacts.Contact'
      tags:
        - Contacts
  /customer:
    get:
      operationId: Customers_GetCustomer
      summary: 'rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}'
      parameters:
        - name: id
          in: query
          description: |-
            Available Filters

            show by customer id; serial number (uuid)
          schema:
            type: string
        - name: valid
          in: query
          description: show if valid only!
          schema:
            type: boolean
        - name: domainId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: domainName
          in: query
          description: display name
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            Request Controls

            serial,
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetCustomerResponse'
      tags:
        - Customers
    put:
      operationId: Customers_UpdateCustomer
      parameters:
        - name: organization
          in: query
          description: '[optional] e.g.: Example Org.'
          schema:
            type: string
        - name: logoPicture
          in: query
          description: '[optional] logo source image'
          schema:
            type: string
            format: byte
        - name: certificate
          in: query
          description: '[optional] raw bytes protobuf::base64.RawStdEncoding != certificate::base64.StdEncoding'
          schema:
            type: string
            format: byte
        - name: revoke
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateCustomerResponse'
      tags:
        - Customers
  '/customer/{customer_id}/license':
    get:
      operationId: Customers_LicenseUsage
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: |-
            ----- Search Options ----- //

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: set of output fields
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: userId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: display name
          schema:
            type: string
        - name: domainId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: domainName
          in: query
          description: display name
          schema:
            type: string
        - name: id
          in: query
          description: by serial number(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: product
          in: query
          description: by product name(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: valid
          in: query
          description: |-
            view: all|valid|grantable

            show: available to be granted
          schema:
            type: boolean
        - name: q
          in: query
          description: 'filter: term of search'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
      tags:
        - Customers
  '/customer/{id}':
    get:
      operationId: Customers_GetCustomer2
      summary: 'rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}'
      parameters:
        - name: id
          in: path
          description: |-
            Available Filters

            show by customer id; serial number (uuid)
          required: true
          schema:
            type: string
        - name: valid
          in: query
          description: show if valid only!
          schema:
            type: boolean
        - name: domainId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: domainName
          in: query
          description: display name
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            Request Controls

            serial,
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetCustomerResponse'
      tags:
        - Customers
  /devices:
    delete:
      operationId: Devices_DeleteDevice2
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: int64
        - name: permanent
          in: query
          schema:
            type: boolean
      requestBody:
        description: bulk
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDeviceResponse'
      tags:
        - Devices
    get:
      operationId: Devices_SearchDevice
      parameters:
        - name: size
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: ids
          in: query
          description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: 'term-of-search: lookup[name,account,hotdesk,brand,model,mac,ip]'
          schema:
            type: string
        - name: name
          in: query
          description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          schema:
            type: string
        - name: access
          in: query
          description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          schema:
            type: string
        - name: account
          in: query
          description: |-
            ----- Device-Specific Filters ----------------

            substring like '%name%'
          schema:
            type: string
        - name: hotdesk
          in: query
          description: 'filter: has hotdesk (=pattern); is hotdesk (=*)'
          schema:
            type: string
        - name: userId
          in: query
          description: Object ID
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: Display Name
          schema:
            type: string
        - name: mac
          in: query
          description: 'filter: by MAC address'
          schema:
            type: string
        - name: ip
          in: query
          description: 'filter: by IP address'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchDeviceResponse'
      tags:
        - Devices
    post:
      operationId: Devices_CreateDevice
      requestBody:
        description: string password = 2;
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Device'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateDeviceResponse'
      tags:
        - Devices
  '/devices/{device.id}':
    patch:
      operationId: Devices_UpdateDevice2
      parameters:
        - name: device.id
          in: path
          description: object id
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: 'PATCH: partial update'
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Device profile
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  description: username
                  type: string
                  title: credentials
                brand:
                  description: vendor brand name
                  type: string
                  title: provision
                createdAt:
                  type: string
                  format: int64
                  title: unix
                createdBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deletedAt:
                  type: string
                  format: int64
                  title: unix
                deletedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                hotdesk:
                  description: act as a hotdesk
                  type: boolean
                  title: 'Hotdesk: this workstation aliases'
                hotdesks:
                  type: array
                  items:
                    type: string
                  title: associated aliases
                ip:
                  type: string
                loggedIn:
                  type: string
                  format: int64
                  title: |-
                    caller profile
                     webitel.adt.caller caller = 4;
                mac:
                  type: string
                  title: static
                model:
                  type: string
                name:
                  description: display name
                  type: string
                  title: |-
                    kind of
                    DeviceType type = 19;
                password:
                  type: string
                  title: password
                provision:
                  type: object
                  additionalProperties:
                    type: string
                  title: provision extra data
                reged:
                  type: boolean
                  title: |-
                    TODO: something like PresenceStatus instead of Registration
                     repeated Registration contacts = 16;
                updatedAt:
                  type: string
                  format: int64
                  title: unix
                updatedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                user:
                  $ref: '#/components/schemas/api.UserId'
                  title: '[optional] The user that ''owns'' the device;'
              title: Device profile
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDeviceResponse'
      tags:
        - Devices
    put:
      operationId: Devices_UpdateDevice
      parameters:
        - name: device.id
          in: path
          description: object id
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: 'PATCH: partial update'
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Device profile
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  description: username
                  type: string
                  title: credentials
                brand:
                  description: vendor brand name
                  type: string
                  title: provision
                createdAt:
                  type: string
                  format: int64
                  title: unix
                createdBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deletedAt:
                  type: string
                  format: int64
                  title: unix
                deletedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                hotdesk:
                  description: act as a hotdesk
                  type: boolean
                  title: 'Hotdesk: this workstation aliases'
                hotdesks:
                  type: array
                  items:
                    type: string
                  title: associated aliases
                ip:
                  type: string
                loggedIn:
                  type: string
                  format: int64
                  title: |-
                    caller profile
                     webitel.adt.caller caller = 4;
                mac:
                  type: string
                  title: static
                model:
                  type: string
                name:
                  description: display name
                  type: string
                  title: |-
                    kind of
                    DeviceType type = 19;
                password:
                  type: string
                  title: password
                provision:
                  type: object
                  additionalProperties:
                    type: string
                  title: provision extra data
                reged:
                  type: boolean
                  title: |-
                    TODO: something like PresenceStatus instead of Registration
                     repeated Registration contacts = 16;
                updatedAt:
                  type: string
                  format: int64
                  title: unix
                updatedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                user:
                  $ref: '#/components/schemas/api.UserId'
                  title: '[optional] The user that ''owns'' the device;'
              title: Device profile
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDeviceResponse'
      tags:
        - Devices
  '/devices/{device.id}/registered':
    get:
      operationId: Devices_ListRegistrations
      parameters:
        - name: device.id
          in: path
          description: Object ID
          required: true
          schema:
            type: string
            format: int64
        - name: userId
          in: query
          description: Object ID
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: Display Name
          schema:
            type: string
        - name: deviceName
          in: query
          description: Display Name
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListRegistrationsResponse'
      tags:
        - Devices
  '/devices/{device.id}/users/audit':
    get:
      operationId: Devices_SearchDeviceAudit
      summary: '----- Details (1:M) ----------------------------------------------'
      parameters:
        - name: device.id
          in: path
          description: Object ID
          required: true
          schema:
            type: string
            format: int64
        - name: userId
          in: query
          description: Object ID
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: Display Name
          schema:
            type: string
        - name: deviceName
          in: query
          description: Display Name
          schema:
            type: string
        - name: timeFrom
          in: query
          description: |-
            Filter: timing range (optional)

            unix milliseconds
          schema:
            type: string
            format: int64
        - name: timeTill
          in: query
          description: unix milliseconds
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Search Options
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeviceAuditResponse'
      tags:
        - Devices
  '/devices/{id}':
    delete:
      operationId: Devices_DeleteDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: permanent
          in: query
          schema:
            type: boolean
        - name: ids
          in: query
          description: bulk
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDeviceResponse'
      tags:
        - Devices
    get:
      operationId: Devices_ReadDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: output selection
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDeviceResponse'
      tags:
        - Devices
  '/dictionaries/{repo}':
    delete:
      operationId: Dictionaries_DeleteData
      summary: Delete a dictionary records.
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`]'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result dataset.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: '[`record.id`]'
          required: true
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
      tags:
        - Dictionaries
    get:
      operationId: Dictionaries_SearchData
      summary: Lookup a dictionary dataset.
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`]'
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: |-
            Number of result records (per page).
            Default: 16.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: |-
            Page number of result set of records.
            Default: 1.
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          schema:
            type: array
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
          explode: true
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
              uniqueItems: true
          explode: true
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          schema:
            type: string
        - name: id
          in: query
          description: '[`record.id`]'
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
      tags:
        - Dictionaries
    post:
      operationId: Dictionaries_CreateData
      summary: Create a dictionary record.
      description: '(Record) {'
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`]'
          required: true
          schema:
            type: string
      requestBody:
        description: Record data.
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                capital:
                  id: 44
                  name: Київ
                code: 38
                name: Україна
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
      tags:
        - Dictionaries
  '/dictionaries/{repo}/csv':
    post:
      operationId: Dictionaries_ImportCSV
      summary: Import dataset from CSV file.
      parameters:
        - name: repo
          in: path
          description: '`types.repo`'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: byte
                  title: CSV data
                fields:
                  type: object
                  additionalProperties:
                    format: int64
                    type: integer
                  title: 'map < field, column > index'
                lineBegin:
                  type: integer
                  format: int64
                lineEnd:
                  type: integer
                  format: int64
                onDataError:
                  $ref: '#/components/schemas/webitel.proto.data.ImportCSVRequest.action'
                onEmptyLine:
                  $ref: '#/components/schemas/webitel.proto.data.ImportCSVRequest.action'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
      tags:
        - Dictionaries
  '/dictionaries/{repo}/{id}':
    delete:
      operationId: Dictionaries_DeleteData2
      summary: Delete a dictionary records.
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`]'
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: '[`record.id`]'
          required: true
          schema:
            type: array
            items:
              type: string
            minItems: 1
          style: simple
        - name: fields
          in: query
          description: Fields to be retrieved into result dataset.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Dataset'
      tags:
        - Dictionaries
    get:
      operationId: Dictionaries_LocateData
      summary: Locate a dictionary record.
      description: '(Record) {'
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`]'
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: '[`record.id`]'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
              uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
      tags:
        - Dictionaries
    patch:
      operationId: Dictionaries_UpdateData
      summary: Update a dictionary record.
      description: '(Record) {'
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`] data source'
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: '[`record.id`] for update'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Record data fields changes.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
      tags:
        - Dictionaries
    put:
      operationId: Dictionaries_UpdateData2
      summary: Update a dictionary record.
      description: '(Record) {'
      parameters:
        - name: repo
          in: path
          description: '[`types.repo`] data source'
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: '[`record.id`] for update'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: Record data fields changes.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
      tags:
        - Dictionaries
  /domain:
    delete:
      operationId: Domains_DeleteDomain
      parameters:
        - name: domain
          in: query
          schema:
            type: string
        - name: dc
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDomainResponse'
      tags:
        - Domains
    get:
      operationId: Domains_ReadDomain
      parameters:
        - name: domain
          in: query
          schema:
            type: string
        - name: dc
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDomainResponse'
      tags:
        - Domains
  /domains:
    get:
      operationId: Domains_SearchDomains
      parameters:
        - name: domain
          in: query
          description: like
          schema:
            type: string
        - name: fields
          in: query
          description: attrs
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: page
          in: query
          schema:
            type: string
            format: int64
        - name: size
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchDomainsResponse'
      tags:
        - Domains
    post:
      operationId: Domains_CreateDomain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateDomainRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateDomainResponse'
      tags:
        - Domains
  '/domains/{dc}':
    delete:
      operationId: Domains_DeleteDomain2
      parameters:
        - name: dc
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domain
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteDomainResponse'
      tags:
        - Domains
    get:
      operationId: Domains_ReadDomain2
      parameters:
        - name: dc
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domain
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadDomainResponse'
      tags:
        - Domains
  '/domains/{domain.dc}':
    patch:
      operationId: Domains_UpdateDomain2
      parameters:
        - name: domain.dc
          in: path
          description: component
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDomainResponse'
      tags:
        - Domains
    put:
      operationId: Domains_UpdateDomain
      parameters:
        - name: domain.dc
          in: path
          description: component
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateDomainResponse'
      tags:
        - Domains
  /email/profile:
    get:
      operationId: SearchEmailProfile
      summary: Search EmailProfile
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListEmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
    post:
      operationId: CreateEmailProfile
      summary: Create EmailProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateEmailProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
  '/email/profile/{id}':
    delete:
      operationId: DeleteEmailProfile
      summary: Remove EmailProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
    get:
      operationId: ReadEmailProfile
      summary: EmailProfile item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
    patch:
      operationId: PatchEmailProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.EmailProfileService.PatchEmailProfileBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
    put:
      operationId: UpdateEmailProfile
      summary: Update EmailProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.EmailProfileService.UpdateEmailProfileBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.EmailProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
  '/email/profile/{id}/login':
    get:
      operationId: LoginEmailProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.LoginEmailProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
  '/email/profile/{id}/logout':
    patch:
      operationId: LogoutEmailProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.LogoutEmailProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
  '/email/profile/{id}/test':
    get:
      operationId: TestEmailProfile
      summary: EmailProfile check login
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TestEmailProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - EmailProfileService
  /hook:
    get:
      operationId: SearchWebHook
      summary: List of WebHook
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListWebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
    post:
      operationId: CreateWebHook
      summary: Create WebHook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateWebHookRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
  '/hook/{id}':
    delete:
      operationId: DeleteWebHook
      summary: Remove WebHook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
    get:
      operationId: ReadWebHook
      summary: WebHook item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
    patch:
      operationId: PatchWebHook
      summary: Patch WebHook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.WebHookService.PatchWebHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
    put:
      operationId: UpdateWebHook
      summary: Update WebHook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.WebHookService.UpdateWebHookBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.WebHook'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - WebHookService
  /ldap:
    delete:
      operationId: LDAP_DeleteLDAPCatalog2
      summary: Delete LDAP profile(s) ...
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DeleteLDAPRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
    get:
      operationId: LDAP_SearchLDAPCatalog
      summary: Search for LDAP directories ...
      parameters:
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: 'term-of-search: lookup[name]'
          schema:
            type: string
        - name: name
          in: query
          description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          schema:
            type: string
        - name: access
          in: query
          description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchLDAPResponse'
      tags:
        - LDAP
    post:
      operationId: LDAP_CreateLDAPCatalog
      summary: Create LDAP profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAPCatalog'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
  /ldap/search:
    get:
      operationId: LDAP_LDAPSearch4
      summary: LDAPSearch performs LDAP Search operation ...
      parameters:
        - name: catalogId
          in: query
          description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          schema:
            type: string
            format: int64
        - name: url
          in: query
          description: |-
            Optional. URL to establish connection to LDAP catalog

            URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]
          schema:
            type: string
        - name: tlsPem
          in: query
          description: |-
            TODO: (!)

            base64
          schema:
            type: string
            format: byte
        - name: bind
          in: query
          description: |-
            ----- BIND: Authorization -----

            authorization method e.g.: SIMPLE, SAML, NTLM, etc.
          schema:
            type: string
        - name: username
          in: query
          description: bind_dn
          schema:
            type: string
        - name: password
          in: query
          description: password
          schema:
            type: string
        - name: baseObject
          in: query
          description: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          schema:
            type: string
        - name: scope
          in: query
          description: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          schema:
            type: integer
            format: int32
        - name: derefAliases
          in: query
          description: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          schema:
            type: integer
            format: int32
        - name: sizeLimit
          in: query
          description: 'INTEGER (0 ..  maxInt),'
          schema:
            type: string
            format: int64
        - name: timeLimit
          in: query
          description: 'INTEGER (0 ..  maxInt),'
          schema:
            type: string
            format: int64
        - name: typesOnly
          in: query
          description: 'BOOLEAN,'
          schema:
            type: boolean
        - name: filter
          in: query
          description: 'Filter,'
          schema:
            type: string
        - name: attributes
          in: query
          description: AttributeSelection
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
      tags:
        - LDAP
    post:
      operationId: LDAP_LDAPSearch3
      summary: LDAPSearch performs LDAP Search operation ...
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAPSearchRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
      tags:
        - LDAP
  '/ldap/{catalog.id}':
    patch:
      operationId: LDAP_UpdateLDAPCatalog2
      summary: Update LDAP profile details
      parameters:
        - name: catalog.id
          in: path
          description: |-
            identity
            int64 dc = 1;
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
    put:
      operationId: LDAP_UpdateLDAPCatalog
      summary: Update LDAP profile details
      parameters:
        - name: catalog.id
          in: path
          description: |-
            identity
            int64 dc = 1;
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
  '/ldap/{catalog.id}/templates':
    post:
      operationId: LDAP_CreateLDAPTemplate
      parameters:
        - name: catalog.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.CreateLDAPTemplateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
      tags:
        - LDAP
  '/ldap/{catalog_id}/rsync':
    get:
      operationId: LDAP_SearchLDAProcess
      summary: '(ResyncLDAPResponse) {'
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search process by unique .id
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: OPTIONAL. Filter(s) SET
          schema:
            type: string
        - name: template
          in: query
          schema:
            type: string
        - name: objclass
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: failed
          in: query
          description: WITH .errs
          schema:
            type: boolean
        - name: enabled
          in: query
          description: created|updated
          schema:
            type: boolean
        - name: disabled
          in: query
          description: deleted
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcessResponse'
      tags:
        - LDAP
    post:
      operationId: LDAP_ResyncLDAPCatalog
      summary: Resync LDAP directory catalog changes ...
      description: '(ResyncLDAPResponse) {'
      parameters:
        - name: catalog_id
          in: path
          description: |-
            LDAP Catalog unique IDentifier to sync with

            catalog_id
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.ResyncLDAPCatalogBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcess'
      tags:
        - LDAP
  '/ldap/{catalog_id}/rsync/{id}':
    get:
      operationId: LDAP_LocateLDAProcess
      summary: '(ResyncLDAPResponse) {'
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search process by unique .id
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: OPTIONAL. Filter(s) SET
          schema:
            type: string
        - name: template
          in: query
          schema:
            type: string
        - name: objclass
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: failed
          in: query
          description: WITH .errs
          schema:
            type: boolean
        - name: enabled
          in: query
          description: created|updated
          schema:
            type: boolean
        - name: disabled
          in: query
          description: deleted
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAProcess'
      tags:
        - LDAP
  '/ldap/{catalog_id}/search':
    get:
      operationId: LDAP_LDAPSearch2
      summary: LDAPSearch performs LDAP Search operation ...
      parameters:
        - name: catalog_id
          in: path
          description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          required: true
          schema:
            type: string
            format: int64
        - name: url
          in: query
          description: |-
            Optional. URL to establish connection to LDAP catalog

            URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]
          schema:
            type: string
        - name: tlsPem
          in: query
          description: |-
            TODO: (!)

            base64
          schema:
            type: string
            format: byte
        - name: bind
          in: query
          description: |-
            ----- BIND: Authorization -----

            authorization method e.g.: SIMPLE, SAML, NTLM, etc.
          schema:
            type: string
        - name: username
          in: query
          description: bind_dn
          schema:
            type: string
        - name: password
          in: query
          description: password
          schema:
            type: string
        - name: baseObject
          in: query
          description: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
          schema:
            type: string
        - name: scope
          in: query
          description: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
          schema:
            type: integer
            format: int32
        - name: derefAliases
          in: query
          description: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
          schema:
            type: integer
            format: int32
        - name: sizeLimit
          in: query
          description: 'INTEGER (0 ..  maxInt),'
          schema:
            type: string
            format: int64
        - name: timeLimit
          in: query
          description: 'INTEGER (0 ..  maxInt),'
          schema:
            type: string
            format: int64
        - name: typesOnly
          in: query
          description: 'BOOLEAN,'
          schema:
            type: boolean
        - name: filter
          in: query
          description: 'Filter,'
          schema:
            type: string
        - name: attributes
          in: query
          description: AttributeSelection
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
      tags:
        - LDAP
    post:
      operationId: LDAP_LDAPSearch
      summary: LDAPSearch performs LDAP Search operation ...
      parameters:
        - name: catalog_id
          in: path
          description: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.LDAPSearchBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPSearchResponse'
      tags:
        - LDAP
  '/ldap/{catalog_id}/templates':
    delete:
      operationId: LDAP_DeleteLDAPTemplate2
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
      tags:
        - LDAP
    get:
      operationId: LDAP_SearchLDAPTemplate
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: OPTIONAL. Filter(s) SET
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: baseDn
          in: query
          schema:
            type: string
        - name: objclass
          in: query
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: disabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
      tags:
        - LDAP
  '/ldap/{catalog_id}/templates/{id}':
    delete:
      operationId: LDAP_DeleteLDAPTemplate
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplateResponse'
      tags:
        - LDAP
    get:
      operationId: LDAP_LocateLDAPTemplate
      parameters:
        - name: catalog_id
          in: path
          description: REQUIRED. Parent LDAP catalog IDentifier
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: OPTIONAL. Filter(s) SET
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: baseDn
          in: query
          schema:
            type: string
        - name: objclass
          in: query
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: disabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
      tags:
        - LDAP
  '/ldap/{id}':
    delete:
      operationId: LDAP_DeleteLDAPCatalog
      summary: Delete LDAP profile(s) ...
      parameters:
        - name: id
          in: path
          description: catalog id
          required: true
          schema:
            type: string
            format: int64
        - name: relatedObjects
          in: query
          description: WITH objects bound to ?
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
    get:
      operationId: LDAP_LocateLDAPCatalog
      summary: Read LDAP catalog profile by .id
      parameters:
        - name: id
          in: path
          description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: 'term-of-search: lookup[name]'
          schema:
            type: string
        - name: name
          in: query
          description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          schema:
            type: string
        - name: access
          in: query
          description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPCatalog'
      tags:
        - LDAP
  '/ldap/{template.catalog.id}/templates/{template.id}':
    patch:
      operationId: LDAP_UpdateLDAPTemplate
      parameters:
        - name: template.catalog.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: template.id
          in: path
          description: ID unique
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
      tags:
        - LDAP
    put:
      operationId: LDAP_UpdateLDAPTemplate2
      parameters:
        - name: template.catalog.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: template.id
          in: path
          description: ID unique
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LDAPTemplate'
      tags:
        - LDAP
  /license:
    get:
      operationId: Customers_LicenseUsage2
      parameters:
        - name: size
          in: query
          description: |-
            ----- Search Options ----- //

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: set of output fields
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: userId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: display name
          schema:
            type: string
        - name: domainId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: domainName
          in: query
          description: display name
          schema:
            type: string
        - name: customerId
          in: query
          schema:
            type: string
        - name: id
          in: query
          description: by serial number(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: product
          in: query
          description: by product name(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: valid
          in: query
          description: |-
            view: all|valid|grantable

            show: available to be granted
          schema:
            type: boolean
        - name: q
          in: query
          description: 'filter: term of search'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
      tags:
        - Customers
  /logger/available_objects:
    get:
      operationId: ConfigService_ReadSystemObjects
      parameters:
        - name: includeExisting
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerSystemObjects'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
  /logger/config:
    get:
      operationId: ConfigService_SearchConfig
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: object
          in: query
          description: NOT USED.
          schema:
            type: array
            items:
              enum:
                - cc_queue
                - schema
                - users
                - devices
                - calendars
                - cc_list
                - cc_team
                - cc_agent
                - cc_resource
                - cc_resource_group
                - chat_bots
                - cases
                - contacts
                - cc_list_number
                - case_comments
                - record_file
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfigs'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
    post:
      operationId: ConfigService_CreateConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerCreateConfigRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
  '/logger/config/{config_id}':
    delete:
      operationId: ConfigService_DeleteConfig
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerEmpty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
    get:
      operationId: ConfigService_ReadConfig
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
    patch:
      operationId: ConfigService_PatchConfig
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerPatchConfigRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
    put:
      operationId: ConfigService_UpdateConfig
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loggerUpdateConfigRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
  '/logger/config/{config_id}/logs':
    get:
      operationId: LoggerService_SearchLogByConfigId
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: userId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: action
          in: query
          schema:
            type: array
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
          explode: true
        - name: userIp
          in: query
          schema:
            type: string
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - LoggerService
  '/logger/user/{user_id}/logs':
    get:
      operationId: LoggerService_SearchLogByUserId
      parameters:
        - name: user_id
          in: path
          description: REQUIRED filter
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: objectId
          in: query
          description: SPECIFIC filter.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: action
          in: query
          description: GENERAL filters.
          schema:
            type: array
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
          explode: true
        - name: userIp
          in: query
          schema:
            type: string
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - LoggerService
  '/logger/{object}/record/{record_id}/logs':
    get:
      operationId: LoggerService_SearchLogByRecordId
      parameters:
        - name: object
          in: path
          description: SPECIFIC filter
          required: true
          schema:
            type: string
            enum:
              - cc_queue
              - schema
              - users
              - devices
              - calendars
              - cc_list
              - cc_team
              - cc_agent
              - cc_resource
              - cc_resource_group
              - chat_bots
              - cases
              - contacts
              - cc_list_number
              - case_comments
              - record_file
        - name: record_id
          in: path
          description: REQUIRED filter
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: action
          in: query
          description: GENERAL filters.
          schema:
            type: array
            items:
              enum:
                - default_no_action
                - create
                - update
                - read
                - delete
              type: string
          explode: true
        - name: userId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: userIp
          in: query
          schema:
            type: string
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggerLogs'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - LoggerService
  /oauth/apps:
    delete:
      operationId: OAuth2Federation_DeleteOAuthService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DeleteOAuthServiceRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteOAuthServiceResponse'
      tags:
        - OAuth2Federation
    get:
      operationId: OAuth2Federation_SearchOAuthService
      parameters:
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: 'term-of-search: lookup[name]'
          schema:
            type: string
        - name: name
          in: query
          description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          schema:
            type: string
        - name: access
          in: query
          description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          schema:
            type: string
        - name: enabled
          in: query
          description: '----- OAuthService-Specific Filters ----------------'
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchOAuthServiceResponse'
      tags:
        - OAuth2Federation
    post:
      operationId: OAuth2Federation_CreateOAuthService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuthService'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
      tags:
        - OAuth2Federation
  '/oauth/apps/{changes.id}':
    patch:
      operationId: OAuth2Federation_UpdateOAuthService2
      parameters:
        - name: changes.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
      tags:
        - OAuth2Federation
    put:
      operationId: OAuth2Federation_UpdateOAuthService
      parameters:
        - name: changes.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
      tags:
        - OAuth2Federation
  '/oauth/apps/{id}':
    delete:
      operationId: OAuth2Federation_DeleteOAuthService2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OAuth2Federation.DeleteOAuthServiceBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteOAuthServiceResponse'
      tags:
        - OAuth2Federation
    get:
      operationId: OAuth2Federation_LocateOAuthService
      parameters:
        - name: id
          in: path
          description: |-
            ----- Search Basic Filters ---------------------------

            selection: by unique identifier
          required: true
          schema:
            type: array
            items:
              format: int64
              type: string
            minItems: 1
          style: simple
        - name: page
          in: query
          description: |-
            ----- Select Options -------------------------

            default: 1
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'default: 16'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: 'term-of-search: lookup[name]'
          schema:
            type: string
        - name: name
          in: query
          description: 'case-ignore substring match: ILIKE ''*'' - any; ''?'' - one'
          schema:
            type: string
        - name: access
          in: query
          description: '[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!'
          schema:
            type: string
        - name: enabled
          in: query
          description: '----- OAuthService-Specific Filters ----------------'
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OAuthService'
      tags:
        - OAuth2Federation
  /objclass:
    get:
      operationId: Classes_SearchClasses
      parameters:
        - name: domain
          in: query
          description: TO BE REMOVED // bound to session.domain.id
          schema:
            type: string
        - name: class
          in: query
          description: '[filter]: like ''%class%'''
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            int64 id = 3;  // [filter]: obj.id = id
            controls

            output
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'sort: "field" asc; "!field" desc'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: page
          in: query
          description: page number
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchClassesResponse'
      tags:
        - Classes
  '/objclass/{class.id}':
    patch:
      operationId: Classes_UpdateClass2
      parameters:
        - name: class.id
          in: path
          description: '(class::object).id'
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Classes.UpdateClassBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateClassResponse'
      tags:
        - Classes
    put:
      operationId: Classes_UpdateClass
      parameters:
        - name: class.id
          in: path
          description: '(class::object).id'
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Classes.UpdateClassBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateClassResponse'
      tags:
        - Classes
  '/objclass/{id}':
    get:
      operationId: Classes_ReadClass
      parameters:
        - name: id
          in: path
          description: '[filter]: obj.id = id'
          required: true
          schema:
            type: string
            format: int64
        - name: domain
          in: query
          schema:
            type: string
        - name: class
          in: query
          description: '[filter]: like ''%class%'''
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadClassResponse'
      tags:
        - Classes
  /permissions:
    get:
      operationId: Permissions_GetPermissions
      summary: GetPermissions list available from application
      parameters:
        - name: q
          in: query
          description: TermOfSearch
          schema:
            type: string
        - name: id
          in: query
          description: '= ANY(id)'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: not
          in: query
          description: <> ANY(not)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: |-
            controls

            output
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'sort: "field" asc; "!field" desc'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: page
          in: query
          description: page number
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchPermissionResponse'
      tags:
        - Permissions
  /presence:
    patch:
      operationId: Presence_SetStatus2
      summary: 'set(presence) (notify, error)'
      description: '(UserPresence) {'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.SetStatusRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.PresenceStatus'
      tags:
        - Presence
  /products:
    get:
      operationId: Customers_LicenseUsage3
      parameters:
        - name: size
          in: query
          description: |-
            ----- Search Options ----- //

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: set of output fields
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: userId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: display name
          schema:
            type: string
        - name: domainId
          in: query
          description: identifier
          schema:
            type: string
            format: int64
        - name: domainName
          in: query
          description: display name
          schema:
            type: string
        - name: customerId
          in: query
          schema:
            type: string
        - name: id
          in: query
          description: by serial number(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: product
          in: query
          description: by product name(s)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: valid
          in: query
          description: |-
            view: all|valid|grantable

            show: available to be granted
          schema:
            type: boolean
        - name: q
          in: query
          description: 'filter: term of search'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsageResponse'
      tags:
        - Customers
  '/products/{id}/users':
    get:
      operationId: Customers_LicenseUsers
      parameters:
        - name: id
          in: path
          description: |-
            ----- Search Filters ----- //

            REQUIRED Product ID
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: |-
            ----- Search Options ----- //

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: set of output fields
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: 'filter: term of search (username)'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LicenseUsersResponse'
      tags:
        - Customers
  /regions:
    get:
      operationId: SearchRegion
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: name
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: timezoneId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRegion'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
    post:
      operationId: CreateRegion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRegionRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
  '/regions/{id}':
    delete:
      operationId: DeleteRegion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
    get:
      operationId: ReadRegion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
    patch:
      operationId: PatchRegion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RegionService.PatchRegionBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
    put:
      operationId: UpdateRegion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RegionService.UpdateRegionBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Region'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RegionService
  /routing/outbound/calls:
    get:
      operationId: SearchRoutingOutboundCall
      summary: List of RoutingOutboundCall
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: name
          in: query
          schema:
            type: string
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: pattern
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
    post:
      operationId: CreateRoutingOutboundCall
      summary: Create RoutingOutboundCall
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingOutboundCallRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
  '/routing/outbound/calls/{from_id}/to/{to_id}':
    patch:
      operationId: MovePositionRoutingOutboundCall
      summary: Move RoutingOutboundCall
      parameters:
        - name: from_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: to_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.MovePositionRoutingOutboundCallResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
  '/routing/outbound/calls/{id}':
    delete:
      operationId: DeleteRoutingOutboundCall
      summary: Remove RoutingOutboundCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
    get:
      operationId: ReadRoutingOutboundCall
      summary: RoutingOutboundCall item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
    patch:
      operationId: PatchRoutingOutboundCall
      summary: Patch RoutingOutboundCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
    put:
      operationId: UpdateRoutingOutboundCall
      summary: Update RoutingOutboundCall
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingOutboundCall'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingOutboundCallService
  /routing/outbound/chat:
    get:
      operationId: SearchChatPlan
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: name
          in: query
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
    post:
      operationId: CreateChatPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateChatPlanRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
  '/routing/outbound/chat/{id}':
    delete:
      operationId: DeleteChatPlan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
    get:
      operationId: ReadChatPlan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
    patch:
      operationId: PatchChatPlan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingChatPlanService.PatchChatPlanBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
    put:
      operationId: UpdateChatPlan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingChatPlanService.UpdateChatPlanBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ChatPlan'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingChatPlanService
  /routing/schema:
    get:
      operationId: SearchRoutingSchema
      summary: List RoutingSchema
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
        - name: name
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: array
            items:
              enum:
                - default
                - voice
                - chat
                - processing
                - service
              type: string
          explode: true
        - name: editor
          in: query
          schema:
            type: boolean
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
    post:
      operationId: CreateRoutingSchema
      summary: Create RoutingSchema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingSchemaRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
  /routing/schema/tags:
    get:
      operationId: SearchRoutingSchemaTags
      summary: List RoutingSchemaTags
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: type
          in: query
          schema:
            type: array
            items:
              enum:
                - default
                - voice
                - chat
                - processing
                - service
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingSchemaTags'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
  /routing/schema/variables:
    get:
      operationId: SearchSchemaVariable
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
    post:
      operationId: CreateSchemaVariable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSchemaVariableRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
  '/routing/schema/variables/{id}':
    delete:
      operationId: DeleteSchemaVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
    get:
      operationId: ReadSchemaVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
    patch:
      operationId: PatchSchemaVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SchemaVariablesService.PatchSchemaVariableBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
    put:
      operationId: UpdateSchemaVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SchemaVariablesService.UpdateSchemaVariableBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SchemaVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVariablesService
  '/routing/schema/{id}':
    delete:
      operationId: DeleteRoutingSchema
      summary: Remove RoutingSchema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
    get:
      operationId: ReadRoutingSchema
      summary: RoutingSchema item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
    patch:
      operationId: PatchRoutingSchema
      summary: Patch RoutingSchema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingSchemaService.PatchRoutingSchemaBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
    put:
      operationId: UpdateRoutingSchema
      summary: Update RoutingSchema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingSchemaService.UpdateRoutingSchemaBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingSchema'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingSchemaService
  '/routing/schema/{schema_id}/versions':
    get:
      operationId: SearchSchemaVersion
      parameters:
        - name: schema_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SearchSchemaVersionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SchemaVersionService
  /routing/variables:
    get:
      operationId: SearchRoutingVariable
      summary: List of RoutingVariable
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListRoutingVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingVariableService
    post:
      operationId: CreateRoutingVariable
      summary: Create RoutingVariable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateRoutingVariableRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingVariableService
  '/routing/variables/{id}':
    delete:
      operationId: DeleteRoutingVariable
      summary: Remove RoutingVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingVariableService
    get:
      operationId: ReadRoutingVariable
      summary: RoutingVariable item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingVariableService
    put:
      operationId: UpdateRoutingVariable
      summary: Update RoutingVariable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.RoutingVariableService.UpdateRoutingVariableBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.RoutingVariable'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - RoutingVariableService
  /search:
    get:
      operationId: Search
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: objectName
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ftsSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - FTSService
  /settings:
    get:
      operationId: SearchSystemSetting
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: name
          in: query
          description: Filter by setting names
          schema:
            type: array
            items:
              enum:
                - empty_system_settings_name
                - enable_omnichannel
                - member_chunk_size
                - amd_cancel_not_human
                - scheme_version_limit
                - enable_2fa
                - export_settings
                - search_number_length
                - chat_ai_connection
                - password_reg_exp
                - password_validation_text
                - autolink_call_to_contact
                - period_to_playback_records
                - is_fulltext_search_enabled
                - wbt_hide_contact
                - show_full_contact
                - call_end_sound_notification
                - call_end_push_notification
                - chat_end_sound_notification
                - chat_end_push_notification
                - task_end_sound_notification
                - task_end_push_notification
                - push_notification_timeout
                - labels_to_limit_contacts
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListSystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
    post:
      operationId: CreateSystemSetting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateSystemSettingRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
  /settings/available:
    get:
      operationId: SearchAvailableSystemSetting
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListAvailableSystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
  '/settings/{id}':
    delete:
      operationId: DeleteSystemSetting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
    get:
      operationId: ReadSystemSetting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
    patch:
      operationId: PatchSystemSetting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SystemSettingService.PatchSystemSettingBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
    put:
      operationId: UpdateSystemSetting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.SystemSettingService.UpdateSystemSettingBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.SystemSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SystemSettingService
  /signup:
    post:
      operationId: Auth_Signup
      summary: Signup new domain with superior access token
      parameters:
        - name: domain
          in: query
          description: domain name
          schema:
            type: string
        - name: username
          in: query
          description: username
          schema:
            type: string
        - name: password
          in: query
          description: user password
          schema:
            type: string
        - name: scope
          in: query
          description: scope request control
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: certificate
          in: query
          description: license/certificate
          schema:
            type: string
            format: byte
        - name: mobile
          in: query
          description: OPTIONAL. Mobile device /login request ?
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LoginResponse'
      tags:
        - Auth
  '/slas/{sla_id}/sla_condition':
    post:
      operationId: CreateSLACondition
      summary: Create a new SLACondition
      parameters:
        - name: sla_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
  '/slas/{sla_id}/sla_condition/{id}':
    delete:
      operationId: DeleteSLACondition
      summary: Delete an SLACondition
      parameters:
        - name: sla_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
    get:
      operationId: LocateSLACondition
      summary: Locate an SLACondition by ID
      parameters:
        - name: sla_id
          in: path
          description: Unique identifier of the SLACondition
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: Unique identifier of the SLACondition
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateSLAConditionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
    patch:
      operationId: UpdateSLACondition2
      summary: Update an existing SLACondition
      parameters:
        - name: sla_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
    put:
      operationId: UpdateSLACondition
      summary: Update an existing SLACondition
      parameters:
        - name: sla_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputSLACondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLACondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
  '/slas/{sla_id}/sla_conditions':
    get:
      operationId: ListSLAConditions
      summary: Retrieve a list of SLAConditions or search SLACondition conditions
      parameters:
        - name: sla_id
          in: path
          description: Filter by SLA Id
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
        - name: slaConditionId
          in: query
          description: Filter by SLACondition Id.
          schema:
            type: string
            format: int64
        - name: priorityId
          in: query
          description: filter by priority id
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.SLAConditionList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - SLAConditions
  /spaces:
    get:
      operationId: Spaces_ListSpaces
      description: |
        | Field       | Type 
        | ----------- | ---- 
        | **----------- READ-ONLY -----------** | 
        | `id`        | int64 
        | `ver`       | int32 
        | `etag`      | string 
        | **---------- OPERATIONAL ----------** | 
        | `created_at` | int64(epoch:milli) 
        | `created_by` | lookup(user) 
        | `updated_at` | int64(epoch:milli) 
        | `updated_by` | lookup(user) 
        | **---------- ATTRIBUTES -----------** | 
        | `name`      | name! 
        | `home_page`   | string (home_page) 
        | `state`       | bool 
        | `has_children`| bool 
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: |-
            Limit of result page records count.   _default(16); limit=(size<=0?-1:size+1);_

            ```javascript
            const
                default = 16
              , maximum = 32
            ;

            ```
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            Used to query records within a set of `qin` fields, eg: name, etc...
          schema:
            type: string
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `state`
          schema:
            type: array
            items:
              default: id
              pattern: '^[+|-|!]?\w+$'
              type: string
            uniqueItems: true
          explode: true
        - name: fields
          in: query
          schema:
            type: array
            items:
              default: '*'
              type: string
            uniqueItems: true
          explode: true
        - name: id
          in: query
          description: |-
            Records with unique IDentifier(s).
            Accept: `id` -or- `etag`.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.SpaceList'
      tags:
        - Spaces
    post:
      operationId: Spaces_CreateSpace
      summary: Create NEW Space
      parameters:
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Spaces source changes
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/webitel.knowledgebase.InputSpace'
                type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
      tags:
        - Spaces
  /spaces/search:
    get:
      operationId: KnowledgebaseSearch_SpacesArticlesSearch
      parameters:
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: state
          in: query
          description: Active Article only.
          schema:
            type: boolean
        - name: tags
          in: query
          description: Tags associated with the article.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.CombinedList'
      tags:
        - KnowledgebaseSearch
  /spaces/tags:
    get:
      operationId: Tags_ListTags
      summary: List of the all Articles's Tag(s).
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.TagsList'
      tags:
        - Tags
  '/spaces/{etag}':
    delete:
      operationId: Spaces_DeleteSpace
      summary: Remove Space source
      parameters:
        - name: etag
          in: path
          description: Unique ID of the latest version of a resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
      tags:
        - Spaces
    get:
      operationId: Spaces_LocateSpace
      summary: Locate spaces source
      parameters:
        - name: etag
          in: path
          description: |-
            The Space source IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
      tags:
        - Spaces
    patch:
      operationId: Spaces_UpdateSpace
      summary: NEW Update of the Space source
      parameters:
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resorce.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Source Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Space source changes
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                homePage:
                  description: |-
                    BIO. Short description about the space.
                    OPTIONAL. Multi-lined text.
                  type: string
                name:
                  description: Represents the name of the knowledge base space.
                  type: string
                state:
                  description: The state of the space.
                  type: boolean
              title: NEW Space source changes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Space'
      tags:
        - Spaces
  '/spaces/{space_id}/articles':
    get:
      operationId: Articles_ListArticles
      summary: List of the Space's Article(s).
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: articleId
          in: query
          description: Record(s) with unique ID only.
          schema:
            type: string
        - name: state
          in: query
          description: Active Article only.
          schema:
            type: boolean
        - name: tags
          in: query
          description: Tags associated with the article.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
      tags:
        - Articles
    post:
      operationId: Articles_CreateArticle
      parameters:
        - name: space_id
          in: path
          description: Link space ID.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the Article link.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.knowledgebase.InputArticle'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
      tags:
        - Articles
  '/spaces/{space_id}/articles/{article_id}/attachments':
    get:
      operationId: Articles_ArticlesAttachmentList
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: article_id
          in: path
          description: Record(s) with unique ID only.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.AttachmentList'
      tags:
        - Articles
  '/spaces/{space_id}/articles/{article_id}/childrens':
    get:
      operationId: Articles_ListArticles2
      summary: List of the Space's Article(s).
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: article_id
          in: path
          description: Record(s) with unique ID only.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search term: location name;
            `?` - matches any one character
            `*` - matches 0 or more characters
          schema:
            type: string
        - name: state
          in: query
          description: Active Article only.
          schema:
            type: boolean
        - name: tags
          in: query
          description: Tags associated with the article.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
      tags:
        - Articles
  '/spaces/{space_id}/articles/{article_id}/history':
    get:
      operationId: Articles_ArticleVersionsList
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: article_id
          in: path
          description: Record(s) with unique ID only.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersionList'
      tags:
        - Articles
  '/spaces/{space_id}/articles/{article_id}/history/{version_id}':
    get:
      operationId: Articles_LocateArticleVersion
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: article_id
          in: path
          description: Record(s) with unique ID only.
          required: true
          schema:
            type: string
        - name: version_id
          in: path
          description: The unique ID of version record
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersion'
      tags:
        - Articles
  '/spaces/{space_id}/articles/{etag}':
    delete:
      operationId: Articles_DeleteArticle
      summary: Remove the space's Article association.
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID to remove.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Article'
      tags:
        - Articles
    get:
      operationId: Articles_LocateArticle
      summary: Locate the space's Article association.
      parameters:
        - name: space_id
          in: path
          description: Space ID associated with.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: |-
            Unique Article link IDentifier.
            Accept: `etag` (obsolete+) or `id`.
          required: true
          schema:
            type: string
            format: \w+
        - name: fields
          in: query
          description: Fields to be retrieved into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.Article'
      tags:
        - Articles
    patch:
      operationId: Articles_UpdateArticle
      summary: Update the space's Article details.
      parameters:
        - name: space_id
          in: path
          description: Link space ID.
          required: true
          schema:
            type: string
        - name: etag
          in: path
          description: Unique ID of the latest version of an existing resource.
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be retrieved into result of changes.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: NEW Update of the Article link.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: Tags associated with the article.
                  type: array
                  items:
                    type: string
                parentArticle:
                  description: The parent article ID.
                  type: string
                  format: int64
                pinned:
                  description: Indicates that the article is pinned on the top of list.
                  type: boolean
                spaceId:
                  description: |-
                    [VALUE]: --------------------------------------
                    Space ID associated with.
                  type: string
                  format: int64
                state:
                  description: Indicates if article is active and actual.
                  type: boolean
                text:
                  description: The text content of the article.
                  type: string
                title:
                  description: The title of the article.
                  type: string
              title: NEW Update of the Article link.
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.knowledgebase.ArticleList'
      tags:
        - Articles
  /srvinfo:
    get:
      operationId: Customers_ServerInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ServerInfoResponse'
      tags:
        - Customers
  '/statuses/{status_id}/status':
    get:
      operationId: ListStatusConditions
      summary: Retrieve a list of statuses or search status conditions
      parameters:
        - name: status_id
          in: path
          description: Filter by Status Id.
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: Page number of result dataset records. offset = (page*size)
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size count of records on result page. limit = (size++)
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: Sort the result according to fields.
          schema:
            type: string
        - name: id
          in: query
          description: Filter by unique IDs.
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            Search query string for filtering by name. Supports:
            - Wildcards (*) for substring matching
            - Placeholder (?) for single character substitution
            - Exact match for full names
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusConditionList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
    post:
      operationId: CreateStatusCondition
      summary: Create a new status condition
      parameters:
        - name: status_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputCreateStatusCondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
  '/statuses/{status_id}/status/{id}':
    delete:
      operationId: DeleteStatusCondition
      summary: Delete a status condition
      parameters:
        - name: status_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
    get:
      operationId: LocateStatusCondition
      summary: Locate a status condition by ID
      parameters:
        - name: status_id
          in: path
          description: ID of the status to be located
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: ID of the status condition to be located
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: Fields to be retrieved as a result.
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.LocateStatusConditionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
    patch:
      operationId: UpdateStatusCondition2
      summary: Update an existing status condition
      parameters:
        - name: status_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
    put:
      operationId: UpdateStatusCondition
      summary: Update an existing status condition
      parameters:
        - name: status_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - StatusConditions
  /storage/backend_profiles:
    get:
      operationId: BackendProfileService_SearchBackendProfile
      summary: List of BackendProfile
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListBackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
    post:
      operationId: BackendProfileService_CreateBackendProfile
      summary: Create BackendProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateBackendProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
  '/storage/backend_profiles/{id}':
    delete:
      operationId: BackendProfileService_DeleteBackendProfile
      summary: Remove BackendProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
    get:
      operationId: BackendProfileService_ReadBackendProfile
      summary: BackendProfile item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
    patch:
      operationId: BackendProfileService_PatchBackendProfile
      summary: Patch BackendProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchBackendProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
    put:
      operationId: BackendProfileService_UpdateBackendProfile
      summary: Update BackendProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateBackendProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.BackendProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - BackendProfileService
  /storage/cognitive_profiles:
    get:
      operationId: CognitiveProfileService_SearchCognitiveProfile
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: service
          in: query
          schema:
            type: array
            items:
              enum:
                - DefaultService
                - STT
                - TTS
              type: string
          explode: true
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListCognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
    post:
      operationId: CognitiveProfileService_CreateCognitiveProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateCognitiveProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
  '/storage/cognitive_profiles/{id}':
    delete:
      operationId: CognitiveProfileService_DeleteCognitiveProfile
      summary: Remove BackendProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
    get:
      operationId: CognitiveProfileService_ReadCognitiveProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
    patch:
      operationId: CognitiveProfileService_PatchCognitiveProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchCognitiveProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
    put:
      operationId: CognitiveProfileService_UpdateCognitiveProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateCognitiveProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.CognitiveProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
  '/storage/cognitive_profiles/{id}/voice':
    get:
      operationId: CognitiveProfileService_SearchCognitiveProfileVoices
      summary: Search Voices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: q
          in: query
          schema:
            type: string
        - name: key
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListCognitiveProfileVoices'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - CognitiveProfileService
  /storage/file:
    delete:
      operationId: FileService_DeleteFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.DeleteFilesRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.DeleteFilesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileService
    get:
      operationId: FileService_SearchFiles
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: uploadedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: uploadedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: uploadedBy
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: referenceId
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: channel
          in: query
          schema:
            type: array
            items:
              enum:
                - UnknownChannel
                - ChatChannel
                - MailChannel
                - CallChannel
                - LogChannel
                - MediaChannel
                - KnowledgebaseChannel
                - CasesChannel
              type: string
          explode: true
        - name: retentionUntilFrom
          in: query
          schema:
            type: string
            format: int64
        - name: retentionUntilTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListFile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileService
  /storage/file_policies:
    get:
      operationId: FilePoliciesService_SearchFilePolicies
      summary: List of FilePolicy
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListFilePolicies'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
    post:
      operationId: FilePoliciesService_CreateFilePolicy
      summary: Create FilePolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateFilePolicyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
  '/storage/file_policies/{from_id}/to/{to_id}':
    patch:
      operationId: FilePoliciesService_MovePositionFilePolicy
      parameters:
        - name: from_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: to_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.MovePositionFilePolicyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MovePositionFilePolicyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
  '/storage/file_policies/{id}':
    delete:
      operationId: FilePoliciesService_DeleteFilePolicy
      summary: Remove FilePolicy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
    get:
      operationId: FilePoliciesService_ReadFilePolicy
      summary: FilePolicy item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
    patch:
      operationId: FilePoliciesService_PatchFilePolicy
      summary: Patch FilePolicy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchFilePolicyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
    put:
      operationId: FilePoliciesService_UpdateFilePolicy
      summary: Update FilePolicy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateFilePolicyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
  '/storage/file_policies/{id}/apply':
    patch:
      operationId: FilePoliciesService_FilePolicyApply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.FilePolicyApplyRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.FilePolicyApplyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FilePoliciesService
  /storage/import_templates:
    get:
      operationId: ImportTemplateService_SearchImportTemplate
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
    post:
      operationId: ImportTemplateService_CreateImportTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.CreateImportTemplateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
  '/storage/import_templates/{id}':
    delete:
      operationId: ImportTemplateService_DeleteImportTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
    get:
      operationId: ImportTemplateService_ReadImportTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
    patch:
      operationId: ImportTemplateService_PatchImportTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PatchImportTemplateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
    put:
      operationId: ImportTemplateService_UpdateImportTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.UpdateImportTemplateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ImportTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - ImportTemplateService
  /storage/media:
    get:
      operationId: MediaFileService_SearchMediaFile
      summary: Search MediaFile
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int64
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListMedia'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - MediaFileService
  '/storage/media/{id}':
    delete:
      operationId: MediaFileService_DeleteMediaFile
      summary: Remove MediaFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MediaFile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - MediaFileService
    get:
      operationId: MediaFileService_ReadMediaFile
      summary: MediaFile item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: domainId
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.MediaFile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - MediaFileService
  /storage/transcript_file:
    delete:
      operationId: FileTranscriptService_DeleteFileTranscript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.DeleteFileTranscriptRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.DeleteFileTranscriptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileTranscriptService
    post:
      operationId: FileTranscriptService_CreateFileTranscript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.StartFileTranscriptRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.StartFileTranscriptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileTranscriptService
    put:
      operationId: FileTranscriptService_PutFileTranscript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage.PutFileTranscriptRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.PutFileTranscriptResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileTranscriptService
  '/storage/transcript_file/{id}/phrases':
    get:
      operationId: FileTranscriptService_GetFileTranscriptPhrases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.ListPhrases'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpc.gateway.runtime.Error'
      tags:
        - FileTranscriptService
  /trigger:
    get:
      operationId: SearchTrigger
      summary: List of Trigger
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: id
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
        - name: schemaId
          in: query
          schema:
            type: array
            items:
              format: int32
              type: integer
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTrigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
    post:
      operationId: CreateTrigger
      summary: Create Trigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.CreateTriggerRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
  '/trigger/{id}':
    delete:
      operationId: DeleteTrigger
      summary: Remove Trigger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
    get:
      operationId: ReadTrigger
      summary: Trigger item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
    patch:
      operationId: PatchTrigger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.PatchTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
    put:
      operationId: UpdateTrigger
      summary: Update Trigger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.UpdateTriggerBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.Trigger'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
  '/trigger/{trigger_id}/job':
    get:
      operationId: SearchTriggerJob
      parameters:
        - name: trigger_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: createdAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: createdAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: startedAtFrom
          in: query
          schema:
            type: string
            format: int64
        - name: startedAtTo
          in: query
          schema:
            type: string
            format: int64
        - name: durationFrom
          in: query
          schema:
            type: string
            format: int64
        - name: durationTo
          in: query
          schema:
            type: string
            format: int64
        - name: state
          in: query
          schema:
            type: array
            items:
              enum:
                - idle
                - active
                - done
                - error
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ListTriggerJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
    post:
      operationId: CreateTriggerJob
      parameters:
        - name: trigger_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/engine.TriggerService.CreateTriggerJobBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.TriggerJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - TriggerService
  /types:
    get:
      operationId: Types_Search
      summary: Lookup data types registry.
      parameters:
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          schema:
            type: string
        - name: id
          in: query
          description: '`types.id`'
          schema:
            type: string
        - name: name
          in: query
          description: '`types.name`'
          schema:
            type: string
        - name: repo
          in: query
          description: '`types.repo`'
          schema:
            type: string
        - name: path
          in: query
          description: '`types.path`'
          schema:
            type: string
        - name: readonly
          in: query
          description: '[NOT] [ system / custom ] types only'
          schema:
            type: boolean
        - name: extendable
          in: query
          description: '[NOT] Extend[able] types only.'
          schema:
            type: boolean
        - name: extensions
          in: query
          description: '[NOT] include extensions/* types.'
          schema:
            type: boolean
        - name: extended
          in: query
          description: '[NOT] Extend[ed] types only.'
          schema:
            type: boolean
        - name: administered
          in: query
          description: '[NOT] Administer access control only'
          schema:
            type: boolean
        - name: size
          in: query
          description: |-
            Number of result records (per page).
            Default: 16.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: |-
            Page number of result set of records.
            Default: 1.
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          schema:
            type: array
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
          explode: true
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
              uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Types
  /types/dictionaries:
    delete:
      operationId: Dictionaries_DeleteType
      summary: Delete custom dictionaries.
      description: '(DictionaryList) {'
      parameters:
        - name: fields
          in: query
          description: Fields to retrive into result dataset.
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: repo
          in: query
          description: |-
            `types.repo`

            // `record.pk`
             repeated string id = 3;
          required: true
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Dictionaries
    get:
      operationId: Dictionaries_SearchType
      summary: Lookup dictionaries data types.
      parameters:
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          schema:
            type: string
        - name: id
          in: query
          description: '`types.id`'
          schema:
            type: string
        - name: name
          in: query
          description: '`types.name`'
          schema:
            type: string
        - name: repo
          in: query
          description: '`types.repo`'
          schema:
            type: string
        - name: path
          in: query
          description: '`types.path`'
          schema:
            type: string
        - name: readonly
          in: query
          description: '[NOT] [ system / custom ] types only'
          schema:
            type: boolean
        - name: extendable
          in: query
          description: '[NOT] Extend[able] types only.'
          schema:
            type: boolean
        - name: extensions
          in: query
          description: '[NOT] include extensions/* types.'
          schema:
            type: boolean
        - name: extended
          in: query
          description: '[NOT] Extend[ed] types only.'
          schema:
            type: boolean
        - name: administered
          in: query
          description: '[NOT] Administer access control only'
          schema:
            type: boolean
        - name: size
          in: query
          description: |-
            Number of result records (per page).
            Default: 16.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: |-
            Page number of result set of records.
            Default: 1.
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          schema:
            type: array
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
          explode: true
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
              uniqueItems: true
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Dictionaries
  '/types/dictionaries/{repo}':
    get:
      operationId: Dictionaries_LocateType
      summary: Locate the dictionary type.
      description: '(Dictionary) {'
      parameters:
        - name: repo
          in: path
          description: '`types.repo`'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Dictionaries
    post:
      operationId: Dictionaries_CreateType
      summary: Create custom dictionary.
      description: '(Dictionary) {'
      parameters:
        - name: repo
          in: path
          description: 'NEW [`types.repo`] repository name, e.g.: `countries`.'
          required: true
          schema:
            type: string
      requestBody:
        description: 'NEW dictionary [type] definition.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputDictionary'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Dictionaries
    put:
      operationId: Dictionaries_UpdateType
      summary: Update custom dictionary.
      description: '(Dictionary) {'
      parameters:
        - name: repo
          in: path
          description: '[**repo**] name of the dataset type, e.g.: `countries`.'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to return into result.
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: 'The dictionary [**type**] changes.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputDictionary'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Dictionaries
  /types/extensions:
    delete:
      operationId: Extensions_DeleteType2
      summary: Delete extension for types.
      description: 'returns (ExtensionList) {'
      parameters:
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: repo
          in: query
          description: '`type.repo`'
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Extensions
    get:
      operationId: Extensions_SearchType
      summary: Search for type extensions.
      description: '(ExtensionList) {'
      parameters:
        - name: size
          in: query
          description: |-
            Number of result records (per page).
            Default: 16.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: |-
            Page number of result set of records.
            Default: 1.
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: |-
            Sort result dataset of records by fields.
            ```
            sort ::= *( ORDER name )

            ORDER  = ASC / DESC
            DESC   = "-" / "!"
            ASC    = [ "+" ]   ; Default
            ```

            Fields available

            - `id`(seq)
            - `domain`{name}
            - `created_at`
            - `created_by`{name}
            - `updated_at`
            - `updated_by`{name}

            Use ?fields=`field.sort()` option to sort Edge fields.
          schema:
            type: array
            items:
              default: '*'
              pattern: '^[+|-|!]?\w+$'
              type: string
              uniqueItems: true
          explode: true
        - name: fields
          in: query
          description: |-
            Fields [Q]uery to build result dataset record.
            ```
            fields ::= field [ *( "," field ) ]
            field  ::= name [ *( func ) ] [ inner ]
            inner  ::= "{" fields "}"
            funcs  ::= *( func )
            func   ::= "." name "(" [ args ] ")"
            name   ::= ALPHA / DIGIT / USCORE

            ALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"
            DIGIT    = %x30-39            ; "0"-"9"
            USCORE   = %x5F ; underscore  ; "_"
            ```
          schema:
            type: array
            items:
              default: '*'
              type: string
              uniqueItems: true
          explode: true
        - name: q
          in: query
          description: |-
            Search term:
            `?` - matches any character
            `*` - matches 0 or more characters
            e.g.: name,emails{type},labels etc...
          schema:
            type: string
        - name: id
          in: query
          description: extension.type.id
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Extensions
  '/types/extensions/{repo}':
    delete:
      operationId: Extensions_DeleteType
      summary: Delete extension for types.
      description: 'returns (ExtensionList) {'
      parameters:
        - name: repo
          in: path
          description: '`type.repo`'
          required: true
          schema:
            type: array
            items:
              type: string
            minItems: 1
          style: simple
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.StructList'
      tags:
        - Extensions
    get:
      operationId: Extensions_LocateType
      summary: Type extension details.
      description: 'returns (Extension) {'
      parameters:
        - name: repo
          in: path
          description: |-
            `type.repo`

            id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Extensions
    post:
      operationId: Extensions_CreateType
      summary: Create type extension.
      description: 'returns (Extension) {'
      parameters:
        - name: repo
          in: path
          description: |-
            SUPER `types.repo` to extend, e.g.: `contacts`.
            Lookup: GET /types?extendable=true
          required: true
          schema:
            type: string
      requestBody:
        description: Extension type fields.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputExtension'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Extensions
    put:
      operationId: Extensions_UpdateType
      summary: Update type extension.
      description: 'returns (Extension) {'
      parameters:
        - name: repo
          in: path
          description: '`type.repo`'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webitel.proto.data.InputExtension'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Extensions
  '/types/{path}':
    get:
      operationId: Types_Locate
      summary: Structured data type details.
      parameters:
        - name: path
          in: path
          description: '`types.path`'
          required: true
          schema:
            type: string
            format: path
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webitel.proto.data.Struct'
      tags:
        - Types
  /user:
    get:
      operationId: Users_ReadUser2
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: partial output
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadUserResponse'
      tags:
        - Users
  '/user/device/config/{type}':
    get:
      operationId: DefaultDeviceConfig
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.DefaultDeviceConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - UserHelperService
  /user/widget/activity/today:
    get:
      operationId: ActivityWorkspaceWidget
      parameters:
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/engine.ActivityWorkspaceWidgetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
      tags:
        - UserHelperService
  /userinfo:
    get:
      operationId: Auth_UserInfo2
      summary: The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User.
      parameters:
        - name: accessToken
          in: query
          description: string id_token = 2;
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Userinfo'
      tags:
        - Auth
    post:
      operationId: Auth_UserInfo
      summary: The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User.
      parameters:
        - name: accessToken
          in: query
          description: string id_token = 2;
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Userinfo'
      tags:
        - Auth
  /users:
    delete:
      operationId: Users_DeleteUsers2
      parameters:
        - name: id
          in: query
          description: 'ONE /users/{id}'
          schema:
            type: string
            format: int64
        - name: permanent
          in: query
          schema:
            type: boolean
      requestBody:
        description: 'MANY /users .ids=[id,...]'
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteUsersResponse'
      tags:
        - Users
    get:
      operationId: Users_SearchUsers
      parameters:
        - name: id
          in: query
          description: |-
            ----- Base Filters ---------------------------

            filter: .id = any({id}...)
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: notId
          in: query
          description: 'filter: .id <> all({not_ids}...)'
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          description: |-
            ----- User-specific Filters ------------------

            filter: (.name|.username|.extension|.status) ILIKE '{q}'
          schema:
            type: string
        - name: name
          in: query
          description: 'filter: .name ILIKE ''{name}'''
          schema:
            type: string
        - name: status
          in: query
          description: 'filter: .status ILIKE ''{status}'''
          schema:
            type: string
        - name: username
          in: query
          description: 'filter: .username ILIKE ''{username}'''
          schema:
            type: string
        - name: extension
          in: query
          description: 'filter: .extension LIKE ''{extension}'''
          schema:
            type: string
        - name: any
          in: query
          description: |-
            ----- View Modes -----------------------------
            NOTE: by default, search NOT 'deleted' objects ONLY

            filter: include 'deleted' ALSO ! (inactive)
          schema:
            type: boolean
        - name: deleted
          in: query
          description: 'filter: .deleted_at NOTNULL (view: RECYCLE)'
          schema:
            type: boolean
        - name: presenceStatus
          in: query
          schema:
            type: string
        - name: presenceNote
          in: query
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            // navigation filter
            repeated int64 roles = 7;
            ----- Search Options -------------------------

            select: output (fields,...)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'select: order by (fields,...)'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: page
          in: query
          description: 'select: offset {page}'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'select: limit {size}'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchUsersResponse'
      tags:
        - Users
    post:
      operationId: Users_CreateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateUserRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateUserResponse'
      tags:
        - Users
  /users/search:
    post:
      operationId: Users_SearchUsers2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.SearchUsersRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.SearchUsersResponse'
      tags:
        - Users
  '/users/{id}':
    delete:
      operationId: Users_DeleteUsers
      parameters:
        - name: id
          in: path
          description: 'ONE /users/{id}'
          required: true
          schema:
            type: string
            format: int64
        - name: selection
          in: query
          description: 'MANY /users .ids=[id,...]'
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: permanent
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DeleteUsersResponse'
      tags:
        - Users
    get:
      operationId: Users_ReadUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: partial output
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ReadUserResponse'
      tags:
        - Users
  '/users/{id}/logout':
    post:
      operationId: Users_LogoutUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Users.LogoutUserBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LogoutUserResponse'
      tags:
        - Users
  '/users/{publish.id}/presence':
    patch:
      operationId: Presence_SetStatus
      summary: 'set(presence) (notify, error)'
      description: '(UserPresence) {'
      parameters:
        - name: publish.id
          in: path
          description: '[required] user identity'
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.Presence.SetStatusBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.PresenceStatus'
      tags:
        - Presence
  '/users/{token.user.id}/tokens':
    post:
      operationId: UserAccessTokens_AddUserAccessToken
      parameters:
        - name: token.user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: enable
          in: query
          description: |-
            ObjectId user = 1; // [required]
             string usage = 2;  // [optional] usage description
             bool enable = 3;
          schema:
            type: boolean
      requestBody:
        description: |-
          processing
          ------------
          token.user.id // [required] authorization
          token.usage   // [optional] short description
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                createdAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                createdBy:
                  $ref: '#/components/schemas/api.ObjectId'
                deletedAt:
                  type: string
                  format: int64
                  title: '[optional] disabled at'
                deletedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                id:
                  type: string
                  title: 'tokenKey::token_key'
                token:
                  type: string
                  title: 'tokenString::access_token'
                updatedAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                updatedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  type: string
                  title: '[optional] short usage description'
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      title: display name
                  title: '[optional] output depends on API endpoint'
              title: |-
                processing
                ------------
                token.user.id // [required] authorization
                token.usage   // [optional] short description
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
      tags:
        - UserAccessTokens
  '/users/{update.user.id}/tokens/{update.id}':
    patch:
      operationId: UserAccessTokens_UpdateUserAccessToken2
      parameters:
        - name: update.user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: update.id
          in: path
          description: 'tokenKey::token_key'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: '[optional] PATCH implementation'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: enable
          in: query
          schema:
            type: boolean
      requestBody:
        description: '[required] identification + modifications(about)'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                createdAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                createdBy:
                  $ref: '#/components/schemas/api.ObjectId'
                deletedAt:
                  type: string
                  format: int64
                  title: '[optional] disabled at'
                deletedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                token:
                  type: string
                  title: 'tokenString::access_token'
                updatedAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                updatedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  type: string
                  title: '[optional] short usage description'
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      title: display name
                  title: '[optional] output depends on API endpoint'
              title: '[required] identification + modifications(about)'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
      tags:
        - UserAccessTokens
    put:
      operationId: UserAccessTokens_UpdateUserAccessToken
      parameters:
        - name: update.user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: update.id
          in: path
          description: 'tokenKey::token_key'
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: '[optional] PATCH implementation'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: enable
          in: query
          schema:
            type: boolean
      requestBody:
        description: '[required] identification + modifications(about)'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                createdAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                createdBy:
                  $ref: '#/components/schemas/api.ObjectId'
                deletedAt:
                  type: string
                  format: int64
                  title: '[optional] disabled at'
                deletedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] disabled by'
                token:
                  type: string
                  title: 'tokenString::access_token'
                updatedAt:
                  type: string
                  format: int64
                  title: 'unix::ms'
                updatedBy:
                  $ref: '#/components/schemas/api.ObjectId'
                usage:
                  type: string
                  title: '[optional] short usage description'
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      title: display name
                  title: '[optional] output depends on API endpoint'
              title: '[required] identification + modifications(about)'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
      tags:
        - UserAccessTokens
  '/users/{user.id}':
    patch:
      operationId: Users_UpdateUser2
      parameters:
        - name: user.id
          in: path
          description: Object ID
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: 'PATCH: partial update'
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: 'body: modifications/changes'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatName:
                  description: |-
                    The "chat_name" field is used to store the name displayed externally on the platform.
                    For example, "chat_name" is shown when an agent connects to chats with clients.
                  type: string
                contact:
                  description: '[optional] contact connected to this user'
                  $ref: '#/components/schemas/api.ObjectId'
                  title: |-
                    repeated Call calls = 13; // order by created_at
                    repeated Registration reged = 13; // order by register_last
                createdAt:
                  type: string
                  format: int64
                  title: unix
                createdBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deletedAt:
                  type: string
                  format: int64
                  title: unix
                deletedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                device:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] default device assigned ? WebRTC register ?'
                devices:
                  description: '[editable] list of unique `regular` devices, attached to this user'
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'map<int64, string> devices = 13;'
                email:
                  type: string
                extension:
                  type: string
                  title: 'Caller-ID-Number:'
                hotdesks:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
                license:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.LicenseUser'
                    type: object
                  title: 'list of unique licenses, granted to this user'
                name:
                  type: string
                  title: 'Caller-ID-Name: Display Name'
                password:
                  type: string
                permissions:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.Permission'
                    type: object
                  title: set of operational permission grants
                presence:
                  description: |-
                    string presence = 7; // unique set of <user> presentity <status:basic> tuples open[ed]
                     string status = 8; // short display status (short description)
                  $ref: '#/components/schemas/api.UserPresence'
                  title: |-
                    CallerId caller = 5; // extension
                    PresenceStatus presence = 8;
                profile:
                  type: object
                  additionalProperties:
                    type: string
                  title: 'list of variables, assigned to this user as an environment unit'
                roles:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'roles, member of which is this user'
                totpUrl:
                  type: string
                  title: '[readonly][optional] one time password if setting (2fa) is enabled'
                updatedAt:
                  type: string
                  format: int64
                  title: unix
                updatedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                username:
                  type: string
                  title: alphanumeric username (login)
              title: 'body: modifications/changes'
      responses:
        '200':
          description: (empty)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.User'
      tags:
        - Users
    put:
      operationId: Users_UpdateUser
      parameters:
        - name: user.id
          in: path
          description: Object ID
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          description: 'PATCH: partial update'
          schema:
            type: array
            items:
              type: string
          explode: true
      requestBody:
        description: 'body: modifications/changes'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatName:
                  description: |-
                    The "chat_name" field is used to store the name displayed externally on the platform.
                    For example, "chat_name" is shown when an agent connects to chats with clients.
                  type: string
                contact:
                  description: '[optional] contact connected to this user'
                  $ref: '#/components/schemas/api.ObjectId'
                  title: |-
                    repeated Call calls = 13; // order by created_at
                    repeated Registration reged = 13; // order by register_last
                createdAt:
                  type: string
                  format: int64
                  title: unix
                createdBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                deletedAt:
                  type: string
                  format: int64
                  title: unix
                deletedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                device:
                  $ref: '#/components/schemas/api.ObjectId'
                  title: '[optional] default device assigned ? WebRTC register ?'
                devices:
                  description: '[editable] list of unique `regular` devices, attached to this user'
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'map<int64, string> devices = 13;'
                email:
                  type: string
                extension:
                  type: string
                  title: 'Caller-ID-Number:'
                hotdesks:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
                license:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.LicenseUser'
                    type: object
                  title: 'list of unique licenses, granted to this user'
                name:
                  type: string
                  title: 'Caller-ID-Name: Display Name'
                password:
                  type: string
                permissions:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.Permission'
                    type: object
                  title: set of operational permission grants
                presence:
                  description: |-
                    string presence = 7; // unique set of <user> presentity <status:basic> tuples open[ed]
                     string status = 8; // short display status (short description)
                  $ref: '#/components/schemas/api.UserPresence'
                  title: |-
                    CallerId caller = 5; // extension
                    PresenceStatus presence = 8;
                profile:
                  type: object
                  additionalProperties:
                    type: string
                  title: 'list of variables, assigned to this user as an environment unit'
                roles:
                  type: array
                  items:
                    $ref: '#/components/schemas/api.ObjectId'
                    type: object
                  title: 'roles, member of which is this user'
                totpUrl:
                  type: string
                  title: '[readonly][optional] one time password if setting (2fa) is enabled'
                updatedAt:
                  type: string
                  format: int64
                  title: unix
                updatedBy:
                  $ref: '#/components/schemas/api.UserId'
                  title: user
                username:
                  type: string
                  title: alphanumeric username (login)
              title: 'body: modifications/changes'
      responses:
        '200':
          description: (empty)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.User'
      tags:
        - Users
  '/users/{user.id}/tokens':
    get:
      operationId: UserAccessTokens_ListUserAccessToken
      parameters:
        - name: user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: userName
          in: query
          description: display name
          schema:
            type: string
        - name: q
          in: query
          description: |-
            int32 page = 2;
            int64 size = 3;

            .usage ILIKE :q
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            ----- Search Options -------------------------

            select: output (fields,...)
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'select: order by (fields,...)'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: page
          in: query
          description: 'select: offset {page}'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'select: limit {size}'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessTokenList'
      tags:
        - UserAccessTokens
  '/users/{user.id}/tokens/{id}':
    delete:
      operationId: UserAccessTokens_DeleteUserAccessToken
      parameters:
        - name: user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: 'tokenKey::uuid'
          required: true
          schema:
            type: string
        - name: userName
          in: query
          description: display name
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
      tags:
        - UserAccessTokens
    get:
      operationId: UserAccessTokens_GetUserAccessToken
      parameters:
        - name: user.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          description: 'tokenKey::uuid'
          required: true
          schema:
            type: string
        - name: userName
          in: query
          description: display name
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessToken'
      tags:
        - UserAccessTokens
  '/users/{user_id}/2fa':
    get:
      operationId: TwoFactorAuthentication_GetUserTfaKey
      summary: GetUserTfaKey locates the secret for user and returns it as a TOTP url
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GetUserTfaKeyResponse'
      tags:
        - TwoFactorAuthentication
    post:
      operationId: TwoFactorAuthentication_GenerateUserTfaKey
      summary: GenerateUserTfaKey generates new or regenerates secret for the concrete user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GenerateUserTfaKeyResponse'
      tags:
        - TwoFactorAuthentication
  /wfm/agents/absences:
    get:
      operationId: AgentAbsenceService_SearchAgentsAbsences
      summary: Searches absences by filters.
      parameters:
        - name: q
          in: query
          description: Searches by agent name.
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: filters
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentsAbsencesResponse'
      tags:
        - AgentAbsenceService
    post:
      operationId: AgentAbsenceService_CreateAgentsAbsences
      summary: Creates absences for multiple specified agents.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateAgentsAbsencesRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateAgentsAbsencesResponse'
      tags:
        - AgentAbsenceService
  '/wfm/agents/working_schedules/{working_schedule_id}':
    get:
      operationId: AgentWorkingScheduleService_SearchAgentsWorkingSchedule
      parameters:
        - name: working_schedule_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
        - name: supervisorId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: teamId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: skillId
          in: query
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: q
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentsWorkingScheduleResponse'
      tags:
        - AgentWorkingScheduleService
    post:
      operationId: AgentWorkingScheduleService_CreateAgentsWorkingScheduleShifts
      parameters:
        - name: working_schedule_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agents:
                  type: array
                  items:
                    $ref: '#/components/schemas/wfmLookupEntity'
                    type: object
                date:
                  $ref: '#/components/schemas/wfmFilterBetween'
                items:
                  description: 'Map key is a day of week: 0 - Sunday, ..., 6 - Saturday.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/wfmAgentScheduleShift'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateAgentsWorkingScheduleShiftsResponse'
      tags:
        - AgentWorkingScheduleService
  '/wfm/agents/{agent_id}/absences':
    get:
      operationId: AgentAbsenceService_SearchAgentAbsence
      summary: Searches agent absences by filters.
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: filters
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchAgentAbsenceResponse'
      tags:
        - AgentAbsenceService
    post:
      operationId: AgentAbsenceService_CreateAgentAbsence
      summary: Creates one-day-absence for one agent.
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: '#/components/schemas/wfmAbsence'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateAgentAbsenceResponse'
      tags:
        - AgentAbsenceService
  '/wfm/agents/{agent_id}/absences/{id}':
    delete:
      operationId: AgentAbsenceService_DeleteAgentAbsence
      summary: Deletes agent concrete absence by its id.
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteAgentAbsenceResponse'
      tags:
        - AgentAbsenceService
    get:
      operationId: AgentAbsenceService_ReadAgentAbsence
      summary: Reads one absence per agent by its id.
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadAgentAbsenceResponse'
      tags:
        - AgentAbsenceService
  '/wfm/agents/{agent_id}/absences/{item.id}':
    put:
      operationId: AgentAbsenceService_UpdateAgentAbsence
      summary: Updates agent concrete absence by its id.
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    absentAt:
                      type: string
                      format: int64
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    domainId:
                      type: string
                      format: int64
                    typeId:
                      $ref: '#/components/schemas/wfmAbsenceType'
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateAgentAbsenceResponse'
      tags:
        - AgentAbsenceService
  '/wfm/agents/{agent_id}/conditions':
    get:
      operationId: AgentWorkingConditionsService_ReadAgentWorkingConditions
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadAgentWorkingConditionsResponse'
      tags:
        - AgentWorkingConditionsService
    put:
      operationId: AgentWorkingConditionsService_UpdateAgentWorkingConditions
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: '#/components/schemas/wfmAgentWorkingConditions'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateAgentWorkingConditionsResponse'
      tags:
        - AgentWorkingConditionsService
  /wfm/lookups/forecast_calculation:
    get:
      operationId: ForecastCalculationService_SearchForecastCalculation
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchForecastCalculationResponse'
      tags:
        - ForecastCalculationService
    post:
      operationId: ForecastCalculationService_CreateForecastCalculation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateForecastCalculationRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateForecastCalculationResponse'
      tags:
        - ForecastCalculationService
  '/wfm/lookups/forecast_calculation/{id}':
    delete:
      operationId: ForecastCalculationService_DeleteForecastCalculation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteForecastCalculationResponse'
      tags:
        - ForecastCalculationService
    get:
      operationId: ForecastCalculationService_ReadForecastCalculation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadForecastCalculationResponse'
      tags:
        - ForecastCalculationService
  '/wfm/lookups/forecast_calculation/{id}/execute':
    get:
      operationId: ForecastCalculationService_ExecuteForecastCalculation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: teamId
          in: query
          schema:
            type: string
            format: int64
        - name: forecastDataFrom
          in: query
          schema:
            type: string
            format: int64
        - name: forecastDataTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmExecuteForecastCalculationResponse'
      tags:
        - ForecastCalculationService
  '/wfm/lookups/forecast_calculation/{item.id}':
    put:
      operationId: ForecastCalculationService_UpdateForecastCalculation
      parameters:
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    args:
                      type: array
                      items:
                        type: string
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domainId:
                      type: string
                      format: int64
                    name:
                      type: string
                    procedure:
                      type: string
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateForecastCalculationResponse'
      tags:
        - ForecastCalculationService
  /wfm/lookups/pause_templates:
    get:
      operationId: PauseTemplateService_SearchPauseTemplate
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchPauseTemplateResponse'
      tags:
        - PauseTemplateService
    post:
      operationId: PauseTemplateService_CreatePauseTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreatePauseTemplateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreatePauseTemplateResponse'
      tags:
        - PauseTemplateService
  '/wfm/lookups/pause_templates/{id}':
    delete:
      operationId: PauseTemplateService_DeletePauseTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeletePauseTemplateResponse'
      tags:
        - PauseTemplateService
    get:
      operationId: PauseTemplateService_ReadPauseTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadPauseTemplateResponse'
      tags:
        - PauseTemplateService
  '/wfm/lookups/pause_templates/{item.id}':
    put:
      operationId: PauseTemplateService_UpdatePauseTemplate
      summary: |-
        UpdatePauseTemplateCauseBulk updates a pause template with a list of causes.
        Update existing cause, create that not exists in database and delete that not exists in the list.
      parameters:
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    causes:
                      type: array
                      items:
                        $ref: '#/components/schemas/wfmPauseTemplateCause'
                        type: object
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domainId:
                      type: string
                      format: int64
                    name:
                      type: string
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdatePauseTemplateResponse'
      tags:
        - PauseTemplateService
  /wfm/lookups/shift_templates:
    get:
      operationId: ShiftTemplateService_SearchShiftTemplate
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchShiftTemplateResponse'
      tags:
        - ShiftTemplateService
    post:
      operationId: ShiftTemplateService_CreateShiftTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateShiftTemplateRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateShiftTemplateResponse'
      tags:
        - ShiftTemplateService
  '/wfm/lookups/shift_templates/{id}':
    delete:
      operationId: ShiftTemplateService_DeleteShiftTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteShiftTemplateResponse'
      tags:
        - ShiftTemplateService
    get:
      operationId: ShiftTemplateService_ReadShiftTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadShiftTemplateResponse'
      tags:
        - ShiftTemplateService
  '/wfm/lookups/shift_templates/{item.id}':
    put:
      operationId: ShiftTemplateService_UpdateShiftTemplate
      summary: |-
        UpdateShiftTemplate updates a shift template with a list times.
        Update existing time, create that not exists in database and delete that not exists in the list.
      parameters:
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    description:
                      type: string
                    domainId:
                      type: string
                      format: int64
                    name:
                      type: string
                    times:
                      type: array
                      items:
                        $ref: '#/components/schemas/wfmShiftTemplateTime'
                        type: object
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateShiftTemplateResponse'
      tags:
        - ShiftTemplateService
  /wfm/lookups/working_conditions:
    get:
      operationId: WorkingConditionService_SearchWorkingCondition
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchWorkingConditionResponse'
      tags:
        - WorkingConditionService
    post:
      operationId: WorkingConditionService_CreateWorkingCondition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateWorkingConditionRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateWorkingConditionResponse'
      tags:
        - WorkingConditionService
  '/wfm/lookups/working_conditions/{id}':
    delete:
      operationId: WorkingConditionService_DeleteWorkingCondition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteWorkingConditionResponse'
      tags:
        - WorkingConditionService
    get:
      operationId: WorkingConditionService_ReadWorkingCondition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingConditionResponse'
      tags:
        - WorkingConditionService
  '/wfm/lookups/working_conditions/{item.id}':
    put:
      operationId: WorkingConditionService_UpdateWorkingCondition
      parameters:
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    daysOff:
                      type: integer
                      format: int32
                    description:
                      type: string
                    domainId:
                      type: string
                      format: int64
                    name:
                      type: string
                    pauseDuration:
                      type: integer
                      format: int32
                    pauseTemplate:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    shiftTemplate:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    sickLeaves:
                      type: integer
                      format: int32
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    vacation:
                      type: integer
                      format: int32
                    workdayHours:
                      type: integer
                      format: int32
                    workdaysPerMonth:
                      type: integer
                      format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingConditionResponse'
      tags:
        - WorkingConditionService
  /wfm/lookups/working_schedules:
    get:
      operationId: WorkingScheduleService_SearchWorkingSchedule
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmSearchWorkingScheduleResponse'
      tags:
        - WorkingScheduleService
    post:
      operationId: WorkingScheduleService_CreateWorkingSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfmCreateWorkingScheduleRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmCreateWorkingScheduleResponse'
      tags:
        - WorkingScheduleService
  '/wfm/lookups/working_schedules/{id}':
    delete:
      operationId: WorkingScheduleService_DeleteWorkingSchedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmDeleteWorkingScheduleResponse'
      tags:
        - WorkingScheduleService
    get:
      operationId: WorkingScheduleService_ReadWorkingSchedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: fields
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingScheduleResponse'
      tags:
        - WorkingScheduleService
  '/wfm/lookups/working_schedules/{id}/agents':
    post:
      operationId: WorkingScheduleService_UpdateWorkingScheduleAddAgents
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agents:
                  type: array
                  items:
                    $ref: '#/components/schemas/wfmLookupEntity'
                    type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingScheduleAddAgentsResponse'
      tags:
        - WorkingScheduleService
  '/wfm/lookups/working_schedules/{id}/agents/{agent_id}':
    delete:
      operationId: WorkingScheduleService_UpdateWorkingScheduleRemoveAgent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: agent_id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingScheduleRemoveAgentResponse'
      tags:
        - WorkingScheduleService
  '/wfm/lookups/working_schedules/{id}/forecast':
    get:
      operationId: WorkingScheduleService_ReadWorkingScheduleForecast
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: dateFrom
          in: query
          schema:
            type: string
            format: int64
        - name: dateTo
          in: query
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmReadWorkingScheduleForecastResponse'
      tags:
        - WorkingScheduleService
  '/wfm/lookups/working_schedules/{item.id}':
    put:
      operationId: WorkingScheduleService_UpdateWorkingSchedule
      parameters:
        - name: item.id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    agents:
                      type: array
                      items:
                        $ref: '#/components/schemas/wfmLookupEntity'
                        type: object
                    blockOutsideActivity:
                      type: boolean
                    calendar:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    createdAt:
                      type: string
                      format: int64
                    createdBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    domainId:
                      type: string
                      format: int64
                    endDateAt:
                      type: string
                      format: int64
                    endTimeAt:
                      type: string
                      format: int64
                    extraSkills:
                      type: array
                      items:
                        $ref: '#/components/schemas/wfmLookupEntity'
                        type: object
                    name:
                      type: string
                    startDateAt:
                      type: string
                      format: int64
                    startTimeAt:
                      type: string
                      format: int64
                    state:
                      $ref: '#/components/schemas/wfmWorkingScheduleState'
                    team:
                      $ref: '#/components/schemas/wfmLookupEntity'
                    totalAgents:
                      type: string
                      format: int64
                    updatedAt:
                      type: string
                      format: int64
                    updatedBy:
                      $ref: '#/components/schemas/wfmLookupEntity'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfmUpdateWorkingScheduleResponse'
      tags:
        - WorkingScheduleService
  '/{object.name}/{object.id}/acl':
    get:
      operationId: AccessStore_ListObjectAccess
      parameters:
        - name: object.name
          in: path
          description: display name
          required: true
          schema:
            type: string
        - name: object.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
        - name: grantor
          in: query
          description: |-
            --- filters ---

            [optional] [FROM] each rule owner is any of role(s) id; user -or- role
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: grantee
          in: query
          description: '[optional] [TO] subject role(s) id; user -or- role'
          schema:
            type: array
            items:
              format: int64
              type: string
          explode: true
        - name: granted
          in: query
          description: '[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: q
          in: query
          description: '[optional] [TO] subject.name ILIKE ?q=; user -or- role'
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            ----- Select Options -------------------------

            attributes list
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: sort
          in: query
          description: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: size
          in: query
          description: |-
            pagedResultsControl

            default: 16
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: 'default: 1'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ListAccessResponseV1'
      tags:
        - AccessStore
    patch:
      operationId: AccessStore_ToggleObjectAccess
      summary: 'TODO: replace with GrantAccess API, to become command like GRANT REVOKE ... with empty access rights string'
      parameters:
        - name: object.name
          in: path
          description: display name
          required: true
          schema:
            type: string
        - name: object.id
          in: path
          description: identifier
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/api.GrantAccessRequestV1'
                type: object
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateAccessResponseV1'
      tags:
        - AccessStore
components:
  schemas:
    CreateAgentsAbsencesRequestabsentType:
      type: object
      properties:
        dateFrom:
          type: string
          format: int64
        dateTo:
          type: string
          format: int64
        typeId:
          $ref: '#/components/schemas/wfmAbsenceType'
    api.AccessRule:
      type: object
      properties:
        granted:
          type: string
          title: '[WHAT]: full: [xrwdxrwd]; privileges: [----xrwd]; grantable: [xrwd----]'
        grantee:
          $ref: '#/components/schemas/api.RoleId'
          title: '[WHOM]: required; NEED to be rechecked !!!'
        grantor:
          description: '[WHO]: operational; current user NEED to be rechecked !!!'
          $ref: '#/components/schemas/api.RoleId'
          title: ObjectId object = 1;
    api.AccessStore.ToggleDefaultAccessBody:
      type: object
      properties:
        list:
          description: |-
            list of changes ...

            [TO] (GRANT/REVOKE)
          type: array
          items:
            $ref: '#/components/schemas/api.GrantAccessRequestV1'
            type: object
        object:
          type: object
          title: '[ON] objclass (either: by entity .id -or- class .name)'
    api.AccessToken:
      type: object
      properties:
        accessToken:
          description: REQUIRED. The access token issued by the authorization server.
          type: string
        expiresIn:
          description: RECOMMENDED. The lifetime in seconds of the access token.
          type: integer
          format: int32
        refreshToken:
          description: |-
            OPTIONAL. The refresh token, which can be used to obtain
            new access tokens using the same authorization grant.
          type: string
        state:
          description: |-
            OPTIONAL, if identical to the scope requested by the client;
            otherwise, REQUIRED. The scope of the access token.
            repeated string scope = 5 [ json_name = "scope" ];
            REQUIRED if the "state" parameter was present in the client
            authorization request. The exact value received from the client.
          type: string
        tokenType:
          description: REQUIRED. The type of the token issued. Value is case insensitive.
          type: string
      title: OAuth 2.0 Access Token Response compatible
    api.Claim:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    api.Classes.UpdateClassBody:
      type: object
      properties:
        class:
          type: object
          properties:
            abac:
              type: boolean
              title: '[a]ttribute-[b]ased [a]ccess [c]ontrol'
            class:
              type: string
              title: '(class::object).name'
            obac:
              type: boolean
              title: '[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)'
            rbac:
              type: boolean
              title: '[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)'
        domain:
          type: string
          title: TO BE REMOVED // bound to session.domain.id
        fields:
          type: array
          items:
            type: string
          title: 'PATCH: partial update'
    api.CreateDeviceResponse:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
    api.CreateDomainRequest:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/api.Organization'
        password:
          type: string
        superuser:
          type: string
      title: POST /domains
    api.CreateDomainResponse:
      type: object
    api.CreateRoleRequest:
      type: object
      properties:
        copyId:
          type: string
          format: int64
          title: |-
            ----- Query parameters -----
            Optional. Source role unique identifier
            to copy access (+default) control list from
        role:
          $ref: '#/components/schemas/api.Role'
          title: entity to be created
    api.CreateRoleResponse:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/api.Role'
          title: entity to be created
    api.CreateUserRequest:
      type: object
      properties:
        confirmPassword:
          type: string
          title: cleartext passphrase
        user:
          $ref: '#/components/schemas/api.User'
          title: user entity to be created
        userPassword:
          type: string
          title: cleartext passphrase
    api.CreateUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/api.User'
    api.Customer:
      type: object
      properties:
        createdAt:
          description: local created ms
          type: string
          format: int64
          title: |-
            string version = 2; // version
            local store details
        dnsrv:
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: '[optional] domains'
        id:
          type: string
          title: 'serial number assigned (global::Customer-ID)'
        issuedAt:
          description: '[required] issuer(CA) created at'
          type: string
          format: int64
          title: validity boundaries
        license:
          description: grants issued
          type: array
          items:
            $ref: '#/components/schemas/api.LicenseV1'
            type: object
          title: int32 competitive = 13; // zero-based competitive sessions limit ?
        limit:
          description: 'defines map[class]limit usage'
          type: object
          additionalProperties:
            format: int32
            type: integer
          title: extensions granted
        nextUpdate:
          type: string
          format: int64
          title: '[optional]: signature expires; update required after'
        notAfter:
          type: string
          format: int64
          title: '[required] valid till'
        notBefore:
          type: string
          format: int64
          title: '[optional] valid from'
        organization:
          type: string
          title: registration name
        revokedAt:
          type: string
          format: int64
          title: local revoked ms
        thisUpdate:
          description: '[optional]: issuer(CA) signed at'
          type: string
          format: int64
          title: signature validity
        updatedAt:
          type: string
          format: int64
          title: last uploaded ms
        verify:
          description: '[optional] validation results'
          $ref: '#/components/schemas/api.Verification'
          title: Verification status
    api.DeleteDeviceResponse:
      type: object
      properties:
        deleted:
          type: array
          items:
            $ref: '#/components/schemas/api.Device'
            type: object
    api.DeleteDomainResponse:
      type: object
    api.DeleteLDAPRequest:
      type: object
      properties:
        id:
          type: string
          format: int64
          title: catalog id
        relatedObjects:
          type: boolean
          title: WITH objects bound to ?
    api.DeleteOAuthServiceRequest:
      type: object
      properties:
        id:
          type: array
          items:
            format: int64
            type: string
        permanent:
          type: boolean
    api.DeleteOAuthServiceResponse:
      type: object
    api.DeleteRoleResponse:
      type: object
      properties:
        deleted:
          $ref: '#/components/schemas/api.Role'
    api.DeleteUsersResponse:
      type: object
      properties:
        deleted:
          type: array
          items:
            $ref: '#/components/schemas/api.User'
            type: object
    api.Device:
      type: object
      properties:
        account:
          description: username
          type: string
          title: credentials
        brand:
          description: vendor brand name
          type: string
          title: provision
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deletedAt:
          type: string
          format: int64
          title: unix
        deletedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        hotdesk:
          description: act as a hotdesk
          type: boolean
          title: 'Hotdesk: this workstation aliases'
        hotdesks:
          type: array
          items:
            type: string
          title: associated aliases
        id:
          type: string
          format: int64
          title: object id
        ip:
          type: string
        loggedIn:
          type: string
          format: int64
          title: |-
            caller profile
             webitel.adt.caller caller = 4;
        mac:
          type: string
          title: static
        model:
          type: string
        name:
          description: display name
          type: string
          title: |-
            kind of
            DeviceType type = 19;
        password:
          type: string
          title: password
        provision:
          type: object
          additionalProperties:
            type: string
          title: provision extra data
        reged:
          type: boolean
          title: |-
            TODO: something like PresenceStatus instead of Registration
             repeated Registration contacts = 16;
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          $ref: '#/components/schemas/api.UserId'
          title: '[optional] The user that ''owns'' the device;'
      title: Device profile
    api.DeviceAudit:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/api.DeviceId'
          title: '/users/:id/audit related'
        hotdesk:
          type: string
        loggedIn:
          type: string
          format: int64
        loggedOut:
          type: string
          format: int64
        user:
          $ref: '#/components/schemas/api.UserId'
          title: '/devices/:id/audit related'
      title: Device login audit
    api.DeviceAuditResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.DeviceAudit'
            type: object
          title: audit_logs
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.DeviceId:
      type: object
      properties:
        id:
          type: string
          format: int64
          title: Object ID
        name:
          type: string
          title: Display Name
      title: DeviceId lookup value
    api.Domains.UpdateDomainBody:
      type: object
      properties:
        domain:
          type: object
          properties:
            country:
              type: string
            createdAt:
              type: string
              format: int64
              title: unix
            createdBy:
              type: string
              title: user
            domain:
              type: string
              title: FQDN
            email:
              type: string
            locality:
              type: string
            organization:
              type: string
            postalAddress:
              type: string
            postalCode:
              type: string
            stateOrProvince:
              type: string
            streetAddress:
              type: string
            telephoneNumber:
              type: string
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              type: string
              title: user
      title: 'PUT /domain/{domain.dc}'
    api.GenerateTfaKeysForNecessaryUsersResponse:
      type: object
      properties:
        affected:
          type: string
          format: int64
    api.GenerateUserTfaKeyResponse:
      type: object
      properties:
        totp:
          $ref: '#/components/schemas/api.TfaUrl'
    api.GetCustomerResponse:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/api.Customer'
    api.GetUserTfaKeyResponse:
      type: object
      properties:
        totp:
          $ref: '#/components/schemas/api.TfaUrl'
    api.GrantAccessRequestV1:
      type: object
      properties:
        grantee:
          type: string
          format: int64
          title: grantee.role.id
        grants:
          type: string
          title: |-
            repeated string privileges = 5; // ["SEARCH","MODIFY","DELETE","CREATE"]
            bool grantable = 6; // WITH GRANT OPTION
        object:
          $ref: '#/components/schemas/api.ObjectId'
          title: |-
            string class = 2;
            int64 object = 3; // class.object.id
    api.GrantRoleResponse:
      type: object
    api.LDAP.CreateLDAPTemplateBody:
      type: object
      properties:
        agent:
          type: object
          title: OPTIONAL. Agent objclass fields mapping
        baseDn:
          type: string
          title: Optional. LDAP Search base entry DN
        catalog:
          type: object
          properties:
            name:
              type: string
              title: display name
          title: LDAPCatalog belongs to
        createdAt:
          description: unix
          type: string
          format: int64
          title: READONLY. Operational attributes
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          type: object
          title: OPTIONAL. Device objclass fields mapping
        enabled:
          type: boolean
          title: Optional. This Template is activated ?
        id:
          type: string
          format: int64
          title: ID unique
        name:
          type: string
          title: Name this template
        role:
          type: object
          title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
        search:
          type: string
          title: Required. LDAP Search filter string
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          type: object
          title: OPTIONAL. User objclass fields mapping
      title: LDAPTemplate is an LDAP search entries to webitel objects transformation template
    api.LDAP.DeleteLDAPTemplateBody:
      type: object
      properties:
        baseDn:
          type: string
        disabled:
          type: boolean
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
          title: attributes list
        id:
          type: array
          items:
            format: int64
            type: string
          title: |-
            ----- Search Basic Filters ---------------------------
            OPTIONAL. Search templates by .id
        name:
          type: string
        objclass:
          type: string
        page:
          description: 'default: 1'
          type: integer
          format: int32
          title: '----- Select Options -------------------------'
        q:
          type: string
          title: OPTIONAL. Filter(s) SET
        size:
          type: integer
          format: int32
          title: 'default: 16'
        sort:
          type: array
          items:
            type: string
          title: 'e.g.: "updated_at" - ASC; "!updated_at" - DESC;'
    api.LDAP.LDAPSearchBody:
      type: object
      properties:
        attributes:
          type: array
          items:
            type: string
          title: AttributeSelection
        baseObject:
          type: string
          title: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          type: string
          title: '----- BIND: Authorization -----'
        controls:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: |-
            ----- LDAPMessage -----
            Controls NOT implemented yet !
        derefAliases:
          type: integer
          format: int32
          title: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
        filter:
          type: string
          title: 'Filter,'
        password:
          type: string
          title: password
        scope:
          type: integer
          format: int32
          title: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
        sizeLimit:
          type: string
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
        timeLimit:
          type: string
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
        tls:
          $ref: '#/components/schemas/api.LDAPSearchRequest.TLSConfig'
        typesOnly:
          type: boolean
          title: 'BOOLEAN,'
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          type: string
          title: Optional. URL to establish connection to LDAP catalog
        username:
          type: string
          title: bind_dn
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1'
    api.LDAP.ResyncLDAPCatalogBody:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/api.LDAProcessOptions'
          title: Options
    api.LDAP.UpdateLDAPCatalogBody:
      type: object
      properties:
        catalog:
          description: LDAP Catalog changes.
          type: object
          properties:
            baseDn:
              type: string
              title: 'base_dn, aka domain e.g.: ''dc=example,dc=org'''
            bind:
              description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
              type: string
              title: '----- BIND: Authorization -----'
            createdAt:
              description: unix
              type: string
              format: int64
              title: 'basic: last operation details'
            createdBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            cron:
              description: '[CRON]OS SPEC ! github.com/robfig/cron/v3'
              type: string
              title: |-
                ----- RSYNC Processing -----
                int32  priority = 4;
            entryModify:
              type: string
              title: last modification timestamp attribute type
            entryUuid:
              description: entry unique id (except DN which may be updated)
              type: string
              title: '----- DOMAIN: Entry model -----'
            name:
              type: string
              title: Meaningfull title name
            password:
              type: string
              title: password
            process:
              $ref: '#/components/schemas/api.LDAProcess'
              title: Last OR Current SYNC process details
            sync:
              $ref: '#/components/schemas/api.LDAProcessOptions'
            templates:
              type: array
              items:
                $ref: '#/components/schemas/api.LDAPTemplate'
                type: object
              title: |-
                // // ----- MAP: user(s) settings -----
                LDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead
                SYNC Object's search and mappings
            tls:
              $ref: '#/components/schemas/api.LDAPCatalog.TLSConfig'
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            url:
              description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
              type: string
              title: '----- Connection Options -----'
            username:
              type: string
              title: bind_dn
          title: LDAP Catalog changes.
        fields:
          type: array
          items:
            type: string
          title: Fields for partial update. PATCH
    api.LDAP.UpdateLDAPTemplateBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          title: OPTIONAL. Fields for partial update. PATCH
        template:
          description: Template changes.
          type: object
          properties:
            agent:
              type: object
              title: OPTIONAL. Agent objclass fields mapping
            baseDn:
              type: string
              title: Optional. LDAP Search base entry DN
            catalog:
              type: object
              properties:
                name:
                  type: string
                  title: display name
              title: LDAPCatalog belongs to
            createdAt:
              description: unix
              type: string
              format: int64
              title: READONLY. Operational attributes
            createdBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            device:
              type: object
              title: OPTIONAL. Device objclass fields mapping
            enabled:
              type: boolean
              title: Optional. This Template is activated ?
            name:
              type: string
              title: Name this template
            role:
              type: object
              title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
            search:
              type: string
              title: Required. LDAP Search filter string
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            user:
              type: object
              title: OPTIONAL. User objclass fields mapping
          title: Template changes.
    api.LDAPCatalog:
      type: object
      properties:
        baseDn:
          type: string
          title: 'base_dn, aka domain e.g.: ''dc=example,dc=org'''
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          type: string
          title: '----- BIND: Authorization -----'
        createdAt:
          description: unix
          type: string
          format: int64
          title: 'basic: last operation details'
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        cron:
          description: '[CRON]OS SPEC ! github.com/robfig/cron/v3'
          type: string
          title: |-
            ----- RSYNC Processing -----
            int32  priority = 4;
        entryModify:
          type: string
          title: last modification timestamp attribute type
        entryUuid:
          description: entry unique id (except DN which may be updated)
          type: string
          title: '----- DOMAIN: Entry model -----'
        id:
          type: string
          format: int64
          title: |-
            identity
            int64 dc = 1;
        name:
          type: string
          title: Meaningfull title name
        password:
          type: string
          title: password
        process:
          $ref: '#/components/schemas/api.LDAProcess'
          title: Last OR Current SYNC process details
        sync:
          $ref: '#/components/schemas/api.LDAProcessOptions'
        templates:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPTemplate'
            type: object
          title: |-
            // // ----- MAP: user(s) settings -----
            LDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead
            SYNC Object's search and mappings
        tls:
          $ref: '#/components/schemas/api.LDAPCatalog.TLSConfig'
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          type: string
          title: '----- Connection Options -----'
        username:
          type: string
          title: bind_dn
      title: LDAPCatalog profile
    api.LDAPCatalog.TLSConfig:
      type: object
      properties:
        ca:
          type: string
          format: byte
          title: 'PEM: base64'
        cert:
          description: 'PEM: base64'
          type: string
          format: byte
          title: 'TODO: (!)'
        key:
          type: string
          format: byte
          title: 'PEM: base64'
      title: TLS configuration options
    api.LDAPControl:
      type: object
      properties:
        controlType:
          type: string
          title: 'LDAPOID,'
        controlValue:
          type: string
          title: OCTET STRING OPTIONAL
        criticality:
          type: boolean
          title: 'BOOLEAN DEFAULT FALSE,'
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.1.11'
    api.LDAPObjentry:
      type: object
      properties:
        class:
          type: string
          title: Internal object class been associated with this LDAP .entry
        entry:
          description: 'map<string, string> entry = 1;'
          type: object
          title: LDAP Entry Attributes fetched
        errs:
          type: array
          items:
            type: string
          title: FATAL Error(s). NON empty indicates that this process failed
        object:
          type: object
          title: Internal object state; DUMP
        proc:
          type: string
          title: 'Operation been performed: create|update|delete'
        warn:
          type: array
          items:
            type: string
          title: |-
            An error(s) if any occured
            NON-FATAL Warnings
      title: LDAP entry object associatetions performed
    api.LDAPSearchRequest:
      type: object
      properties:
        attributes:
          type: array
          items:
            type: string
          title: AttributeSelection
        baseObject:
          type: string
          title: |-
            ----- SearchRequest -----
            baseObject [D]istinguished[N]ame
        bind:
          description: 'authorization method e.g.: SIMPLE, SAML, NTLM, etc.'
          type: string
          title: '----- BIND: Authorization -----'
        catalogId:
          type: string
          format: int64
          title: |-
            ----- connection -----
            Optional. ID of the preconfigured LDAP catalog
        controls:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: |-
            ----- LDAPMessage -----
            Controls NOT implemented yet !
        derefAliases:
          type: integer
          format: int32
          title: |-
            neverDerefAliases       (0),
            derefInSearching        (1),
            derefFindingBaseObj     (2),
            derefAlways             (3)
        filter:
          type: string
          title: 'Filter,'
        password:
          type: string
          title: password
        scope:
          type: integer
          format: int32
          title: |-
            baseObject              (0),
            singleLevel             (1),
            wholeSubtree            (2)
        sizeLimit:
          type: string
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
        timeLimit:
          type: string
          format: int64
          title: 'INTEGER (0 ..  maxInt),'
        tls:
          $ref: '#/components/schemas/api.LDAPSearchRequest.TLSConfig'
        typesOnly:
          type: boolean
          title: 'BOOLEAN,'
        url:
          description: 'URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]'
          type: string
          title: Optional. URL to establish connection to LDAP catalog
        username:
          type: string
          title: bind_dn
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1'
    api.LDAPSearchRequest.TLSConfig:
      type: object
      properties:
        pem:
          description: base64
          type: string
          format: byte
          title: 'TODO: (!)'
      title: TLS configuration options
    api.LDAPSearchResponse:
      type: object
      properties:
        controls:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPControl'
            type: object
          title: '----- LDAPMessage -----'
        diagnosticMessage:
          type: string
          title: 'LDAPString,'
        entries:
          type: array
          items:
            type: object
          title: '----- SearchResult (Entry|Reference) -----'
        matchedDn:
          type: string
          title: 'LDAPDN,'
        referral:
          type: array
          items:
            type: string
          title: '[3] Referral OPTIONAL'
        resultCode:
          type: integer
          format: int32
          title: '----- LDAPResult -----'
      title: 'https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.2'
    api.LDAPTemplate:
      type: object
      properties:
        agent:
          type: object
          title: OPTIONAL. Agent objclass fields mapping
        baseDn:
          type: string
          title: Optional. LDAP Search base entry DN
        catalog:
          $ref: '#/components/schemas/api.ObjectId'
          title: LDAPCatalog belongs to
        createdAt:
          description: unix
          type: string
          format: int64
          title: READONLY. Operational attributes
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          type: object
          title: OPTIONAL. Device objclass fields mapping
        enabled:
          type: boolean
          title: Optional. This Template is activated ?
        id:
          type: string
          format: int64
          title: ID unique
        name:
          type: string
          title: Name this template
        role:
          type: object
          title: OPTIONAL. Role objclass fields mapping (Not implemented yet)
        search:
          type: string
          title: Required. LDAP Search filter string
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          type: object
          title: OPTIONAL. User objclass fields mapping
      title: LDAPTemplate is an LDAP search entries to webitel objects transformation template
    api.LDAPTemplateResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPTemplate'
            type: object
        next:
          type: boolean
          title: 'result: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'result: {page} number'
    api.LDAProcess:
      type: object
      properties:
        completeAt:
          description: Optional. If not <zero> indicates that this process is completed.
          type: string
          format: int64
        executeAt:
          type: string
          format: int64
          title: Readonly. Process start timestamp
        executeBy:
          $ref: '#/components/schemas/api.RoleId'
          title: Optional. Start manually by the user or role
        id:
          type: string
          format: int64
          title: Readonly. Process unique identifier
        options:
          $ref: '#/components/schemas/api.LDAProcessOptions'
          title: Readonly. Executed with options
        progress:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPObjentry'
            type: object
          title: Optional. List of entries been already processed
        status:
          type: string
          title: Optional. Status description or an error if any occured
      title: LDAP synchronization process details
    api.LDAProcessOptions:
      type: object
      properties:
        linkExistingObjects:
          type: boolean
          title: |-
            Allows to create links
            with fetched LDAP entries
            for manually created objects
        reassignDeviceUsers:
          type: boolean
          title: |-
            Allows to reassign device's owner user
            due to preconfigured mapping LDAP template
        test:
          type: boolean
          title: |-
            Will NOT perform any operations on storage.
            To review potential processing only
        timeout:
          type: string
          format: int64
          title: Operation timeout. Not implemented yet
    api.LDAProcessResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAProcess'
            type: object
        next:
          type: boolean
          title: 'result: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'result: {page} number'
    api.LicenseUsageResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.LicenseV1'
            type: object
          title: |-
            size = (.next ? len(items) : undef (> len(size)))
            ----- Result entries ----- //
        next:
          type: boolean
          title: next page exists ? more results ?
        page:
          description: this page number !
          type: integer
          format: int32
          title: '----- Result paging ----- //'
    api.LicenseUser:
      type: object
      properties:
        expiresAt:
          type: string
          format: int64
          title: not after
        id:
          type: string
          title: license.id
        issuedAt:
          type: string
          format: int64
          title: not before
        prod:
          type: string
          title: license.prod
        scope:
          type: array
          items:
            type: string
          title: setof objclass grants
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::user'
      title: USAGE details
    api.LicenseUsersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.ProductUser'
            type: object
          title: |-
            size = (.next ? len(items) : undef (> len(size)))
            ----- Result entries ----- //
        next:
          type: boolean
          title: next page exists ? more results ?
        page:
          description: this page number !
          type: integer
          format: int32
          title: '----- Result paging ----- //'
    api.LicenseV1:
      type: object
      properties:
        competitive:
          type: boolean
        id:
          type: string
          title: 'serial number assigned (global::License-ID)'
        limit:
          type: integer
          format: int32
          title: 'required: limit count (maximum allowed usage quantity)'
        notAfter:
          type: string
          format: int64
          title: optional
        notBefore:
          type: string
          format: int64
          title: optional
        product:
          type: string
          title: 'product name, e.g.: DEVICE, MANAGER, OPERATOR'
        remain:
          description: available
          type: integer
          format: int32
          title: |-
            operational attributes ...
            remain = limit - len(users)
        scope:
          description: 'list of known classes, &this product grants mandatory access to, e.g.: ''users'', ''roles'', ''cc_agent'', ''calendars'', ...'
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/api.Verification'
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: users.id (grantees)
    api.ListAccessResponseV1:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
          title: endregion
        next:
          type: boolean
          title: 'indicate partial response: ( next || page > 1 ? partial : full )'
        page:
          type: integer
          format: int32
          title: 'region: paged result control response value'
    api.ListRegistrationsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.Registration'
            type: object
          title: registered
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.LoginResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/api.AccessToken'
    api.LogoutUserResponse:
      type: object
    api.OAuth2Federation.DeleteOAuthServiceBody:
      type: object
      properties:
        permanent:
          type: boolean
    api.OAuth2Federation.UpdateOAuthServiceBody:
      type: object
      properties:
        changes:
          description: Configuration changes.
          type: object
          properties:
            authUrl:
              type: string
              title: OAuth 2.0 Authorization Endpoint
            claims:
              description: google.protobuf.Struct claims = 7;
              type: array
              items:
                $ref: '#/components/schemas/api.Claim'
                type: object
              title: |-
                Identity claims policy rules
                NOTE: Order matters
            clientId:
              type: string
            clientSecret:
              type: string
            createdAt:
              type: string
              format: int64
              title: unix
            createdBy:
              $ref: '#/components/schemas/api.ObjectId'
              title: user
            discoveryUrl:
              type: string
              title: OpenID Connect Service Discovery
            domain:
              $ref: '#/components/schemas/api.ObjectId'
            enabled:
              type: boolean
            logo:
              type: string
            metadata:
              type: object
            name:
              type: string
              title: display
            scopes:
              type: array
              items:
                type: string
              title: Scopes to be requested
            tokenUrl:
              type: string
              title: OAuth 2.0 Token Endpoint
            type:
              type: string
              title: well-known vendor; provider
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              $ref: '#/components/schemas/api.ObjectId'
              title: user
            userinfoUrl:
              type: string
              title: OpenID Connect Userinfo Endpoint
          title: Configuration changes.
        fields:
          type: array
          items:
            type: string
          title: Fields for partial update. PATCH
    api.OAuthService:
      type: object
      properties:
        authUrl:
          type: string
          title: OAuth 2.0 Authorization Endpoint
        claims:
          description: google.protobuf.Struct claims = 7;
          type: array
          items:
            $ref: '#/components/schemas/api.Claim'
            type: object
          title: |-
            Identity claims policy rules
            NOTE: Order matters
        clientId:
          type: string
        clientSecret:
          type: string
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          $ref: '#/components/schemas/api.ObjectId'
          title: user
        discoveryUrl:
          type: string
          title: OpenID Connect Service Discovery
        domain:
          $ref: '#/components/schemas/api.ObjectId'
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        logo:
          type: string
        metadata:
          type: object
        name:
          type: string
          title: display
        scopes:
          type: array
          items:
            type: string
          title: Scopes to be requested
        tokenUrl:
          type: string
          title: OAuth 2.0 Token Endpoint
        type:
          type: string
          title: well-known vendor; provider
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.ObjectId'
          title: user
        userinfoUrl:
          type: string
          title: OpenID Connect Userinfo Endpoint
      title: 'OAuth 2.0 Authentication [S]ervice [P]rovider Application Configuration'
    api.Objclass:
      type: object
      properties:
        abac:
          description: '[A]ttribute-[b]ased;  not implemented; next releases ...'
          type: boolean
          title: 'Is [?]-[b]ased [A]ccess [C]ontrol *model enabled ?'
        access:
          description: 'flags: [ CREATE | SELECT | UPDATE | DELETE ]'
          type: string
          title: 'Extension: discretionary access control'
        class:
          type: string
          title: 'class: alphanumeric code name'
        id:
          description: 'class: object id'
          type: string
          format: int64
          title: 'Inherit::ObjectClass'
        name:
          type: string
          title: 'class: display common name'
        obac:
          type: boolean
          title: '[O]peration-[b]ased;  Mandatory: control access to object.class (alias: collection, section, etc.)'
        rbac:
          type: boolean
          title: '[R]ecord-[b]ased; Discretionary: control access to object.entry (alias: resource, record, etc.)'
      title: |-
        AccessScope represents authorized access level
        to object class declaration within domain namespace
    api.ObjectClass:
      type: object
      properties:
        abac:
          type: boolean
          title: '[a]ttribute-[b]ased [a]ccess [c]ontrol'
        class:
          type: string
          title: '(class::object).name'
        id:
          type: string
          format: int64
          title: '(class::object).id'
        obac:
          type: boolean
          title: '[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)'
        rbac:
          type: boolean
          title: '[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)'
    api.ObjectId:
      type: object
      properties:
        id:
          type: string
          format: int64
          title: identifier
        name:
          type: string
          title: display name
    api.Organization:
      type: object
      properties:
        country:
          type: string
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          type: string
          title: user
        dc:
          type: string
          format: int64
          title: component
        domain:
          type: string
          title: FQDN
        email:
          type: string
        locality:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
        postalCode:
          type: string
        stateOrProvince:
          type: string
        streetAddress:
          type: string
        telephoneNumber:
          type: string
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          type: string
          title: user
    api.Permission:
      type: object
      properties:
        id:
          description: '[required] e.g.: ''read'', ''playback_record_file'', ...'
          type: string
        name:
          type: string
          title: '[optional] e.g.: ''Select Any'''
        usage:
          type: string
          title: '[optional] e.g.: ''Grants permission to select any objects'''
    api.Presence.SetStatusBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          title: 'PATCH: partial attributes'
        publish:
          description: 'BODY: partial modifications'
          type: object
          properties:
            expires:
              type: integer
              format: int32
              title: '[optional] <note> will be cleaned up after seconds'
            note:
              type: string
              title: '[optional] human readable comment'
            status:
              type: string
              title: '[optional] set of unique ''active'' presentities {dnd,dlg,sip,wss}; assume {offline} if omitted'
            timestamp:
              type: string
              format: int64
              title: '[required] last activity time'
          title: int64 id = 1; // user.id
    api.PresenceStatus:
      type: object
      properties:
        app:
          type: string
          title: '[optional] service node identity'
        closed:
          type: boolean
          title: '[optional] signify <status> tuple gone from user''s presence; equls to (open == 0)'
        contact:
          type: string
          title: '[optional] communication <url>'
        domainId:
          type: string
          format: int64
          title: '[hidden] for cluster purpose'
        expires:
          type: string
          format: int64
          title: 'NOTE: <dnd> actualy has no expires until user manualy switch it off'
        id:
          description: '[required] tuple unique id; <track>'
          type: string
          title: 'basic:latest'
        note:
          type: string
          title: '[optional] human readable comment'
        open:
          type: integer
          format: int32
          title: '[optional] positive value signify ''active'''
        presence:
          description: "// FIXME: well-known types ?\r\n repeated Dialog  call = 9;\r\n repeated Sipreg  sip = 9;\r\n repeated Websock wss = 9;"
          type: array
          items:
            $ref: '#/components/schemas/api.PresenceStatus'
            type: object
          title: 'detailed: -registered -tracking tuples'
        priority:
          type: integer
          format: int32
          title: '[optional] importance level of this within presentity''s'
        sequence:
          type: string
          format: int64
          title: '[optional] this tuple (document) modifications version'
        status:
          type: string
          title: '[optional] unique set of <enum:dnd|call|sip|wss>; assume <offline> if blank; <scope> on request'
        timestamp:
          type: string
          format: int64
          title: '[required] opened time'
      title: PresenceStatus PUBLISH
    api.ProductUser:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::domain'
        expiresAt:
          type: string
          format: int64
          title: not after
        issuedAt:
          type: string
          format: int64
          title: not before
        sessions:
          type: integer
          format: int32
          title: User's active sessions count !
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: 'grant to::user'
      title: ProductUser GRANT details
    api.ReadClassResponse:
      type: object
      properties:
        class:
          $ref: '#/components/schemas/api.ObjectClass'
    api.ReadDeviceResponse:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
    api.ReadDomainResponse:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/api.Organization'
    api.ReadRoleResponse:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/api.Role'
    api.ReadUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/api.User'
    api.Registration:
      type: object
      properties:
        callid:
          type: string
        contact:
          type: string
          title: binding_uri
        device:
          $ref: '#/components/schemas/api.DeviceId'
        expiresAt:
          type: string
          format: int64
        id:
          type: string
          format: int64
        instance:
          type: string
          title: '?sip.instance= register contact option'
        received:
          type: string
          title: 'registrant: remote side (proxy)'
        registerAt:
          type: string
          format: int64
        socket:
          type: string
          title: 'registrar: local side (host) e.g.:'
        user:
          $ref: '#/components/schemas/api.UserId'
        userAgent:
          type: string
      title: REGISTER SIP status
    api.RevokeRoleResponse:
      type: object
    api.Role:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deletedAt:
          type: string
          format: int64
          title: unix
        deletedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        description:
          type: string
          title: short description
        id:
          type: string
          format: int64
          title: oid
        members:
          description: users/roles
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: |-
            Caller caller = 4; // TOBE removed !!!
            map<int64, string> users = 4;
        metadata:
          type: object
          title: |-
            Optional. Metadata bound to this role by the third party integrations
            Each attribute of this object represents separate various data
            to be able to store and merge separate keys (documents)
        name:
          type: string
          title: display common name
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        user:
          type: boolean
          title: READONLY. Report whether this Role refers to the internal User(=true) or Group(=false)
      title: Role represents group of users
    api.Role.Member:
      type: object
      properties:
        admin:
          type: boolean
          title: admin of the group ?
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          type: string
          title: 'user.[id|name]'
        id:
          type: string
          format: int64
          title: user.id
        name:
          type: string
          title: user.name
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          type: string
          title: user
    api.RoleId:
      description: RoleId lookup value.
      type: object
      properties:
        id:
          type: string
          format: int64
          title: Unique Object IDentifier
        name:
          type: string
          title: Display Name
        user:
          type: boolean
          title: |-
            Optional. Indicates that this role ID refers
            to the internal user as the system administrative unit
    api.RoleMembersResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/api.Role.Member'
            type: object
    api.RoleMetadataResponse:
      type: object
      properties:
        key:
          type: string
          title: Optional. Partial metadata document key name
        value:
          title: Metadata value
    api.Roles.UpdateRoleBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          title: partial changes
        role:
          type: object
          properties:
            createdAt:
              type: string
              format: int64
              title: unix
            createdBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            deletedAt:
              type: string
              format: int64
              title: unix
            deletedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            description:
              type: string
              title: short description
            members:
              description: users/roles
              type: array
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: |-
                Caller caller = 4; // TOBE removed !!!
                map<int64, string> users = 4;
            metadata:
              type: object
              title: |-
                Optional. Metadata bound to this role by the third party integrations
                Each attribute of this object represents separate various data
                to be able to store and merge separate keys (documents)
            name:
              type: string
              title: display common name
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/api.Permission'
                type: object
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            user:
              type: boolean
              title: READONLY. Report whether this Role refers to the internal User(=true) or Group(=false)
          title: modifications
    api.SearchClassesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectClass'
            type: object
          title: list
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.SearchDeviceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.Device'
            type: object
          title: devices
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.SearchDomainsResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/api.Organization'
            type: object
    api.SearchLDAPResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.LDAPCatalog'
            type: object
        next:
          type: boolean
          title: 'result: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'result: {page} number'
    api.SearchOAuthServiceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.OAuthService'
            type: object
        next:
          type: boolean
          title: 'result: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'result: {page} number'
    api.SearchPermissionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          title: result entries
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.SearchRolesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.Role'
            type: object
          title: roles
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          description: 'select: offset {page}'
          type: integer
          format: int32
          title: pagedResultsControl response value
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.SearchUsersRequest:
      type: object
      properties:
        any:
          description: 'filter: include ''deleted'' ALSO ! (inactive)'
          type: boolean
          title: |-
            ----- View Modes -----------------------------
            NOTE: by default, search NOT 'deleted' objects ONLY
        deleted:
          type: boolean
          title: 'filter: .deleted_at NOTNULL (view: RECYCLE)'
        extension:
          type: string
          title: 'filter: .extension LIKE ''{extension}'''
        fields:
          description: 'select: output (fields,...)'
          type: array
          items:
            type: string
          title: |-
            // navigation filter
            repeated int64 roles = 7;
            ----- Search Options -------------------------
        id:
          description: 'filter: .id = any({id}...)'
          type: array
          items:
            format: int64
            type: string
          title: '----- Base Filters ---------------------------'
        name:
          type: string
          title: 'filter: .name ILIKE ''{name}'''
        notId:
          type: array
          items:
            format: int64
            type: string
          title: 'filter: .id <> all({not_ids}...)'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        presence:
          $ref: '#/components/schemas/api.SearchUsersRequest.Presence'
        q:
          description: 'filter: (.name|.username|.extension|.status) ILIKE ''{q}'''
          type: string
          title: '----- User-specific Filters ------------------'
        size:
          type: integer
          format: int32
          title: 'select: limit {size}'
        sort:
          type: array
          items:
            type: string
          title: 'select: order by (fields,...)'
        status:
          type: string
          title: 'filter: .status ILIKE ''{status}'''
        username:
          type: string
          title: 'filter: .username ILIKE ''{username}'''
    api.SearchUsersRequest.Presence:
      type: object
      properties:
        note:
          type: string
        status:
          type: string
      title: simplified presence filter params
    api.SearchUsersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.User'
            type: object
          title: users
        next:
          type: boolean
          title: 'search: has {next} page ?'
        page:
          type: integer
          format: int32
          title: 'select: offset {page}'
        size:
          type: integer
          format: int32
          title: 'search: limit {size}'
    api.ServerInfoResponse:
      type: object
      properties:
        key:
          type: string
          format: byte
          title: int64 time = 1; // current timestamp (ms)
    api.SetStatusRequest:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          title: 'PATCH: partial attributes'
        publish:
          description: 'BODY: partial modifications'
          $ref: '#/components/schemas/api.UserPresence'
          title: int64 id = 1; // user.id
    api.SystemObjects:
      type: string
      default: contacts
      enum:
        - contacts
        - cc_list
        - cc_bucket
        - calendars
        - devices
        - cc_agent
        - cc_team
        - cc_resource
        - cc_resource_group
        - cc_queue
        - roles
        - users
        - cognitive_profile
    api.TfaUrl:
      type: object
      properties:
        url:
          type: string
        user:
          $ref: '#/components/schemas/api.UserId'
    api.ToggleDefaultAccessResponse:
      type: object
      properties:
        granted:
          type: array
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
        revoked:
          type: array
          items:
            $ref: '#/components/schemas/api.AccessRule'
            type: object
    api.UpdateAccessResponseV1:
      type: object
      properties:
        granted:
          type: string
          format: int64
          title: Affected rules count
        revoked:
          type: string
          format: int64
    api.UpdateClassResponse:
      type: object
      properties:
        class:
          $ref: '#/components/schemas/api.ObjectClass'
          title: updated
    api.UpdateCustomerResponse:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/api.Customer'
          title: detailed
    api.UpdateDeviceResponse:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/api.Device'
    api.UpdateDomainResponse:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/api.Organization'
    api.UpdateRoleResponse:
      type: object
      properties:
        updated:
          $ref: '#/components/schemas/api.Role'
    api.UpdateUserResponse:
      type: object
      properties:
        updated:
          $ref: '#/components/schemas/api.User'
    api.User:
      description: User profile.
      type: object
      properties:
        chatName:
          description: |-
            The "chat_name" field is used to store the name displayed externally on the platform.
            For example, "chat_name" is shown when an agent connects to chats with clients.
          type: string
        contact:
          description: '[optional] contact connected to this user'
          $ref: '#/components/schemas/api.ObjectId'
          title: |-
            repeated Call calls = 13; // order by created_at
            repeated Registration reged = 13; // order by register_last
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        deletedAt:
          type: string
          format: int64
          title: unix
        deletedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        device:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] default device assigned ? WebRTC register ?'
        devices:
          description: '[editable] list of unique `regular` devices, attached to this user'
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'map<int64, string> devices = 13;'
        email:
          type: string
        extension:
          type: string
          title: 'Caller-ID-Number:'
        hotdesks:
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
        id:
          type: string
          format: int64
          title: Object ID
        license:
          type: array
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: 'list of unique licenses, granted to this user'
        name:
          type: string
          title: 'Caller-ID-Name: Display Name'
        password:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
          title: set of operational permission grants
        presence:
          description: |-
            string presence = 7; // unique set of <user> presentity <status:basic> tuples open[ed]
             string status = 8; // short display status (short description)
          $ref: '#/components/schemas/api.UserPresence'
          title: |-
            CallerId caller = 5; // extension
            PresenceStatus presence = 8;
        profile:
          type: object
          additionalProperties:
            type: string
          title: 'list of variables, assigned to this user as an environment unit'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'roles, member of which is this user'
        totpUrl:
          type: string
          title: '[readonly][optional] one time password if setting (2fa) is enabled'
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/api.UserId'
          title: user
        username:
          type: string
          title: alphanumeric username (login)
    api.UserAccessToken:
      description: UserId lookup value.
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: 'unix::ms'
        createdBy:
          $ref: '#/components/schemas/api.ObjectId'
        deletedAt:
          type: string
          format: int64
          title: '[optional] disabled at'
        deletedBy:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] disabled by'
        id:
          type: string
          title: 'tokenKey::token_key'
        token:
          type: string
          title: 'tokenString::access_token'
        updatedAt:
          type: string
          format: int64
          title: 'unix::ms'
        updatedBy:
          $ref: '#/components/schemas/api.ObjectId'
        usage:
          type: string
          title: '[optional] short usage description'
        user:
          $ref: '#/components/schemas/api.ObjectId'
          title: '[optional] output depends on API endpoint'
    api.UserAccessTokenList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.UserAccessToken'
            type: object
        next:
          type: boolean
          title: is there more results ? next page is available ?
        page:
          type: integer
          format: int32
        size:
          type: string
          format: int64
    api.UserId:
      description: UserId lookup value.
      type: object
      properties:
        id:
          type: string
          format: int64
          title: Object ID
        name:
          type: string
          title: Display Name
    api.UserPresence:
      type: object
      properties:
        expires:
          type: integer
          format: int32
          title: '[optional] <note> will be cleaned up after seconds'
        id:
          type: string
          format: int64
          title: '[required] user identity'
        note:
          type: string
          title: '[optional] human readable comment'
        status:
          type: string
          title: '[optional] set of unique ''active'' presentities {dnd,dlg,sip,wss}; assume {offline} if omitted'
        timestamp:
          type: string
          format: int64
          title: '[required] last activity time'
    api.UserSetting:
      type: object
      properties:
        key:
          type: string
    api.Userinfo:
      type: object
      properties:
        dc:
          type: string
          format: int64
          title: current domain component id
        domain:
          type: string
          title: session domain.name
        expiresAt:
          type: string
          format: int64
          title: unix
        extension:
          type: string
        license:
          type: array
          items:
            $ref: '#/components/schemas/api.LicenseUser'
            type: object
          title: 'map[key]details'
        name:
          type: string
          title: current user.id
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/api.Permission'
            type: object
        preferredUsername:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/api.ObjectId'
            type: object
          title: 'map[role]oid'
        scope:
          type: array
          items:
            $ref: '#/components/schemas/api.Objclass'
            type: object
          title: 'map[class]dac'
        updatedAt:
          type: string
          format: int64
          title: user last updated
        userId:
          type: string
          format: int64
          title: current user.id
        username:
          type: string
          title: session end-user login
      title: 'https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims'
    api.Users.LogoutUserBody:
      type: object
    api.Users.UpdateUserBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          title: 'PATCH: partial update'
        user:
          type: object
          properties:
            contact:
              description: '[optional] contact connected to this user'
              $ref: '#/components/schemas/api.ObjectId'
              title: |-
                repeated Call calls = 13; // order by created_at
                repeated Registration reged = 13; // order by register_last
            createdAt:
              type: string
              format: int64
              title: unix
            createdBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            deletedAt:
              type: string
              format: int64
              title: unix
            deletedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            device:
              $ref: '#/components/schemas/api.ObjectId'
              title: '[optional] default device assigned ? WebRTC register ?'
            devices:
              description: '[editable] list of unique `regular` devices, attached to this user'
              type: array
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: 'map<int64, string> devices = 13;'
            email:
              type: string
            extension:
              type: string
              title: 'Caller-ID-Number:'
            hotdesks:
              type: array
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
            license:
              type: array
              items:
                $ref: '#/components/schemas/api.LicenseUser'
                type: object
              title: 'list of unique licenses, granted to this user'
            name:
              type: string
              title: 'Caller-ID-Name: Display Name'
            password:
              type: string
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/api.Permission'
                type: object
              title: set of operational permission grants
            presence:
              description: |-
                string presence = 7; // unique set of <user> presentity <status:basic> tuples open[ed]
                 string status = 8; // short display status (short description)
              $ref: '#/components/schemas/api.UserPresence'
              title: |-
                CallerId caller = 5; // extension
                PresenceStatus presence = 8;
            profile:
              type: object
              additionalProperties:
                type: string
              title: 'list of variables, assigned to this user as an environment unit'
            roles:
              type: array
              items:
                $ref: '#/components/schemas/api.ObjectId'
                type: object
              title: 'roles, member of which is this user'
            totpUrl:
              type: string
              title: '[readonly][optional] one time password if setting (2fa) is enabled'
            updatedAt:
              type: string
              format: int64
              title: unix
            updatedBy:
              $ref: '#/components/schemas/api.UserId'
              title: user
            username:
              type: string
              title: alphanumeric username (login)
          title: 'body: modifications/changes'
    api.Verification:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
          title: invalid
        notify:
          type: array
          items:
            type: string
          title: 'non-fatal warnings, e.g.:'
    engine.AcceptOfDay:
      type: object
      properties:
        day:
          type: integer
          format: int32
        disabled:
          type: boolean
        endTimeOfDay:
          type: integer
          format: int32
        startTimeOfDay:
          type: integer
          format: int32
    engine.ActiveCall:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        answeredAt:
          type: string
          format: int64
        appId:
          type: string
        billSec:
          type: integer
          format: int32
        blindTransfer:
          type: string
        bridgedAt:
          type: string
          format: int64
        bridgedId:
          type: string
        createdAt:
          type: string
          format: int64
        destination:
          type: string
        direction:
          type: string
        display:
          type: string
        duration:
          type: integer
          format: int32
        extension:
          type: string
        from:
          $ref: '#/components/schemas/engine.Endpoint'
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        holdSec:
          type: integer
          format: int32
        id:
          type: string
        joinedAt:
          type: string
          format: int64
        leavingAt:
          type: string
          format: int64
        member:
          $ref: '#/components/schemas/engine.Lookup'
        parentId:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        queueBridgedAt:
          type: string
          format: int64
        queueDurationSec:
          type: integer
          format: int32
        queueWaitSec:
          type: integer
          format: int32
        reportingAt:
          type: string
          format: int64
        reportingSec:
          type: integer
          format: int32
        state:
          type: string
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timestamp:
          type: string
          format: int64
        to:
          $ref: '#/components/schemas/engine.Endpoint'
        type:
          type: string
        user:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
        waitSec:
          type: integer
          format: int32
    engine.ActivityWorkspaceWidgetResponse:
      type: object
      properties:
        available:
          type: integer
          format: int32
        avgHoldSec:
          type: number
          format: float
        avgTalkSec:
          type: number
          format: float
        callAbandoned:
          type: integer
          format: int32
        callDialerQueue:
          type: integer
          format: int32
        callHandled:
          type: integer
          format: int32
        callInbound:
          type: integer
          format: int32
        callInboundQueue:
          type: integer
          format: int32
        callManual:
          type: integer
          format: int32
        callMissed:
          type: integer
          format: int32
        callQueueMissed:
          type: integer
          format: int32
        chatAccepts:
          type: integer
          format: int32
        chatAht:
          type: number
          format: float
        occupancy:
          type: number
          format: float
        online:
          type: integer
          format: int32
        processing:
          type: integer
          format: int32
        queueTalkSec:
          type: integer
          format: int32
        scoreCount:
          type: string
          format: int64
        scoreOptionalAvg:
          type: number
          format: float
        scoreOptionalSum:
          type: number
          format: float
        scoreRequiredAvg:
          type: number
          format: float
        scoreRequiredSum:
          type: number
          format: float
        sumTalkSec:
          type: string
          format: int64
        taskAccepts:
          type: integer
          format: int32
        utilization:
          type: number
          format: float
        voiceMail:
          type: integer
          format: int32
    engine.Agent:
      type: object
      properties:
        allowChannels:
          type: array
          items:
            type: string
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        channel:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentChannel'
            type: object
        chatCount:
          type: integer
          format: int64
        description:
          type: string
        extension:
          type: string
        greetingMedia:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        isSupervisor:
          type: boolean
        lastStatusChange:
          type: string
          format: int64
        name:
          type: string
        progressiveCount:
          type: integer
          format: int32
        region:
          $ref: '#/components/schemas/engine.Lookup'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        status:
          type: string
        statusDuration:
          type: string
          format: int64
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        taskCount:
          type: integer
          format: int64
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentCallStatistics:
      type: object
      properties:
        abandoned:
          type: integer
          format: int32
        avgHoldSec:
          type: number
          format: float
        avgTalkSec:
          type: number
          format: float
        chatAccepts:
          type: integer
          format: int32
        chatAht:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        handles:
          type: integer
          format: int32
        maxHoldSec:
          type: number
          format: float
        maxTalkSec:
          type: number
          format: float
        minHoldSec:
          type: number
          format: float
        minTalkSec:
          type: number
          format: float
        name:
          type: string
        occupancy:
          type: number
          format: float
        sumHoldSec:
          type: number
          format: float
        sumTalkSec:
          type: number
          format: float
        utilization:
          type: number
          format: float
    engine.AgentCallStatisticsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentCallStatistics'
            type: object
        next:
          type: boolean
    engine.AgentChannel:
      type: object
      properties:
        channel:
          type: string
        joinedAt:
          type: string
          format: int64
        state:
          type: string
        timeout:
          type: string
          format: int64
    engine.AgentInQueue:
      type: object
      properties:
        activeMembers:
          type: integer
          format: int32
        agents:
          $ref: '#/components/schemas/engine.AgentInQueue.AgentsInQueue'
        countMembers:
          type: integer
          format: int32
        enabled:
          type: boolean
        maxMemberLimit:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        strategy:
          type: string
        type:
          type: integer
          format: int32
        waitingMembers:
          type: integer
          format: int32
    engine.AgentInQueue.AgentsInQueue:
      type: object
      properties:
        allowPause:
          type: integer
          format: int32
        free:
          type: integer
          format: int64
        offline:
          type: integer
          format: int64
        online:
          type: integer
          format: int64
        pause:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    engine.AgentInQueueStatistics:
      type: object
      properties:
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentInQueueStatistics.AgentInQueueStatisticsItem'
            type: object
    engine.AgentInQueueStatistics.AgentInQueueStatisticsItem:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        memberWaiting:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentInQueueStatisticsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentInQueueStatistics'
            type: object
    engine.AgentInTeam:
      type: object
      properties:
        strategy:
          type: string
        team:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentPauseCause:
      type: object
      properties:
        allowAdmin:
          type: boolean
        allowAgent:
          type: boolean
        allowSupervisor:
          type: boolean
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        id:
          type: integer
          format: int64
        limitMin:
          type: integer
          format: int64
        name:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentPauseCauseService.PatchAgentPauseCauseBody:
      type: object
      properties:
        allowAdmin:
          type: boolean
        allowAgent:
          type: boolean
        allowSupervisor:
          type: boolean
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        limitMin:
          type: integer
          format: int64
        name:
          type: string
    engine.AgentPauseCauseService.UpdateAgentPauseCauseBody:
      type: object
      properties:
        allowAdmin:
          type: boolean
        allowAgent:
          type: boolean
        allowSupervisor:
          type: boolean
        description:
          type: string
        limitMin:
          type: integer
          format: int64
        name:
          type: string
    engine.AgentService.AgentSetStateBody:
      type: object
    engine.AgentService.PatchAgentBody:
      type: object
      properties:
        allowChannels:
          type: array
          items:
            type: string
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        chatCount:
          type: integer
          format: int64
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        greetingMedia:
          $ref: '#/components/schemas/engine.Lookup'
        isSupervisor:
          type: boolean
        progressiveCount:
          type: integer
          format: int32
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentService.UpdateAgentBody:
      type: object
      properties:
        allowChannels:
          type: array
          items:
            type: string
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        chatCount:
          type: integer
          format: int64
        description:
          type: string
        domainId:
          type: string
          format: int64
        greetingMedia:
          $ref: '#/components/schemas/engine.Lookup'
        isSupervisor:
          type: boolean
        progressiveCount:
          type: integer
          format: int32
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        taskCount:
          type: integer
          format: int64
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentService.UpdateAgentStatusBody:
      type: object
      properties:
        channels:
          type: array
          items:
            type: string
        domainId:
          type: string
          format: int64
        onDemand:
          type: boolean
        payload:
          type: string
        status:
          type: string
          title: FIXME enumerate
    engine.AgentSetStateResponse:
      type: object
    engine.AgentSkill:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        capacity:
          type: integer
          format: int32
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentSkillItem:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentSkillService.CreateAgentSkillBody:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentSkillService.CreateAgentSkillsBody:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.CreateAgentSkillBulkItem'
            type: object
    engine.AgentSkillService.PatchAgentSkillBody:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentSkillService.PatchAgentSkillsBody:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        id:
          type: array
          items:
            format: int64
            type: string
        skillId:
          type: array
          items:
            format: int64
            type: string
    engine.AgentSkillService.UpdateAgentSkillBody:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentState:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        duration:
          type: string
          format: int64
        id:
          type: string
          format: int64
        joinedAt:
          type: string
          format: int64
        pauseCause:
          type: string
        payload:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        state:
          type: string
    engine.AgentStatsStatistic:
      type: object
      properties:
        activeCallId:
          type: string
        agentId:
          type: integer
          format: int32
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        callTime:
          type: string
          format: int64
        chatCount:
          type: integer
          format: int32
        extension:
          type: string
        handles:
          type: integer
          format: int32
        maxBridgedAt:
          type: string
          format: int64
        maxOfferingAt:
          type: string
          format: int64
        missed:
          type: integer
          format: int32
        name:
          type: string
        occupancy:
          type: number
          format: float
        offline:
          type: string
          format: int64
        online:
          type: string
          format: int64
        pause:
          type: string
          format: int64
        pauseCause:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        skills:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        status:
          type: string
        statusDuration:
          type: string
          format: int64
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        team:
          $ref: '#/components/schemas/engine.Lookup'
        transferred:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/engine.Lookup'
        utilization:
          type: number
          format: float
    engine.AgentStatusStatisticItem:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        chatCount:
          type: integer
          format: int64
        extension:
          type: string
        name:
          type: string
        offline:
          type: string
          format: int64
        online:
          type: string
          format: int64
        pause:
          type: string
          format: int64
        pauseCause:
          type: string
        progressiveCount:
          type: integer
          format: int64
        region:
          $ref: '#/components/schemas/engine.Lookup'
        scoreCount:
          type: string
          format: int64
        scoreOptionalAvg:
          type: number
          format: float
        scoreRequiredAvg:
          type: number
          format: float
        status:
          type: string
        statusDuration:
          type: string
          format: int64
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AgentTeam:
      type: object
      properties:
        admin:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        callTimeout:
          type: integer
          format: int32
        description:
          type: string
        domainId:
          type: string
          format: int64
        forecastCalculation:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        inviteChatTimeout:
          type: integer
          format: int32
        maxNoAnswer:
          type: integer
          format: int32
        name:
          type: string
        noAnswerDelayTime:
          type: integer
          format: int32
        strategy:
          type: string
        taskAcceptTimeout:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        wrapUpTime:
          type: integer
          format: int32
    engine.AgentTeamService.UpdateAgentTeamBody:
      type: object
      properties:
        admin:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        callTimeout:
          type: integer
          format: int32
        description:
          type: string
        domainId:
          type: string
          format: int64
        forecastCalculation:
          $ref: '#/components/schemas/engine.Lookup'
        inviteChatTimeout:
          type: integer
          format: int32
        maxNoAnswer:
          type: integer
          format: int32
        name:
          type: string
        noAnswerDelayTime:
          type: integer
          format: int32
        strategy:
          type: string
        taskAcceptTimeout:
          type: integer
          format: int32
        wrapUpTime:
          type: integer
          format: int32
    engine.AgentTodayStatisticsResponse:
      type: object
      properties:
        available:
          type: integer
          format: int32
        avgHoldSec:
          type: number
          format: float
        avgTalkSec:
          type: number
          format: float
        callAbandoned:
          type: integer
          format: int32
        callDialerQueue:
          type: integer
          format: int32
        callHandled:
          type: integer
          format: int32
        callInbound:
          type: integer
          format: int32
        callInboundQueue:
          type: integer
          format: int32
        callManual:
          type: integer
          format: int32
        callMissed:
          type: integer
          format: int32
        callQueueMissed:
          type: integer
          format: int32
        chatAccepts:
          type: integer
          format: int32
        chatAht:
          type: number
          format: float
        occupancy:
          type: number
          format: float
        online:
          type: integer
          format: int32
        processing:
          type: integer
          format: int32
        queueTalkSec:
          type: integer
          format: int32
        scoreCount:
          type: string
          format: int64
        scoreOptionalAvg:
          type: number
          format: float
        scoreOptionalSum:
          type: number
          format: float
        scoreRequiredAvg:
          type: number
          format: float
        scoreRequiredSum:
          type: number
          format: float
        sumTalkSec:
          type: string
          format: int64
        taskAccepts:
          type: integer
          format: int32
        utilization:
          type: number
          format: float
        voiceMail:
          type: integer
          format: int32
    engine.AgentUser:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    engine.AggregateHistoryCallRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        agentDescription:
          type: string
        agentId:
          type: array
          items:
            format: int64
            type: string
        aggs:
          type: array
          items:
            $ref: '#/components/schemas/engine.AggregateRequest'
            type: object
        amdResult:
          type: array
          items:
            type: string
        answeredAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        cause:
          type: array
          items:
            type: string
        contactId:
          type: array
          items:
            format: int64
            type: string
        createdAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        dependencyId:
          type: string
        direction:
          type: string
        directions:
          type: array
          items:
            type: string
        domainId:
          type: string
          format: int64
        duration:
          $ref: '#/components/schemas/engine.FilterBetween'
        fts:
          type: string
        gatewayId:
          type: array
          items:
            format: int64
            type: string
        hasFile:
          type: boolean
        hasTranscript:
          type: boolean
        id:
          type: array
          items:
            type: string
        memberId:
          type: array
          items:
            format: int64
            type: string
        missed:
          type: boolean
        number:
          type: string
        page:
          type: integer
          format: int32
        parentId:
          type: string
        q:
          type: string
        queueId:
          type: array
          items:
            format: int64
            type: string
        size:
          type: integer
          format: int32
        skipParent:
          type: boolean
        storedAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        teamId:
          type: array
          items:
            format: int64
            type: string
        transferFrom:
          type: array
          items:
            type: string
        transferTo:
          type: array
          items:
            type: string
        userId:
          type: array
          items:
            format: int64
            type: string
        variables:
          type: object
          additionalProperties:
            type: string
    engine.AggregateRequest:
      type: object
      properties:
        avg:
          type: array
          items:
            type: string
        count:
          type: array
          items:
            type: string
        group:
          type: array
          items:
            $ref: '#/components/schemas/engine.AggregateRequest.Group'
            type: object
        limit:
          type: integer
          format: int32
        max:
          type: array
          items:
            type: string
        min:
          type: array
          items:
            type: string
        name:
          type: string
        sort:
          type: array
          items:
            type: string
        sum:
          type: array
          items:
            type: string
    engine.AggregateRequest.Group:
      type: object
      properties:
        aggregate:
          type: string
        desc:
          type: boolean
        field:
          type: string
        id:
          type: string
        interval:
          type: string
        top:
          type: integer
          format: int32
    engine.AggregateResult:
      type: object
      properties:
        name:
          type: string
    engine.Attempt:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agentCallId:
          type: string
        attempts:
          type: integer
          format: int32
        bridgedAt:
          type: string
          format: int64
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        destination:
          $ref: '#/components/schemas/engine.MemberCommunication'
        display:
          type: string
        id:
          type: string
          format: int64
        joinedAt:
          type: string
          format: int64
        lastStateChange:
          type: string
          format: int64
        leavingAt:
          type: string
          format: int64
        list:
          $ref: '#/components/schemas/engine.Lookup'
          title: black list ?
        member:
          $ref: '#/components/schemas/engine.Lookup'
        memberCallId:
          type: string
        offeringAt:
          type: string
          format: int64
        position:
          type: integer
          format: int32
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reportingAt:
          type: string
          format: int64
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        state:
          type: string
        timeout:
          type: string
          format: int64
        variables:
          type: object
          additionalProperties:
            type: string
    engine.AttemptHistory:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agentCallId:
          type: string
        amdResult:
          type: string
        attempts:
          type: integer
          format: int32
        bridgedAt:
          type: string
          format: int64
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        channel:
          type: string
        destination:
          $ref: '#/components/schemas/engine.MemberCommunication'
        display:
          type: string
        id:
          type: string
          format: int64
        joinedAt:
          type: string
          format: int64
        leavingAt:
          type: string
          format: int64
        list:
          $ref: '#/components/schemas/engine.Lookup'
          title: black list ?
        member:
          $ref: '#/components/schemas/engine.Lookup'
        memberCallId:
          type: string
        offeredAgents:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        offeringAt:
          type: string
          format: int64
        position:
          type: integer
          format: int32
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reportingAt:
          type: string
          format: int64
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        variables:
          type: object
          additionalProperties:
            type: string
    engine.AttemptRenewalResultResponse:
      type: object
    engine.AttemptResultResponse:
      type: object
      properties:
        status:
          type: string
    engine.AuditForm:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        editable:
          type: boolean
          title: bool archive = 11;
        enabled:
          type: boolean
        id:
          type: integer
          format: int32
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AuditFormService.PatchAuditFormBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          title: bool archive = 8;
    engine.AuditFormService.UpdateAuditFormBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
          title: bool archive = 7;
    engine.AuditFormService.UpdateAuditRateBody:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/engine.UpdateQuestionAnswerRequest'
            type: object
        comment:
          type: string
    engine.AuditQuestionType:
      type: string
      default: question_default
      enum:
        - question_default
        - question_score
        - question_option
        - question_yes
    engine.AuditRate:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/engine.QuestionAnswer'
            type: object
        comment:
          type: string
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        criticalCount:
          type: string
          format: int64
        form:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        questions:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
        ratedUser:
          $ref: '#/components/schemas/engine.Lookup'
        scoreOptional:
          type: number
          format: float
        scoreRequired:
          type: number
          format: float
        selectYesCount:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.AvailableSystemSetting:
      type: object
      properties:
        name:
          type: string
    engine.BlindTransferCallResponse:
      type: object
    engine.Bucket:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: int64
        name:
          type: string
    engine.BucketService.UpdateBucketBody:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.Calendar:
      type: object
      properties:
        accepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        endAt:
          type: string
          format: int64
        excepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
        id:
          type: string
          format: int64
        name:
          type: string
        specials:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        startAt:
          type: string
          format: int64
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CalendarService.UpdateCalendarBody:
      type: object
      properties:
        accepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        description:
          type: string
        domainId:
          type: string
          format: int64
        endAt:
          type: string
          format: int64
        excepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
        name:
          type: string
        specials:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        startAt:
          type: string
          format: int64
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CallAnnotation:
      type: object
      properties:
        callId:
          type: string
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        endSec:
          type: integer
          format: int32
        id:
          type: string
          format: int64
        note:
          type: string
        startSec:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CallFile:
      type: object
      properties:
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        startAt:
          type: string
          format: int64
        stopAt:
          type: string
          format: int64
    engine.CallHold:
      type: object
      properties:
        sec:
          type: number
          format: float
        start:
          type: string
          format: int64
        stop:
          type: string
          format: int64
    engine.CallService.BlindTransferCallBody:
      type: object
      properties:
        appId:
          type: string
        destination:
          type: string
        domainId:
          type: string
          format: int64
    engine.CallService.CreateCallAnnotationBody:
      type: object
      properties:
        endSec:
          type: integer
          format: int32
        note:
          type: string
        startSec:
          type: integer
          format: int32
    engine.CallService.DtmfCallBody:
      type: object
      properties:
        appId:
          type: string
        digit:
          type: string
        domainId:
          type: string
          format: int64
    engine.CallService.EavesdropCallBody:
      type: object
      properties:
        appId:
          type: string
        control:
          type: boolean
        from:
          $ref: '#/components/schemas/engine.EavesdropCallRequest.EndpointRequest'
        listenA:
          type: boolean
        listenB:
          type: boolean
        whisperA:
          type: boolean
        whisperB:
          type: boolean
    engine.CallService.HangupCallBody:
      type: object
      properties:
        appId:
          type: string
        cause:
          type: string
        domainId:
          type: string
          format: int64
    engine.CallService.HoldCallBody:
      type: object
      properties:
        appId:
          type: string
        domainId:
          type: string
          format: int64
    engine.CallService.PatchHistoryCallBody:
      type: object
      properties:
        hideMissed:
          type: boolean
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CallService.RedialCallBody:
      type: object
    engine.CallService.SetVariablesCallBody:
      type: object
      properties:
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CallService.UnHoldCallBody:
      type: object
      properties:
        appId:
          type: string
        domainId:
          type: string
          format: int64
    engine.CallService.UpdateCallAnnotationBody:
      type: object
      properties:
        endSec:
          type: integer
          format: int32
        note:
          type: string
        startSec:
          type: integer
          format: int32
    engine.ChatPlan:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int32
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CommunicationChannels:
      type: string
      default: Undefined
      enum:
        - Undefined
        - Phone
        - Email
        - Messaging
    engine.CommunicationType:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
    engine.CommunicationTypeRequest:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        name:
          type: string
    engine.CommunicationTypeService.PatchCommunicationTypeBody:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        name:
          type: string
    engine.CommunicationTypeService.UpdateCommunicationTypeBody:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/engine.CommunicationChannels'
        code:
          type: string
        default:
          type: boolean
        description:
          type: string
        name:
          type: string
    engine.ConfirmPushResponse:
      type: object
    engine.CreateAgentPauseCauseRequest:
      type: object
      properties:
        allowAdmin:
          type: boolean
        allowAgent:
          type: boolean
        allowSupervisor:
          type: boolean
        description:
          type: string
        limitMin:
          type: integer
          format: int64
        name:
          type: string
    engine.CreateAgentRequest:
      type: object
      properties:
        allowChannels:
          type: array
          items:
            type: string
        auditor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        chatCount:
          type: integer
          format: int64
        description:
          type: string
        domainId:
          type: string
          format: int64
        greetingMedia:
          $ref: '#/components/schemas/engine.Lookup'
        isSupervisor:
          type: boolean
        progressiveCount:
          type: integer
          format: int32
        region:
          $ref: '#/components/schemas/engine.Lookup'
        supervisor:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        taskCount:
          type: integer
          format: int64
        team:
          $ref: '#/components/schemas/engine.Lookup'
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateAgentSkillBulkItem:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateAgentSkillsResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            format: int64
            type: string
    engine.CreateAgentTeamRequest:
      type: object
      properties:
        admin:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        callTimeout:
          type: integer
          format: int32
        description:
          type: string
        domainId:
          type: string
          format: int64
        forecastCalculation:
          $ref: '#/components/schemas/engine.Lookup'
        inviteChatTimeout:
          type: integer
          format: int32
        maxNoAnswer:
          type: integer
          format: int32
        name:
          type: string
        noAnswerDelayTime:
          type: integer
          format: int32
        strategy:
          type: string
        taskAcceptTimeout:
          type: integer
          format: int32
        wrapUpTime:
          type: integer
          format: int32
    engine.CreateAttemptResponse:
      type: object
      properties:
        attemptId:
          type: string
          format: int64
    engine.CreateAuditFormRateRequest:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/engine.CreateQuestionAnswerRequest'
            type: object
        callId:
          type: string
        comment:
          type: string
        form:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateAuditFormRequest:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
    engine.CreateBucketRequest:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.CreateCalendarRequest:
      type: object
      properties:
        accepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        description:
          type: string
        domainId:
          type: string
          format: int64
        endAt:
          type: string
          format: int64
        excepts:
          type: array
          items:
            $ref: '#/components/schemas/engine.ExceptDate'
            type: object
        name:
          type: string
        specials:
          type: array
          items:
            $ref: '#/components/schemas/engine.AcceptOfDay'
            type: object
        startAt:
          type: string
          format: int64
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateCallRequest:
      type: object
      properties:
        destination:
          type: string
        domainId:
          type: string
          format: int64
        from:
          $ref: '#/components/schemas/engine.CreateCallRequest.EndpointRequest'
        params:
          $ref: '#/components/schemas/engine.CreateCallRequest.CallSettings'
        to:
          $ref: '#/components/schemas/engine.CreateCallRequest.EndpointRequest'
    engine.CreateCallRequest.CallSettings:
      type: object
      properties:
        audio:
          type: boolean
        cancelDistribute:
          type: boolean
        disableAutoAnswer:
          type: boolean
        disableStun:
          type: boolean
        display:
          type: string
        hideNumber:
          type: boolean
        isOnline:
          type: boolean
        record:
          type: boolean
        screen:
          type: boolean
        timeout:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
        video:
          type: boolean
    engine.CreateCallRequest.EndpointRequest:
      type: object
      properties:
        appId:
          type: string
        extension:
          type: string
        id:
          type: string
          format: int64
        type:
          type: string
    engine.CreateCallResponse:
      type: object
      properties:
        id:
          type: string
    engine.CreateChatPlanRequest:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateEmailProfileRequest:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/engine.EmailAuthType'
        description:
          type: string
        enabled:
          type: boolean
        fetchInterval:
          type: integer
          format: int32
        imapHost:
          type: string
        imapPort:
          type: integer
          format: int32
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtpHost:
          type: string
        smtpPort:
          type: integer
          format: int32
    engine.CreateListRequest:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.CreateMemberBulkItem:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
        expireAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CreateOutboundResourceDisplayRequest:
      type: object
      properties:
        display:
          type: string
        domainId:
          type: string
          format: int64
        resourceId:
          type: string
          format: int64
    engine.CreateOutboundResourceGroupRequest:
      type: object
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
        strategy:
          type: string
        time:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
    engine.CreateOutboundResourceRequest:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        errorIds:
          type: array
          items:
            type: string
        failureDialDelay:
          type: integer
          format: int64
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          type: integer
          format: int32
        maxSuccessivelyErrors:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        patterns:
          type: array
          items:
            type: string
        reserve:
          type: boolean
        rps:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CreatePresetQueryRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        section:
          type: string
    engine.CreateQuestionAnswerRequest:
      type: object
      properties:
        score:
          type: number
          format: float
    engine.CreateQueueRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
        afterSchema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dncList:
          $ref: '#/components/schemas/engine.Lookup'
        doSchema:
          $ref: '#/components/schemas/engine.Lookup'
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        formSchema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        priority:
          type: integer
          format: int32
        processing:
          type: boolean
          title: deprecated
        processingRenewalSec:
          type: integer
          format: int64
          title: deprecated
        processingSec:
          type: integer
          format: int64
          title: deprecated
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        secLocateAgent:
          type: integer
          format: int32
        stickyAgent:
          type: boolean
        strategy:
          type: string
        taskProcessing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CreateQuickReplyRequest:
      type: object
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        text:
          type: string
    engine.CreateRegionRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateRoutingOutboundCallRequest:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.CreateRoutingSchemaRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        name:
          type: string
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
    engine.CreateRoutingVariableRequest:
      type: object
      properties:
        domainId:
          type: string
          format: int64
        key:
          type: string
        value:
          type: string
    engine.CreateSchemaVariableRequest:
      type: object
      properties:
        encrypt:
          type: boolean
        name:
          type: string
    engine.CreateSkillAgentResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
    engine.CreateSkillRequest:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.CreateSystemSettingRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/engine.SystemSettingName'
    engine.CreateTriggerRequest:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.CreateWebHookRequest:
      type: object
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        origin:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.DefaultDeviceConfigResponse:
      type: object
      properties:
        sip:
          $ref: '#/components/schemas/engine.DefaultDeviceConfigResponse.SipDeviceConfig'
        webrtc:
          $ref: '#/components/schemas/engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig'
    engine.DefaultDeviceConfigResponse.SipDeviceConfig:
      type: object
      properties:
        auth:
          type: string
        domain:
          type: string
        extension:
          type: string
        password:
          type: string
        proxy:
          type: string
    engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig:
      type: object
      properties:
        authorizationUser:
          type: string
        displayName:
          type: string
        extension:
          type: string
        ha1:
          type: string
        realm:
          type: string
        server:
          type: string
        uri:
          type: string
    engine.DeleteAllMembersRequest:
      type: object
      properties:
        agentId:
          type: array
          items:
            format: int32
            type: integer
        attempts:
          $ref: '#/components/schemas/engine.FilterBetween'
        bucketId:
          type: array
          items:
            format: int32
            type: integer
        createdAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        destination:
          type: string
        id:
          type: array
          items:
            format: int64
            type: string
        name:
          type: string
        numbers:
          type: array
          items:
            type: string
        offeringAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        q:
          type: string
        queueId:
          type: array
          items:
            format: int64
            type: string
        size:
          type: integer
          format: int32
        sort:
          type: string
        stopCause:
          type: array
          items:
            type: string
        variables:
          type: object
          additionalProperties:
            type: string
        withoutMembers:
          type: boolean
    engine.DeleteSkillAgentResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
    engine.DtmfCallResponse:
      type: object
    engine.EavesdropCallRequest.EndpointRequest:
      type: object
      properties:
        appId:
          type: string
        extension:
          type: string
        id:
          type: string
          format: int64
        type:
          type: string
    engine.EmailAuthType:
      type: string
      default: EmailAuthTypeUndefined
      enum:
        - EmailAuthTypeUndefined
        - Plain
        - OAuth2
    engine.EmailProfile:
      type: object
      properties:
        activityAt:
          type: string
          format: int64
        authType:
          $ref: '#/components/schemas/engine.EmailAuthType'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        fetchError:
          type: string
        fetchInterval:
          type: integer
          format: int32
        id:
          type: string
          format: int64
        imapHost:
          type: string
        imapPort:
          type: integer
          format: int32
        listen:
          type: boolean
        logged:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtpHost:
          type: string
        smtpPort:
          type: integer
          format: int32
        state:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.EmailProfileParams:
      type: object
      properties:
        oauth2:
          $ref: '#/components/schemas/engine.EmailProfileParams.OAuth2'
    engine.EmailProfileParams.OAuth2:
      type: object
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUrl:
          type: string
    engine.EmailProfileService.PatchEmailProfileBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fetchInterval:
          type: integer
          format: int32
        fields:
          type: array
          items:
            type: string
        imapHost:
          type: string
        imapPort:
          type: integer
          format: int32
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtpHost:
          type: string
        smtpPort:
          type: integer
          format: int32
    engine.EmailProfileService.UpdateEmailProfileBody:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/engine.EmailAuthType'
        description:
          type: string
        enabled:
          type: boolean
        fetchInterval:
          type: integer
          format: int32
        imapHost:
          type: string
        imapPort:
          type: integer
          format: int32
        listen:
          type: boolean
        login:
          type: string
        mailbox:
          type: string
        name:
          type: string
        params:
          $ref: '#/components/schemas/engine.EmailProfileParams'
        password:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        smtpHost:
          type: string
        smtpPort:
          type: integer
          format: int32
    engine.EmptyResponse:
      type: object
    engine.Endpoint:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        number:
          type: string
        type:
          type: string
    engine.ExceptDate:
      type: object
      properties:
        date:
          type: string
          format: int64
        disabled:
          type: boolean
        name:
          type: string
        repeat:
          type: boolean
        workStart:
          type: integer
          format: int32
        workStop:
          type: integer
          format: int32
        working:
          type: boolean
    engine.FilterBetween:
      type: object
      properties:
        from:
          type: string
          format: int64
        to:
          type: string
          format: int64
    engine.ForAgentPauseCause:
      type: object
      properties:
        durationMin:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        limitMin:
          type: integer
          format: int64
        name:
          type: string
    engine.ForAgentPauseCauseList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.ForAgentPauseCause'
            type: object
    engine.HangupCallResponse:
      type: object
    engine.HistoryCall:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        agentDescription:
          type: string
        allowEvaluation:
          type: boolean
        amdAiLogs:
          type: array
          items:
            type: string
        amdAiResult:
          type: string
        amdResult:
          type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/engine.CallAnnotation'
            type: object
        answeredAt:
          type: string
          format: int64
        appId:
          type: string
        attemptId:
          type: string
          format: int64
        billSec:
          type: integer
          format: int32
        blindTransfer:
          type: string
        blindTransfers:
          type: array
          items:
            $ref: '#/components/schemas/engine.HistoryCall.BlindTransfer'
            type: object
        bridgedAt:
          type: string
          format: int64
        bridgedId:
          type: string
        cause:
          type: string
        contact:
          $ref: '#/components/schemas/engine.Lookup'
        createdAt:
          type: string
          format: int64
        destination:
          type: string
        direction:
          type: string
        display:
          type: string
        duration:
          type: integer
          format: int32
        extension:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/engine.CallFile'
            type: object
        filesJob:
          type: array
          items:
            $ref: '#/components/schemas/engine.HistoryFileJob'
            type: object
        from:
          $ref: '#/components/schemas/engine.Endpoint'
        fromNumber:
          type: string
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        hangupAt:
          type: string
          format: int64
        hangupBy:
          type: string
        hangupDisposition:
          type: string
        hangupPhrase:
          type: string
        hasChildren:
          type: boolean
        hold:
          type: array
          items:
            $ref: '#/components/schemas/engine.CallHold'
            type: object
        holdSec:
          type: integer
          format: int32
        id:
          type: string
        joinedAt:
          type: string
          format: int64
        leavingAt:
          type: string
          format: int64
        member:
          $ref: '#/components/schemas/engine.Lookup'
        memberId:
          type: string
          format: int64
        parentId:
          type: string
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        queueBridgedAt:
          type: string
          format: int64
        queueDurationSec:
          type: integer
          format: int32
        queueWaitSec:
          type: integer
          format: int32
        rateId:
          type: string
          format: int64
        ratedBy:
          $ref: '#/components/schemas/engine.Lookup'
        ratedUser:
          $ref: '#/components/schemas/engine.Lookup'
        reportingAt:
          type: string
          format: int64
        reportingSec:
          type: integer
          format: int32
        result:
          type: string
        schemas:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        scoreOptional:
          type: number
          format: float
        scoreRequired:
          type: number
          format: float
        sipCode:
          type: integer
          format: int32
        storedAt:
          type: string
          format: int64
        talkSec:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/engine.Lookup'
        to:
          $ref: '#/components/schemas/engine.Endpoint'
        toNumber:
          type: string
        transcripts:
          type: array
          items:
            $ref: '#/components/schemas/engine.TranscriptLookup'
            type: object
        transferFrom:
          type: string
        transferTo:
          type: string
        type:
          type: string
        user:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
        waitSec:
          type: integer
          format: int32
    engine.HistoryCall.BlindTransfer:
      type: object
      properties:
        number:
          type: string
        time:
          type: string
          format: int64
        user:
          $ref: '#/components/schemas/engine.Lookup'
    engine.HistoryFileJob:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/engine.HistoryFileJob.HistoryFileJobAction'
        createdAt:
          type: string
          format: int64
        errorDetail:
          type: string
        fileId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        state:
          $ref: '#/components/schemas/engine.HistoryFileJob.HistoryFileJobState'
    engine.HistoryFileJob.HistoryFileJobAction:
      type: string
      default: undefined
      enum:
        - undefined
        - STT
        - delete
    engine.HistoryFileJob.HistoryFileJobState:
      type: string
      default: idle
      enum:
        - idle
        - active
        - finished
        - error
      title: '- error: TODO'
    engine.HoldCallResponse:
      type: object
      properties:
        state:
          type: string
    engine.List:
      type: object
      properties:
        count:
          type: string
          format: int64
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.ListAgent:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Agent'
            type: object
        next:
          type: boolean
    engine.ListAgentInQueue:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentInQueue'
            type: object
        next:
          type: boolean
    engine.ListAgentInTeam:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentInTeam'
            type: object
        next:
          type: boolean
    engine.ListAgentPauseCause:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentPauseCause'
            type: object
        next:
          type: boolean
    engine.ListAgentSkill:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentSkillItem'
            type: object
        next:
          type: boolean
    engine.ListAgentStateHistory:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentState'
            type: object
        next:
          type: boolean
    engine.ListAgentStatsStatistic:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentStatsStatistic'
            type: object
        next:
          type: boolean
    engine.ListAgentTeam:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentTeam'
            type: object
        next:
          type: boolean
    engine.ListAgentUser:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AgentUser'
            type: object
        next:
          type: boolean
    engine.ListAggregate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AggregateResult'
            type: object
    engine.ListAttempt:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Attempt'
            type: object
        next:
          type: boolean
    engine.ListAuditForm:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AuditForm'
            type: object
        next:
          type: boolean
    engine.ListAuditRate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AuditRate'
            type: object
        next:
          type: boolean
    engine.ListAvailableSystemSetting:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AvailableSystemSetting'
            type: object
        next:
          type: boolean
    engine.ListBucket:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Bucket'
            type: object
        next:
          type: boolean
    engine.ListCalendar:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Calendar'
            type: object
        next:
          type: boolean
    engine.ListCall:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.ActiveCall'
            type: object
        next:
          type: boolean
    engine.ListChatPlan:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.ChatPlan'
            type: object
        next:
          type: boolean
    engine.ListCommunication:
      type: object
      properties:
        description:
          type: string
        expireAt:
          type: string
          format: int64
        id:
          type: string
          format: int64
        listId:
          type: string
          format: int64
        number:
          type: string
    engine.ListCommunicationType:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.CommunicationType'
            type: object
        next:
          type: boolean
    engine.ListEmailProfile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.EmailProfile'
            type: object
        next:
          type: boolean
    engine.ListHistoryAttempt:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.AttemptHistory'
            type: object
        next:
          type: boolean
    engine.ListHistoryCall:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.HistoryCall'
            type: object
        next:
          type: boolean
    engine.ListMember:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberInQueue'
            type: object
        next:
          type: boolean
    engine.ListMemberAttempt:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberAttempt'
            type: object
        next:
          type: boolean
    engine.ListOfList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.List'
            type: object
        next:
          type: boolean
    engine.ListOfListCommunication:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.ListCommunication'
            type: object
        next:
          type: boolean
    engine.ListOutboundResource:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResource'
            type: object
        next:
          type: boolean
    engine.ListOutboundResourceDisplay:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.ResourceDisplay'
            type: object
        next:
          type: boolean
    engine.ListOutboundResourceGroup:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResourceViewGroup'
            type: object
        next:
          type: boolean
    engine.ListOutboundResourceInGroup:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResourceInGroup'
            type: object
        next:
          type: boolean
    engine.ListPresetQuery:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.PresetQuery'
            type: object
        next:
          type: boolean
    engine.ListQueue:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Queue'
            type: object
        next:
          type: boolean
    engine.ListQueueBucket:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QueueBucket'
            type: object
        next:
          type: boolean
    engine.ListQueueHook:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QueueHook'
            type: object
        next:
          type: boolean
    engine.ListQueueResourceGroup:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QueueResourceGroup'
            type: object
        next:
          type: boolean
    engine.ListQueueSkill:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QueueSkill'
            type: object
        next:
          type: boolean
    engine.ListQuickReplies:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QuickReply'
            type: object
        next:
          type: boolean
    engine.ListRegion:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Region'
            type: object
        next:
          type: boolean
    engine.ListReportGeneral:
      type: object
      properties:
        aggs:
          $ref: '#/components/schemas/engine.QueueReportGeneralAgentStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.QueueReportGeneral'
            type: object
        next:
          type: boolean
    engine.ListResourceDisplay:
      type: object
      properties:
        id:
          type: array
          items:
            format: int64
            type: string
    engine.ListRoutingOutboundCall:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.RoutingOutboundCallCompact'
            type: object
        next:
          type: boolean
    engine.ListRoutingSchema:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.RoutingSchema'
            type: object
        next:
          type: boolean
    engine.ListRoutingSchemaTags:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.RoutingSchemaTag'
            type: object
        next:
          type: boolean
    engine.ListRoutingVariable:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.RoutingVariable'
            type: object
    engine.ListSchemaVariable:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaVariable'
            type: object
        next:
          type: boolean
    engine.ListService.CreateListCommunicationBody:
      type: object
      properties:
        description:
          type: string
        expireAt:
          type: string
          format: int64
        number:
          type: string
    engine.ListService.UpdateListBody:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.ListService.UpdateListCommunicationBody:
      type: object
      properties:
        description:
          type: string
        expireAt:
          type: string
          format: int64
        number:
          type: string
    engine.ListSkill:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Skill'
            type: object
        next:
          type: boolean
    engine.ListSkillAgent:
      type: object
      properties:
        aggs:
          $ref: '#/components/schemas/engine.ListSkillAgent.ListSkillAgg'
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
        next:
          type: boolean
    engine.ListSkillAgent.ListSkillAgg:
      type: object
      properties:
        enabled:
          type: boolean
    engine.ListSystemSetting:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SystemSetting'
            type: object
        next:
          type: boolean
    engine.ListTags:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
        next:
          type: boolean
    engine.ListTeamHook:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.TeamHook'
            type: object
        next:
          type: boolean
    engine.ListTeamTrigger:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.TeamTrigger'
            type: object
        next:
          type: boolean
    engine.ListTimezoneResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Timezone'
            type: object
        next:
          type: boolean
    engine.ListTrigger:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.Trigger'
            type: object
        next:
          type: boolean
    engine.ListTriggerJob:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.TriggerJob'
            type: object
        next:
          type: boolean
    engine.ListUserStatus:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.UserStatus'
            type: object
        next:
          type: boolean
    engine.ListWebHook:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.WebHook'
            type: object
        next:
          type: boolean
    engine.LoginEmailProfileResponse:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/engine.EmailAuthType'
        cookie:
          type: object
          additionalProperties:
            type: string
        redirectUrl:
          type: string
    engine.LogoutEmailProfileResponse:
      type: object
    engine.Lookup:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    engine.MemberAttempt:
      type: object
      properties:
        active:
          type: boolean
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        answeredAt:
          type: string
          format: int64
        attempts:
          type: integer
          format: int32
        bridgedAt:
          type: string
          format: int64
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        createdAt:
          type: string
          format: int64
        destination:
          type: string
        hangupAt:
          type: string
          format: int64
        id:
          type: string
          format: int64
        legAId:
          type: string
        legBId:
          type: string
        member:
          $ref: '#/components/schemas/engine.Lookup'
        node:
          type: string
        originateAt:
          type: string
          format: int64
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        result:
          type: string
        weight:
          type: integer
          format: int32
    engine.MemberBulkResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            format: int64
            type: string
    engine.MemberCommunication:
      type: object
      properties:
        attempts:
          type: integer
          format: int32
        description:
          type: string
        destination:
          type: string
        display:
          type: string
        dtmf:
          type: string
        id:
          type: string
          format: int64
        lastActivityAt:
          type: string
          format: int64
        lastCause:
          type: string
        priority:
          type: integer
          format: int32
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        state:
          type: integer
          format: int32
        stopAt:
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/engine.Lookup'
    engine.MemberCommunicationCreateRequest:
      type: object
      properties:
        description:
          type: string
        destination:
          type: string
        display:
          type: string
        dtmf:
          type: string
        priority:
          type: integer
          format: int32
        resource:
          $ref: '#/components/schemas/engine.Lookup'
        stopAt:
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/engine.Lookup'
    engine.MemberInQueue:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          type: integer
          format: int32
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunication'
            type: object
        createdAt:
          type: string
          format: int64
        expireAt:
          type: string
          format: int64
        id:
          type: string
          format: int64
        lastActivityAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
          title: deprecated
        name:
          type: string
        priority:
          type: integer
          format: int32
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        reserved:
          type: boolean
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stopCause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MemberService.AttemptCallbackBody:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        description:
          type: string
        display:
          type: boolean
        excludeCurrentCommunication:
          type: boolean
        expireAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
        onlyCurrentCommunication:
          type: boolean
        status:
          type: string
        variables:
          type: object
          additionalProperties:
            type: string
        waitBetweenRetries:
          type: integer
          format: int32
    engine.MemberService.AttemptResultBody:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        description:
          type: string
        display:
          type: boolean
        excludeCurrentCommunication:
          type: boolean
        expireAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
        nextMemberId:
          type: string
          format: int64
        onlyCurrentCommunication:
          type: boolean
        status:
          type: string
        transferQueueId:
          type: string
          format: int64
        variables:
          type: object
          additionalProperties:
            type: string
        waitBetweenRetries:
          type: integer
          format: int32
    engine.MemberService.AttemptsRenewalResultBody:
      type: object
      properties:
        renewal:
          type: integer
          format: int64
    engine.MemberService.CreateAttemptBody:
      type: object
      properties:
        agentId:
          type: string
          format: int64
        domainId:
          type: string
          format: int64
    engine.MemberService.CreateMemberBody:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
        domainId:
          type: string
          format: int64
        expireAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MemberService.CreateMemberBulkBody:
      type: object
      properties:
        fileName:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.CreateMemberBulkItem'
            type: object
    engine.MemberService.DeleteMembersBody:
      type: object
      properties:
        agentId:
          type: array
          items:
            format: int32
            type: integer
        attempts:
          $ref: '#/components/schemas/engine.FilterBetween'
        bucketId:
          type: array
          items:
            format: int32
            type: integer
        createdAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        destination:
          type: string
        id:
          type: array
          items:
            format: int64
            type: string
        ids:
          type: array
          items:
            format: int64
            type: string
          title: deprecated
        name:
          type: string
        numbers:
          type: array
          items:
            type: string
        offeringAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        q:
          type: string
        size:
          type: integer
          format: int32
        sort:
          type: string
        stopCause:
          type: array
          items:
            type: string
        variables:
          type: object
          additionalProperties:
            type: string
        withoutMembers:
          type: boolean
    engine.MemberService.PatchMemberBody:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          type: integer
          format: int32
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
        domainId:
          type: string
          format: int64
        expireAt:
          type: string
          format: int64
        fields:
          type: array
          items:
            type: string
        minOfferingAt:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stopCause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MemberService.PatchMemberOneBody:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        attempts:
          type: integer
          format: int32
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
        domainId:
          type: string
          format: int64
        expireAt:
          type: string
          format: int64
        fields:
          type: array
          items:
            type: string
        minOfferingAt:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stopCause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MemberService.ResetMembersBody:
      type: object
      properties:
        agentId:
          type: array
          items:
            format: int32
            type: integer
        bucketId:
          type: array
          items:
            format: int64
            type: string
        createdAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        id:
          type: array
          items:
            format: int64
            type: string
        ids:
          type: array
          items:
            format: int64
            type: string
        numbers:
          type: array
          items:
            type: string
        priority:
          $ref: '#/components/schemas/engine.FilterBetween'
        stopCause:
          type: array
          items:
            type: string
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MemberService.UpdateMemberBody:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        communications:
          type: array
          items:
            $ref: '#/components/schemas/engine.MemberCommunicationCreateRequest'
            type: object
        domainId:
          type: string
          format: int64
        expireAt:
          type: string
          format: int64
        minOfferingAt:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        stopCause:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.MovePositionRoutingOutboundCallResponse:
      type: object
      properties:
        success:
          type: boolean
    engine.OutboundResource:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        errorIds:
          type: array
          items:
            type: string
        failureDialDelay:
          type: integer
          format: int64
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        lastErrorAt:
          type: string
          format: int64
        lastErrorId:
          type: string
        limit:
          type: integer
          format: int32
        maxSuccessivelyErrors:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        patterns:
          type: array
          items:
            type: string
        reserve:
          type: boolean
        rps:
          type: integer
          format: int32
        successivelyErrors:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.OutboundResourceGroup:
      type: object
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        strategy:
          type: string
        time:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody:
      type: object
      properties:
        priority:
          type: integer
          format: int64
        reserveResource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
    engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody:
      type: object
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
        strategy:
          type: string
        time:
          type: array
          items:
            $ref: '#/components/schemas/engine.OutboundResourceTimeRange'
            type: object
    engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody:
      type: object
      properties:
        priority:
          type: integer
          format: int64
        reserveResource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
    engine.OutboundResourceInGroup:
      type: object
      properties:
        groupId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        priority:
          type: integer
          format: int64
        reserveResource:
          $ref: '#/components/schemas/engine.Lookup'
        resource:
          $ref: '#/components/schemas/engine.Lookup'
    engine.OutboundResourceParameters:
      type: object
      properties:
        cidType:
          type: string
        ignoreEarlyMedia:
          type: string
    engine.OutboundResourceService.CreateOutboundResourceDisplayBody:
      type: object
      properties:
        display:
          type: string
        domainId:
          type: string
          format: int64
    engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.CreateOutboundResourceDisplayRequest'
            type: object
    engine.OutboundResourceService.PatchOutboundResourceBody:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        errorIds:
          type: array
          items:
            type: string
        failureDialDelay:
          type: integer
          format: int64
        fields:
          type: array
          items:
            type: string
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          type: integer
          format: int32
        maxSuccessivelyErrors:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        patterns:
          type: array
          items:
            type: string
        reserve:
          type: boolean
        rps:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.OutboundResourceService.UpdateOutboundResourceBody:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/engine.OutboundResourceParameters'
        description:
          type: string
        enabled:
          type: boolean
        errorIds:
          type: array
          items:
            type: string
        failureDialDelay:
          type: integer
          format: int64
        gateway:
          $ref: '#/components/schemas/engine.Lookup'
        limit:
          type: integer
          format: int32
        maxSuccessivelyErrors:
          type: integer
          format: int32
        name:
          type: string
        number:
          type: string
        patterns:
          type: array
          items:
            type: string
        reserve:
          type: boolean
        rps:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.OutboundResourceService.UpdateOutboundResourceDisplayBody:
      type: object
      properties:
        display:
          type: string
        domainId:
          type: string
          format: int64
    engine.OutboundResourceTimeRange:
      type: object
      properties:
        endTimeOfDay:
          type: integer
          format: int32
        startTimeOfDay:
          type: integer
          format: int32
    engine.OutboundResourceViewGroup:
      type: object
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        id:
          type: string
          format: int64
        name:
          type: string
        strategy:
          type: string
    engine.PatchSkillAgentResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SkillAgentItem'
            type: object
    engine.PresetQuery:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        description:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        section:
          type: string
        updatedAt:
          type: string
          format: int64
    engine.PresetQueryService.PatchPresetQueryBody:
      type: object
      properties:
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        section:
          type: string
    engine.PresetQueryService.UpdatePresetQueryBody:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        section:
          type: string
    engine.Question:
      type: object
      properties:
        criticalViolation:
          type: boolean
        description:
          type: string
        max:
          type: integer
          format: int32
        min:
          type: integer
          format: int32
        options:
          type: array
          items:
            $ref: '#/components/schemas/engine.Question.Option'
            type: object
        question:
          type: string
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/engine.AuditQuestionType'
    engine.Question.Option:
      type: object
      properties:
        name:
          type: string
        score:
          type: number
          format: float
    engine.QuestionAnswer:
      type: object
      properties:
        comment:
          type: string
        score:
          type: number
          format: float
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.Queue:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
        active:
          type: integer
          format: int32
        afterSchema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        count:
          type: integer
          format: int32
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dncList:
          $ref: '#/components/schemas/engine.Lookup'
        doSchema:
          $ref: '#/components/schemas/engine.Lookup'
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        formSchema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        processing:
          type: boolean
          title: deprecated
        processingRenewalSec:
          type: integer
          format: int64
          title: deprecated
        processingSec:
          type: integer
          format: int64
          title: deprecated
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        secLocateAgent:
          type: integer
          format: int32
        stickyAgent:
          type: boolean
        strategy:
          type: string
        taskProcessing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
        variables:
          type: object
          additionalProperties:
            type: string
        waiting:
          type: integer
          format: int32
    engine.QueueBucket:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        id:
          type: string
          format: int64
        priority:
          type: integer
          format: int32
        ratio:
          type: integer
          format: int32
    engine.QueueBucketService.CreateQueueBucketBody:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        priority:
          type: integer
          format: int32
        ratio:
          type: integer
          format: int32
    engine.QueueBucketService.PatchQueueBucketBody:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        priority:
          type: integer
          format: int32
        ratio:
          type: integer
          format: int32
    engine.QueueBucketService.UpdateQueueBucketBody:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/engine.Lookup'
        disabled:
          type: boolean
        priority:
          type: integer
          format: int32
        ratio:
          type: integer
          format: int32
    engine.QueueHook:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          type: string
        id:
          type: integer
          format: int64
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueHookService.CreateQueueHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          type: string
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueHookService.PatchQueueHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          type: string
        fields:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueHookService.UpdateQueueHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          type: string
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueReportGeneral:
      type: object
      properties:
        abandoned:
          type: integer
          format: int64
        agentStatus:
          $ref: '#/components/schemas/engine.QueueReportGeneralAgentStatus'
        attempts:
          type: integer
          format: int64
        avgAhtSec:
          type: number
          format: float
        avgAsaSec:
          type: number
          format: float
        avgAwtSec:
          type: number
          format: float
        avgWrapSec:
          type: number
          format: float
        bridged:
          type: number
          format: float
        count:
          type: string
          format: uint64
        missed:
          type: integer
          format: int64
        processed:
          type: integer
          format: int64
        queue:
          $ref: '#/components/schemas/engine.Lookup'
        sl20:
          type: number
          format: float
        sl30:
          type: number
          format: float
        sumBillSec:
          type: number
          format: float
        team:
          $ref: '#/components/schemas/engine.Lookup'
        transferred:
          type: integer
          format: int64
        waiting:
          type: integer
          format: int64
    engine.QueueReportGeneralAgentStatus:
      type: object
      properties:
        free:
          type: integer
          format: int64
        offline:
          type: integer
          format: int64
        online:
          type: integer
          format: int64
        pause:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    engine.QueueResourceGroup:
      type: object
      properties:
        communication:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        resourceGroup:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueResourcesService.CreateQueueResourceGroupBody:
      type: object
      properties:
        domainId:
          type: string
          format: int64
        resourceGroup:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueResourcesService.UpdateQueueResourceGroupBody:
      type: object
      properties:
        domainId:
          type: string
          format: int64
        resourceGroup:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueService.PatchQueueBody:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
        afterSchema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dncList:
          $ref: '#/components/schemas/engine.Lookup'
        doSchema:
          $ref: '#/components/schemas/engine.Lookup'
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        formSchema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        priority:
          type: integer
          format: int32
        processing:
          type: boolean
          title: deprecated
        processingRenewalSec:
          type: integer
          format: int64
          title: deprecated
        processingSec:
          type: integer
          format: int64
          title: deprecated
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        secLocateAgent:
          type: integer
          format: int32
        stickyAgent:
          type: boolean
        strategy:
          type: string
        taskProcessing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.QueueService.UpdateQueueBody:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.Tag'
            type: object
        afterSchema:
          $ref: '#/components/schemas/engine.Lookup'
        calendar:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        dncList:
          $ref: '#/components/schemas/engine.Lookup'
        doSchema:
          $ref: '#/components/schemas/engine.Lookup'
        domainId:
          type: string
          format: int64
        enabled:
          type: boolean
        formSchema:
          $ref: '#/components/schemas/engine.Lookup'
          title: deprecated
        grantee:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        priority:
          type: integer
          format: int32
        processing:
          type: boolean
          title: deprecated
        processingRenewalSec:
          type: integer
          format: int64
          title: deprecated
        processingSec:
          type: integer
          format: int64
          title: deprecated
        ringtone:
          $ref: '#/components/schemas/engine.Lookup'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        secLocateAgent:
          type: integer
          format: int32
        stickyAgent:
          type: boolean
        strategy:
          type: string
        taskProcessing:
          $ref: '#/components/schemas/engine.TaskProcessing'
        team:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        variables:
          type: object
          additionalProperties:
            type: string
    engine.QueueSkill:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        lvl:
          type: integer
          format: int32
        maxCapacity:
          type: integer
          format: int32
        minCapacity:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueSkillService.CreateQueueSkillBody:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        enabled:
          type: boolean
        lvl:
          type: integer
          format: int32
        maxCapacity:
          type: integer
          format: int32
        minCapacity:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueSkillService.PatchQueueSkillBody:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        lvl:
          type: integer
          format: int32
        maxCapacity:
          type: integer
          format: int32
        minCapacity:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QueueSkillService.UpdateQueueSkillBody:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        enabled:
          type: boolean
        lvl:
          type: integer
          format: int32
        maxCapacity:
          type: integer
          format: int32
        minCapacity:
          type: integer
          format: int32
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.QuickRepliesService.PatchQuickReplyBody:
      type: object
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        text:
          type: string
    engine.QuickRepliesService.UpdateQuickReplyBody:
      type: object
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        name:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        text:
          type: string
    engine.QuickReply:
      type: object
      properties:
        article:
          $ref: '#/components/schemas/engine.Lookup'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: integer
          format: int64
        name:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        teams:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        text:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.Region:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: int64
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RegionService.PatchRegionBody:
      type: object
      properties:
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RegionService.UpdateRegionBody:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
    engine.ResetActiveAttemptsRequest:
      type: object
      properties:
        attemptType:
          type: array
          items:
            type: string
        idleForMinutes:
          type: string
          format: int64
        result:
          type: string
    engine.ResetActiveAttemptsResponse:
      type: object
    engine.ResetMembersResponse:
      type: object
      properties:
        count:
          type: string
          format: int64
    engine.ResourceDisplay:
      type: object
      properties:
        display:
          type: string
        id:
          type: string
          format: int64
    engine.Response:
      type: object
      properties:
        status:
          type: string
    engine.RoutingChatPlanService.PatchChatPlanBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingChatPlanService.UpdateChatPlanBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingOutboundCall:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingOutboundCallCompact:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        pattern:
          type: string
        position:
          type: integer
          format: int32
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody:
      type: object
      properties:
        domainId:
          type: string
          format: int64
    engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        name:
          type: string
        pattern:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingSchema:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        id:
          type: string
          format: int64
        name:
          type: string
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.RoutingSchemaService.PatchRoutingSchemaBody:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        note:
          type: string
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
    engine.RoutingSchemaService.UpdateRoutingSchemaBody:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaTag'
            type: object
        debug:
          type: boolean
        description:
          type: string
        editor:
          type: boolean
        name:
          type: string
        note:
          type: string
        type:
          $ref: '#/components/schemas/engine.RoutingSchemaType'
    engine.RoutingSchemaTag:
      type: object
      properties:
        count:
          type: integer
          format: int64
        name:
          type: string
    engine.RoutingSchemaType:
      type: string
      default: default
      enum:
        - default
        - voice
        - chat
        - processing
        - service
    engine.RoutingVariable:
      type: object
      properties:
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        key:
          type: string
        value:
          type: string
    engine.RoutingVariableService.UpdateRoutingVariableBody:
      type: object
      properties:
        domainId:
          type: string
          format: int64
        key:
          type: string
        value:
          type: string
    engine.RunTeamTriggerResponse:
      type: object
      properties:
        jobId:
          type: string
    engine.SchemaTag:
      type: object
      properties:
        name:
          type: string
    engine.SchemaVariable:
      type: object
      properties:
        encrypt:
          type: boolean
        id:
          type: integer
          format: int32
        name:
          type: string
    engine.SchemaVariablesService.PatchSchemaVariableBody:
      type: object
      properties:
        encrypt:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
    engine.SchemaVariablesService.UpdateSchemaVariableBody:
      type: object
      properties:
        encrypt:
          type: boolean
        name:
          type: string
    engine.SchemaVersion:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        note:
          type: string
        schemaId:
          type: string
          format: int64
        version:
          type: string
          format: uint64
    engine.SearchHistoryCallRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        agentDescription:
          type: string
        agentId:
          type: array
          items:
            format: int64
            type: string
        amdAiResult:
          type: array
          items:
            type: string
        amdResult:
          type: array
          items:
            type: string
        answeredAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        cause:
          type: array
          items:
            type: string
        contactId:
          type: array
          items:
            format: int64
            type: string
        createdAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        dependencyId:
          type: string
        direction:
          type: string
        directions:
          type: array
          items:
            type: string
        domainId:
          type: string
          format: int64
        duration:
          $ref: '#/components/schemas/engine.FilterBetween'
        fields:
          type: array
          items:
            type: string
        fts:
          type: string
        gatewayId:
          type: array
          items:
            format: int64
            type: string
        granteeId:
          type: array
          items:
            format: int64
            type: string
        hasFile:
          type: boolean
        hasTranscript:
          type: boolean
        hasTransfer:
          type: boolean
        id:
          type: array
          items:
            type: string
        memberId:
          type: array
          items:
            format: int64
            type: string
        missed:
          type: boolean
        number:
          type: string
        ownerId:
          type: array
          items:
            format: int64
            type: string
        page:
          type: integer
          format: int32
        parentId:
          type: string
        q:
          type: string
        queueId:
          type: array
          items:
            format: int64
            type: string
        rated:
          type: boolean
        ratedBy:
          type: array
          items:
            format: int64
            type: string
        ratedUser:
          type: array
          items:
            format: int64
            type: string
        schemaId:
          type: array
          items:
            format: int32
            type: integer
        scoreOptional:
          $ref: '#/components/schemas/engine.FilterBetween'
        scoreRequired:
          $ref: '#/components/schemas/engine.FilterBetween'
        size:
          type: integer
          format: int32
        skipParent:
          type: boolean
        sort:
          type: string
        storedAt:
          $ref: '#/components/schemas/engine.FilterBetween'
        talk:
          $ref: '#/components/schemas/engine.FilterBetween'
        teamId:
          type: array
          items:
            format: int64
            type: string
        timeline:
          type: boolean
        transferFrom:
          type: array
          items:
            type: string
        transferTo:
          type: array
          items:
            type: string
        userId:
          type: array
          items:
            format: int64
            type: string
        variablesString:
          type: object
          additionalProperties:
            type: string
    engine.SearchSchemaVersionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/engine.SchemaVersion'
            type: object
        next:
          type: boolean
    engine.SendPushResponse:
      type: object
      properties:
        send:
          type: integer
          format: int32
    engine.SetVariablesCallResponse:
      type: object
    engine.Skill:
      type: object
      properties:
        activeAgents:
          type: integer
          format: int32
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        totalAgents:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.SkillAgentItem:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/engine.Lookup'
        capacity:
          type: integer
          format: int32
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        skill:
          $ref: '#/components/schemas/engine.Lookup'
        team:
          $ref: '#/components/schemas/engine.Lookup'
    engine.SkillService.CreateSkillAgentBody:
      type: object
      properties:
        agent:
          type: array
          items:
            $ref: '#/components/schemas/engine.Lookup'
            type: object
        capacity:
          type: integer
          format: int32
        enabled:
          type: boolean
    engine.SkillService.DeleteSkillAgentBody:
      type: object
      properties:
        agentId:
          type: array
          items:
            format: int64
            type: string
        id:
          type: array
          items:
            format: int64
            type: string
    engine.SkillService.PatchSkillAgentBody:
      type: object
      properties:
        agentId:
          type: array
          items:
            format: int64
            type: string
        capacity:
          type: integer
          format: int32
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        id:
          type: array
          items:
            format: int64
            type: string
        skill:
          $ref: '#/components/schemas/engine.Lookup'
    engine.SkillService.UpdateSkillBody:
      type: object
      properties:
        description:
          type: string
        domainId:
          type: string
          format: int64
        name:
          type: string
    engine.SystemSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          $ref: '#/components/schemas/engine.SystemSettingName'
    engine.SystemSettingName:
      type: string
      default: empty_system_settings_name
      enum:
        - empty_system_settings_name
        - enable_omnichannel
        - member_chunk_size
        - amd_cancel_not_human
        - scheme_version_limit
        - enable_2fa
        - export_settings
        - search_number_length
        - chat_ai_connection
        - password_reg_exp
        - password_validation_text
        - autolink_call_to_contact
        - period_to_playback_records
        - is_fulltext_search_enabled
        - wbt_hide_contact
        - show_full_contact
        - call_end_sound_notification
        - call_end_push_notification
        - chat_end_sound_notification
        - chat_end_push_notification
        - task_end_sound_notification
        - task_end_push_notification
        - push_notification_timeout
        - labels_to_limit_contacts
    engine.SystemSettingService.PatchSystemSettingBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
    engine.SystemSettingService.UpdateSystemSettingBody:
      type: object
    engine.Tag:
      type: object
      properties:
        name:
          type: string
    engine.TaskProcessing:
      type: object
      properties:
        enabled:
          type: boolean
        formSchema:
          $ref: '#/components/schemas/engine.Lookup'
        renewalSec:
          type: integer
          format: int64
        sec:
          type: integer
          format: int64
    engine.TeamHook:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        id:
          type: integer
          format: int64
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamHookEvent:
      type: string
      default: teamHookEventUndefined
      enum:
        - teamHookEventUndefined
        - agent_status
    engine.TeamHookService.CreateTeamHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamHookService.PatchTeamHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        fields:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamHookService.UpdateTeamHookBody:
      type: object
      properties:
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TeamHookEvent'
        properties:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamTrigger:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamTriggerService.CreateTeamTriggerBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamTriggerService.PatchTeamTriggerBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TeamTriggerService.RunTeamTriggerBody:
      type: object
      properties:
        variables:
          type: object
          additionalProperties:
            type: string
    engine.TeamTriggerService.UpdateTeamTriggerBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TestEmailProfileResponse:
      type: object
      properties:
        error:
          type: string
    engine.Timezone:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        offset:
          type: string
    engine.TranscriptLookup:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/engine.Lookup'
        fileId:
          type: string
          format: int64
          title: deprecated
        id:
          type: string
          format: int64
        locale:
          type: string
    engine.Trigger:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.TriggerEventType:
      type: string
      default: empty_trigger_event
      enum:
        - empty_trigger_event
        - create
        - update
        - remove
        - resolution_time
    engine.TriggerJob:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        error:
          type: string
        id:
          type: string
          format: int64
        startedAt:
          type: string
          format: int64
        state:
          $ref: '#/components/schemas/engine.TriggerJobState'
        stoppedAt:
          type: string
          format: int64
        trigger:
          $ref: '#/components/schemas/engine.Lookup'
    engine.TriggerJobState:
      type: string
      default: idle
      enum:
        - idle
        - active
        - done
        - error
    engine.TriggerObjectType:
      type: string
      default: empty_trigger_object
      enum:
        - empty_trigger_object
        - cases
        - case_files
        - case_comments
        - case_links
    engine.TriggerService.CreateTriggerJobBody:
      type: object
      properties:
        variables:
          type: object
          additionalProperties:
            type: string
    engine.TriggerService.PatchTriggerBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.TriggerService.UpdateTriggerBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        event:
          $ref: '#/components/schemas/engine.TriggerEventType'
        expression:
          type: string
        name:
          type: string
        object:
          $ref: '#/components/schemas/engine.TriggerObjectType'
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        timeout:
          type: integer
          format: int32
        timezone:
          $ref: '#/components/schemas/engine.Lookup'
        type:
          $ref: '#/components/schemas/engine.TriggerType'
        variables:
          type: object
          additionalProperties:
            type: string
    engine.TriggerType:
      type: string
      default: default_trigger_type
      enum:
        - default_trigger_type
        - cron
        - event
    engine.UpdateQuestionAnswerRequest:
      type: object
      properties:
        comment:
          type: string
        score:
          type: number
          format: float
    engine.UserStatus:
      type: object
      properties:
        extension:
          type: string
        id:
          type: string
          format: int64
        name:
          type: string
        presence:
          $ref: '#/components/schemas/engine.UserStatus.UserPresence'
        status:
          type: string
    engine.UserStatus.UserPresence:
      type: object
      properties:
        status:
          type: string
    engine.WebHook:
      type: object
      properties:
        authorization:
          type: string
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int32
        key:
          type: string
        name:
          type: string
        origin:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    engine.WebHookService.PatchWebHookBody:
      type: object
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        name:
          type: string
        origin:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    engine.WebHookService.UpdateWebHookBody:
      type: object
      properties:
        authorization:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        origin:
          type: array
          items:
            type: string
        schema:
          $ref: '#/components/schemas/engine.Lookup'
    ftsSearchData:
      type: object
      properties:
        id:
          type: string
        objectName:
          type: string
        text:
          type: string
    ftsSearchResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ftsSearchData'
            type: object
        next:
          type: boolean
    general.ExtendedLookup:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        type:
          type: string
    general.Lookup:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    google.protobuf.Any:
      type: object
      properties:
        '@type':
          type: string
    google.protobuf.NullValue:
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

        The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      type: string
      default: NULL_VALUE
      enum:
        - NULL_VALUE
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
            type: object
        message:
          type: string
    grpc.gateway.runtime.Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
        error:
          type: string
        message:
          type: string
    grpc.gateway.runtime.StreamError:
      type: object
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
        grpcCode:
          type: integer
          format: int32
        httpCode:
          type: integer
          format: int32
        httpStatus:
          type: string
        message:
          type: string
    loggerAction:
      type: string
      default: default_no_action
      enum:
        - default_no_action
        - create
        - update
        - read
        - delete
    loggerAvailableSystemObjects:
      type: string
      default: cc_queue
      enum:
        - cc_queue
        - schema
        - users
        - devices
        - calendars
        - cc_list
        - cc_team
        - cc_agent
        - cc_resource
        - cc_resource_group
        - chat_bots
        - cases
        - contacts
        - cc_list_number
        - case_comments
        - record_file
    loggerConfig:
      type: object
      properties:
        daysToStore:
          type: integer
          format: int32
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int32
        logsCount:
          type: string
          format: int64
        logsSize:
          type: string
        object:
          $ref: '#/components/schemas/loggerLookup'
        period:
          type: integer
          format: int32
        storage:
          $ref: '#/components/schemas/loggerLookup'
    loggerConfigStatus:
      type: object
      properties:
        isEnabled:
          type: boolean
    loggerConfigs:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/loggerConfig'
        next:
          type: boolean
        page:
          type: integer
          format: int32
    loggerCreateConfigRequest:
      type: object
      properties:
        daysToStore:
          type: integer
          format: int32
        description:
          type: string
        enabled:
          type: boolean
        object:
          $ref: '#/components/schemas/loggerLookup'
        period:
          type: integer
          format: int32
        storage:
          $ref: '#/components/schemas/loggerLookup'
    loggerEmpty:
      type: object
    loggerLog:
      type: object
      properties:
        action:
          type: string
        configId:
          type: integer
          format: int32
        date:
          type: string
          format: int64
        id:
          type: integer
          format: int32
        newState:
          type: string
        object:
          $ref: '#/components/schemas/loggerLookup'
        record:
          $ref: '#/components/schemas/loggerRecord'
        user:
          $ref: '#/components/schemas/loggerLookup'
        userIp:
          type: string
    loggerLogs:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/loggerLog'
        next:
          type: boolean
        page:
          type: integer
          format: int32
    loggerLookup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    loggerPatchConfigRequest:
      type: object
      properties:
        configId:
          type: integer
          format: int32
        daysToStore:
          type: integer
          format: int32
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        period:
          type: integer
          format: int32
        storage:
          $ref: '#/components/schemas/loggerLookup'
    loggerRecord:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    loggerSystemObjects:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/loggerLookup'
    loggerUpdateConfigRequest:
      type: object
      properties:
        configId:
          type: integer
          format: int32
        daysToStore:
          type: integer
          format: int32
        description:
          type: string
        enabled:
          type: boolean
        period:
          type: integer
          format: int32
        storage:
          $ref: '#/components/schemas/loggerLookup'
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
        value:
          type: string
          format: byte
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
            type: object
        message:
          type: string
    runtimeError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
        error:
          type: string
        message:
          type: string
    storage.BackendProfile:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        dataCount:
          type: string
          format: int64
        dataSize:
          type: string
          format: int64
        description:
          type: string
        disabled:
          type: boolean
        expireDays:
          type: integer
          format: int32
        id:
          type: string
          format: int64
        maxSize:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    storage.BulkGenerateFileLinkResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/storage.GenerateFileLinkResponse'
    storage.CognitiveProfile:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    storage.CognitiveProfileVoice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    storage.CreateBackendProfileRequest:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        expireDays:
          type: integer
          format: int32
        maxSize:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
    storage.CreateCognitiveProfileRequest:
      description: Create cognitive profile request body for TTS and TTS
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
      required:
        - name
        - provider
        - service
        - properties
      title: Create cognitive profile request body
    storage.CreateFilePolicyRequest:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        maxUploadSize:
          type: string
          format: int64
        mimeTypes:
          type: array
          items:
            type: string
        name:
          type: string
        retentionDays:
          type: integer
          format: int32
        speedDownload:
          type: string
          format: int64
        speedUpload:
          type: string
          format: int64
    storage.CreateImportTemplateRequest:
      description: Create import template for CSV
      type: object
      properties:
        parameters:
          type: object
        description:
          type: string
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
        sourceId:
          type: string
          format: int64
        sourceType:
          $ref: '#/components/schemas/storage.ImportSourceType'
      required:
        - name
        - sourceId
        - parameters
      title: Create import template request body
    storage.DeleteFileTranscriptRequest:
      type: object
      properties:
        id:
          type: array
          items:
            format: int64
            type: string
        uuid:
          type: array
          items:
            type: string
    storage.DeleteFileTranscriptResponse:
      type: object
      properties:
        items:
          type: array
          items:
            format: int64
            type: string
    storage.DeleteFilesRequest:
      type: object
      properties:
        id:
          type: array
          items:
            format: int64
            type: string
    storage.DeleteFilesResponse:
      type: object
    storage.File:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        referenceId:
          type: string
        retentionUntil:
          type: string
          format: int64
        sha256Sum:
          type: string
        size:
          type: string
          format: int64
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uploadedAt:
          type: string
          format: int64
        uploadedBy:
          $ref: '#/components/schemas/engine.Lookup'
        uuid:
          type: string
        viewName:
          type: string
    storage.FilePolicy:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        id:
          type: integer
          format: int32
        maxUploadSize:
          type: string
          format: int64
        mimeTypes:
          type: array
          items:
            type: string
        name:
          type: string
        position:
          type: integer
          format: int32
        retentionDays:
          type: integer
          format: int32
        speedDownload:
          type: string
          format: int64
        speedUpload:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    storage.FilePolicyApplyRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
    storage.FilePolicyApplyResponse:
      type: object
      properties:
        count:
          type: string
          format: int64
    storage.FileTranscriptSafeResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        file:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        locale:
          type: string
        profile:
          $ref: '#/components/schemas/engine.Lookup'
        transcript:
          type: string
    storage.GenerateFileLinkRequest:
      type: object
      properties:
        action:
          type: string
        domainId:
          type: string
          format: int64
        fileId:
          type: string
          format: int64
        metadata:
          type: boolean
        query:
          type: object
          additionalProperties:
            type: string
        source:
          type: string
    storage.GenerateFileLinkResponse:
      type: object
      properties:
        baseUrl:
          type: string
        metadata:
          $ref: '#/components/schemas/storage.GenerateFileLinkResponse.Metadata'
        url:
          type: string
    storage.GenerateFileLinkResponse.Metadata:
      type: object
      properties:
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        uuid:
          type: string
    storage.ImportSourceType:
      type: string
      default: DefaultSourceType
      enum:
        - DefaultSourceType
        - Dialer
    storage.ImportTemplate:
      type: object
      properties:
        parameters:
          type: object
        description:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
        sourceId:
          type: string
          format: int64
        sourceType:
          $ref: '#/components/schemas/storage.ImportSourceType'
    storage.ListBackendProfile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.BackendProfile'
        next:
          type: boolean
    storage.ListCognitiveProfile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.CognitiveProfile'
        next:
          type: boolean
    storage.ListCognitiveProfileVoices:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.CognitiveProfileVoice'
    storage.ListFile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.File'
        next:
          type: boolean
    storage.ListFilePolicies:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.FilePolicy'
        next:
          type: boolean
    storage.ListImportTemplate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.ImportTemplate'
        next:
          type: boolean
    storage.ListMedia:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.MediaFile'
        next:
          type: boolean
    storage.ListPhrases:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.TranscriptPhrase'
        next:
          type: boolean
    storage.MediaFile:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/engine.Lookup'
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/engine.Lookup'
    storage.MovePositionFilePolicyRequest:
      type: object
      properties:
        fromId:
          type: integer
          format: int32
        toId:
          type: integer
          format: int32
    storage.MovePositionFilePolicyResponse:
      type: object
      properties:
        success:
          type: boolean
    storage.PatchBackendProfileRequest:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        expireDays:
          type: integer
          format: int32
        fields:
          type: array
          items:
            type: string
        id:
          type: string
          format: int64
        maxSize:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
    storage.PatchCognitiveProfileRequest:
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        fields:
          type: array
          items:
            type: string
        id:
          type: string
          format: int64
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
    storage.PatchFilePolicyRequest:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        fields:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
        maxUploadSize:
          type: string
          format: int64
        mimeTypes:
          type: array
          items:
            type: string
        name:
          type: string
        retentionDays:
          type: integer
          format: int32
        speedDownload:
          type: string
          format: int64
        speedUpload:
          type: string
          format: int64
    storage.PatchImportTemplateRequest:
      description: Patch import template for CSV
      type: object
      properties:
        parameters:
          type: object
        description:
          type: string
        fields:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
        name:
          type: string
      required:
        - id
      title: Patch import template request body
    storage.ProviderType:
      type: string
      default: DefaultProvider
      enum:
        - DefaultProvider
        - Microsoft
        - Google
        - ElevenLabs
    storage.PutFileTranscriptRequest:
      type: object
      properties:
        fileId:
          type: string
          format: int64
        locale:
          type: string
        phrases:
          type: array
          items:
            $ref: '#/components/schemas/storage.TranscriptPhrase'
        text:
          type: string
        uuid:
          type: string
    storage.PutFileTranscriptResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    storage.SafeUploadFileRequest.Metadata:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        domainId:
          type: string
          format: int64
        generateThumbnail:
          type: boolean
        mimeType:
          type: string
        name:
          type: string
        profileId:
          type: string
          format: int64
        progress:
          type: boolean
        streamResponse:
          type: boolean
        uuid:
          type: string
    storage.SafeUploadFileResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Metadata'
        part:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Part'
        progress:
          $ref: '#/components/schemas/storage.SafeUploadFileResponse.Progress'
    storage.SafeUploadFileResponse.Metadata:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        fileId:
          type: string
          format: int64
        fileUrl:
          type: string
        mimeType:
          type: string
        name:
          type: string
        server:
          type: string
        sha256Sum:
          type: string
        size:
          type: string
          format: int64
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uuid:
          type: string
    storage.SafeUploadFileResponse.Part:
      type: object
      properties:
        size:
          type: string
          format: int64
        uploadId:
          type: string
    storage.SafeUploadFileResponse.Progress:
      type: object
      properties:
        uploaded:
          type: string
          format: int64
    storage.ServiceType:
      type: string
      default: DefaultService
      enum:
        - DefaultService
        - STT
        - TTS
    storage.StartFileTranscriptRequest:
      type: object
      properties:
        fileId:
          type: array
          items:
            format: int64
            type: string
        locale:
          type: string
        profile:
          $ref: '#/components/schemas/engine.Lookup'
        uuid:
          type: array
          items:
            type: string
    storage.StartFileTranscriptResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/storage.StartFileTranscriptResponse.TranscriptJob'
    storage.StartFileTranscriptResponse.TranscriptJob:
      type: object
      properties:
        action:
          type: string
        createdAt:
          type: string
          format: int64
        fileId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        state:
          type: string
    storage.StreamFile:
      type: object
      properties:
        chunk:
          type: string
          format: byte
        metadata:
          $ref: '#/components/schemas/storage.StreamFile.Metadata'
    storage.StreamFile.Metadata:
      type: object
      properties:
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        sha256Sum:
          type: string
        size:
          type: string
          format: int64
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        uuid:
          type: string
    storage.Thumbnail:
      type: object
      properties:
        mimeType:
          type: string
        scale:
          type: string
        size:
          type: string
          format: int64
    storage.TranscriptPhrase:
      type: object
      properties:
        channel:
          type: integer
          format: int64
        endSec:
          type: number
          format: float
        phrase:
          type: string
        startSec:
          type: number
          format: float
    storage.UpdateBackendProfileRequest:
      type: object
      properties:
        description:
          type: string
        disabled:
          type: boolean
        domainId:
          type: string
          format: int64
        expireDays:
          type: integer
          format: int32
        id:
          type: string
          format: int64
        maxSize:
          type: string
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
    storage.UpdateCognitiveProfileRequest:
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: string
          format: int64
        name:
          type: string
        properties:
          type: object
        provider:
          $ref: '#/components/schemas/storage.ProviderType'
        service:
          $ref: '#/components/schemas/storage.ServiceType'
    storage.UpdateFilePolicyRequest:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/storage.UploadFileChannel'
        description:
          type: string
        enabled:
          type: boolean
        encrypt:
          type: boolean
        id:
          type: integer
          format: int32
        maxUploadSize:
          type: string
          format: int64
        mimeTypes:
          type: array
          items:
            type: string
        name:
          type: string
        retentionDays:
          type: integer
          format: int32
        speedDownload:
          type: string
          format: int64
        speedUpload:
          type: string
          format: int64
    storage.UpdateImportTemplateRequest:
      description: Update import template for CSV
      type: object
      properties:
        parameters:
          type: object
        description:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        source:
          $ref: '#/components/schemas/engine.Lookup'
      required:
        - id
        - name
      title: Update import template request body
    storage.UploadFileChannel:
      type: string
      default: UnknownChannel
      enum:
        - UnknownChannel
        - ChatChannel
        - MailChannel
        - CallChannel
        - LogChannel
        - MediaChannel
        - KnowledgebaseChannel
        - CasesChannel
    storage.UploadFileRequest.Metadata:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/storage.UploadFileChannel'
        domainId:
          type: string
          format: int64
        generateThumbnail:
          type: boolean
        mimeType:
          type: string
        name:
          type: string
        profileId:
          type: string
          format: int64
        streamResponse:
          type: boolean
        uuid:
          type: string
    storage.UploadFileResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        fileId:
          type: string
          format: int64
        fileUrl:
          type: string
        server:
          type: string
        sha256Sum:
          type: string
        size:
          type: string
          format: int64
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
    storage.UploadFileUrlResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/storage.UploadStatusCode'
        id:
          type: string
          format: int64
        mime:
          type: string
        server:
          type: string
        sha256Sum:
          type: string
        size:
          type: string
          format: int64
        thumbnail:
          $ref: '#/components/schemas/storage.Thumbnail'
        url:
          type: string
    storage.UploadStatusCode:
      type: string
      default: Unknown
      enum:
        - Unknown
        - Ok
        - Failed
    webitel.cases.Attachment:
      type: object
      properties:
        id:
          type: string
          format: int64
        mime:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        url:
          type: string
    webitel.cases.CallEvent:
      type: object
      properties:
        closedAt:
          type: string
          format: int64
        duration:
          type: string
          format: int64
        files:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CallFile'
            type: object
        flowScheme:
          $ref: '#/components/schemas/general.Lookup'
        gateway:
          $ref: '#/components/schemas/general.Lookup'
        id:
          type: string
        isDetailed:
          type: boolean
        isInbound:
          type: boolean
        isMissed:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
        queue:
          $ref: '#/components/schemas/general.Lookup'
        totalDuration:
          type: string
          format: int64
        transcripts:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.TranscriptLookup'
            type: object
    webitel.cases.CallFile:
      type: object
      properties:
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        startAt:
          type: string
          format: int64
        stopAt:
          type: string
          format: int64
    webitel.cases.Case:
      description: Message representing a case.
      type: object
      properties:
        assignee:
          description: Assignee responsible for resolving the case.
          $ref: '#/components/schemas/general.Lookup'
        author:
          description: Author or reporter of the case.
          $ref: '#/components/schemas/general.Lookup'
        closeReason:
          $ref: '#/components/schemas/general.Lookup'
          title: Close details
        closeReasonGroup:
          description: 'Close reason group, immutable once set.'
          $ref: '#/components/schemas/general.Lookup'
        closeResult:
          type: string
        comments:
          description: List of comments on the case.
          $ref: '#/components/schemas/webitel.cases.CaseCommentList'
        contactInfo:
          description: Contact information for the case.
          type: string
        createdAt:
          description: Creation timestamp (in milliseconds since Unix epoch).
          type: string
          format: int64
        createdBy:
          description: Creator of the case.
          $ref: '#/components/schemas/general.Lookup'
        custom:
          description: Custom data extension fields ..
          type: object
        dc:
          type: string
          format: int64
          title: System field
        description:
          description: Detailed description of the case.
          type: string
        differenceInReaction:
          type: string
          format: int64
        differenceInResolve:
          type: string
          format: int64
        etag:
          description: Unique etag identifier.
          type: string
        files:
          description: List of attached files.
          $ref: '#/components/schemas/webitel.cases.CaseFileList'
        group:
          description: Group associated with the case.
          $ref: '#/components/schemas/general.ExtendedLookup'
        id:
          description: Unique case ID.
          type: string
          format: int64
        impacted:
          description: Impacted contact (defaults to reporter if null).
          $ref: '#/components/schemas/general.Lookup'
        links:
          description: List of attached links.
          $ref: '#/components/schemas/webitel.cases.CaseLinkList'
        name:
          description: Name of the case (may serve as an ID in docs).
          type: string
        plannedReactionAt:
          description: Planned reaction time (in milliseconds).
          type: string
          format: int64
        plannedResolveAt:
          description: Planned resolution time (in milliseconds).
          type: string
          format: int64
        priority:
          description: Priority level of the case.
          $ref: '#/components/schemas/webitel.cases.Priority'
        rating:
          type: string
          format: int64
          title: Rating details
        ratingComment:
          type: string
        reactedAt:
          type: string
          format: int64
        related:
          description: List of related cases.
          $ref: '#/components/schemas/webitel.cases.RelatedCaseList'
        reporter:
          description: Reporter of the issue (null if anonymous).
          $ref: '#/components/schemas/general.Lookup'
        resolvedAt:
          type: string
          format: int64
          title: Timing details
        roleIds:
          type: array
          items:
            format: int64
            type: string
          title: System field
        service:
          description: Service associated with the case.
          $ref: '#/components/schemas/general.Lookup'
        sla:
          description: SLA associated with the case.
          $ref: '#/components/schemas/general.Lookup'
        slaCondition:
          description: List of SLA conditions.
          $ref: '#/components/schemas/general.Lookup'
        source:
          description: Source of the case.
          $ref: '#/components/schemas/webitel.cases.SourceTypeLookup'
        status:
          description: Current status of the case.
          $ref: '#/components/schemas/general.Lookup'
        statusCondition:
          description: Status condition from status lookup.
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
        subject:
          description: Subject of the case.
          type: string
        updatedAt:
          description: Last update timestamp (in milliseconds since Unix epoch).
          type: string
          format: int64
        updatedBy:
          description: Last updater of the case.
          $ref: '#/components/schemas/general.Lookup'
        ver:
          description: Version number of the case.
          type: integer
          format: int32
    webitel.cases.CaseComment:
      description: Represents a comment associated with a case.
      type: object
      properties:
        author:
          description: Contact-author of the comment.
          $ref: '#/components/schemas/general.Lookup'
        canEdit:
          description: Indicates if the comment can be edited by current user.
          type: boolean
        caseId:
          description: Optional relation to the associated case.
          type: string
          format: int64
        createdAt:
          description: Timestamp (in milliseconds) of when the comment was created.
          type: string
          format: int64
        createdBy:
          description: User who created the comment.
          $ref: '#/components/schemas/general.Lookup'
        edited:
          description: Indicates if the comment was edited; true if created_at < updated_at.
          type: boolean
        etag:
          type: string
          title: entity tag representing id + ver
        id:
          description: 'Main identifier for read, update, and delete operations.'
          type: string
          format: int64
        roleIds:
          type: array
          items:
            format: int64
            type: string
          title: System field
        text:
          description: The content of the comment.
          type: string
        updatedAt:
          description: Timestamp (in milliseconds) of the last update.
          type: string
          format: int64
        updatedBy:
          description: User who last updated the comment.
          $ref: '#/components/schemas/general.Lookup'
        ver:
          description: 'Version number of the comment, used for concurrency control.'
          type: integer
          format: int32
    webitel.cases.CaseCommentList:
      description: Contains a paginated list of comments.
      type: object
      properties:
        items:
          description: List of comments on the current page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CaseComment'
            type: object
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          type: string
          format: int64
    webitel.cases.CaseCommunication:
      description: Represents a single case communication.
      type: object
      properties:
        communicationId:
          description: External communication ID.
          type: string
        communicationType:
          description: 'Type of the communication (e.g., Chat, Call).'
          $ref: '#/components/schemas/general.Lookup'
        etag:
          description: Version of the communication record.
          type: string
        id:
          description: Database ID of the communication.
          type: string
          format: int64
        ver:
          description: Version of the communication record.
          type: integer
          format: int32
    webitel.cases.CaseFileList:
      description: Contains a list of case files with pagination.
      type: object
      properties:
        items:
          description: List of case files.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.File'
            type: object
        next:
          description: Indicator if there is a next page.
          type: boolean
        page:
          description: Current page number.
          type: string
          format: int64
    webitel.cases.CaseLink:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/general.Lookup'
          title: contact-author calculated on-flight (optional)
        createdAt:
          type: string
          format: int64
          title: unixmilli
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
        etag:
          type: string
          title: 'main field required for read, update and delete'
        id:
          type: string
          format: int64
        name:
          type: string
          title: link name (optional)
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
        url:
          type: string
          title: URL
        ver:
          type: integer
          format: int32
    webitel.cases.CaseLinkList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CaseLink'
            type: object
        next:
          type: boolean
        page:
          type: string
          format: int64
    webitel.cases.CaseList:
      description: Response message containing a list of cases.
      type: object
      properties:
        items:
          description: List of cases.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Case'
            type: object
        next:
          description: Flag indicating if there are more pages.
          type: boolean
        page:
          description: Current page number.
          type: string
          format: int64
    webitel.cases.CaseTimelineEventType:
      type: string
      default: chat
      enum:
        - chat
        - call
        - email
    webitel.cases.Catalog:
      type: object
      properties:
        closeReasonGroup:
          $ref: '#/components/schemas/general.Lookup'
          title: Close reason group associated with the catalog
        code:
          type: string
          title: Code for external integrations (optional)
        createdAt:
          type: string
          format: int64
          title: Timestamp when the catalog was created
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: User who created the catalog
        description:
          type: string
          title: Description of the catalog (optional)
        id:
          type: string
          format: int64
          title: Unique identifier for the catalog
        name:
          type: string
          title: Name of the catalog
        prefix:
          type: string
          title: Prefix used for case identification (optional)
        searched:
          type: boolean
          title: flag showing whether the catalog was searched
        service:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: Service associated with the catalog
        skills:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: Skills associated with the catalog
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA associated with the catalog
        state:
          type: boolean
          title: 'State of the catalog (true for active, false for inactive)'
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: Status associated with the catalog
        teams:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: Teams associated with the catalog
        updatedAt:
          type: string
          format: int64
          title: Timestamp when the catalog was last updated
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: User who last updated the catalog
      title: Catalog message represents the main catalog entity with metadata
    webitel.cases.CatalogList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Catalog'
            type: object
          title: List of catalog items
        next:
          type: boolean
          title: Indicates if there are more pages
        page:
          type: integer
          format: int32
          title: Page number for pagination
      title: CatalogList message contains a list of catalogs with pagination
    webitel.cases.ChatEvent:
      type: object
      properties:
        closedAt:
          type: string
          format: int64
        duration:
          type: string
          format: int64
        flowScheme:
          $ref: '#/components/schemas/general.Lookup'
        gateway:
          $ref: '#/components/schemas/general.ExtendedLookup'
        id:
          type: string
        isDetailed:
          type: boolean
        isInbound:
          type: boolean
        isMissed:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
        queue:
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.CloseReason:
      type: object
      properties:
        closeReasonGroupId:
          type: string
          format: int64
          title: Close Reason Group ID of the close reason
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the close reason
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason
        description:
          type: string
          title: Description of the close reason
        id:
          type: string
          format: int64
          title: Unique identifier of the close reason
        name:
          type: string
          title: Name of the close reason
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the close reason
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason
      title: CloseReason message represents a close reason entity with metadata
    webitel.cases.CloseReasonGroup:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the close reason group
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason group
        description:
          type: string
          title: Description of the close reason group
        id:
          type: string
          format: int64
          title: Unique identifier of the close reason group
        name:
          type: string
          title: Name of the close reason group
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the close reason group
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason group
      title: CloseReasonGroup message represents a close reason group entity with metadata
    webitel.cases.CloseReasonGroupList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: CloseReasonGroupList message contains a list of CloseReasonGroup items with pagination
    webitel.cases.CloseReasonList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CloseReason'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: CloseReasonList message contains a list of CloseReason items with pagination
    webitel.cases.CreateCaseRelatedCaseInput:
      description: Structure for related cases input when creating a case.
      type: object
      properties:
        etag:
          description: Etag of the related case.
          type: string
        relatedTo:
          description: Identifier of the related case.
          type: string
        relationType:
          description: 'Type of relation (e.g., duplicate, linked).'
          $ref: '#/components/schemas/webitel.cases.RelationType'
    webitel.cases.CreateInputRelatedCase:
      description: Input for creating a related case.
      type: object
      properties:
        relatedCase:
          description: Related case details.
          $ref: '#/components/schemas/general.Lookup'
        relationType:
          description: Relation type between the cases.
          $ref: '#/components/schemas/webitel.cases.RelationType'
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.DayTimeline:
      type: object
      properties:
        callsCount:
          type: string
          format: int64
        chatsCount:
          type: string
          format: int64
        dayTimestamp:
          type: string
          format: int64
        emailsCount:
          type: string
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Event'
            type: object
    webitel.cases.EmailEvent:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Attachment'
            type: object
        body:
          type: string
          title: plain text of email
        cc:
          type: array
          items:
            type: string
          title: array of ccs (email addresses)
        from:
          type: array
          items:
            type: string
          title: array of senders (email addresses)
        html:
          type: string
          title: html body of email
        id:
          type: string
        isDetailed:
          type: boolean
          title: reserved for the open
        isInbound:
          type: boolean
          title: inbound/outbound email
        owner:
          $ref: '#/components/schemas/general.Lookup'
          title: Agent who sent/accepted
        profile:
          $ref: '#/components/schemas/general.Lookup'
          title: email profile
        sender:
          type: array
          items:
            type: string
          title: array of receivers (email addresses)
        subject:
          type: string
        to:
          type: array
          items:
            type: string
          title: array of receivers (email addresses)
    webitel.cases.Event:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/webitel.cases.CallEvent'
        chat:
          $ref: '#/components/schemas/webitel.cases.ChatEvent'
        createdAt:
          type: string
          format: int64
        email:
          $ref: '#/components/schemas/webitel.cases.EmailEvent'
        type:
          $ref: '#/components/schemas/webitel.cases.CaseTimelineEventType'
    webitel.cases.File:
      description: Metadata for a file associated with a case.
      type: object
      properties:
        author:
          $ref: '#/components/schemas/general.Lookup'
        createdAt:
          description: Creation timestamp in Unix milliseconds.
          type: string
          format: int64
        createdBy:
          description: Creator of the file.
          $ref: '#/components/schemas/general.Lookup'
        id:
          description: Storage file ID.
          type: string
          format: int64
        mime:
          description: MIME type of the file.
          type: string
        name:
          description: File name.
          type: string
        size:
          description: File size in bytes.
          type: string
          format: int64
        url:
          type: string
    webitel.cases.GetTimelineCounterResponse:
      type: object
      properties:
        callsCount:
          type: string
          format: int64
        chatsCount:
          type: string
          format: int64
          title: defined event types
        dateFrom:
          type: string
          format: int64
          title: filter dates
        dateTo:
          type: string
          format: int64
        emailsCount:
          type: string
          format: int64
    webitel.cases.GetTimelineResponse:
      type: object
      properties:
        days:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.DayTimeline'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
    webitel.cases.InputCase:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default from service or set by UI;'
        closeReason:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required;'
        closeResult:
          type: string
          title: 'create: not required; update: required only when case status goes to the final state'
        contactInfo:
          type: string
          title: 'create: not required;'
        custom:
          description: Custom data extension fields ..
          type: object
        description:
          type: string
          title: 'create: not required;'
        etag:
          type: string
        group:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default from service or set by UI;'
        impacted:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: required, default is reporter or ui (if empty recognize as anonymous);'
        priority:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default first value from priority lookup'
        rating:
          type: string
          format: int64
        ratingComment:
          type: string
        reporter:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: required (if empty recognize as anonymous contact);'
        service:
          $ref: '#/components/schemas/general.Lookup'
          title: on this field base many other readonly fields on return
        source:
          $ref: '#/components/schemas/general.Lookup'
          title: source of the case
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: 'create: not required, default initial value from status lookup or ui;'
        statusCondition:
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
        subject:
          type: string
          title: 'create: required;'
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.InputCaseComment:
      description: Input structure for creating or updating a case comment.
      type: object
      properties:
        etag:
          description: Identifier for the comment.
          type: string
        text:
          description: Content of the comment.
          type: string
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
      example:
        text: My new comment
    webitel.cases.InputCaseCommunication:
      description: Represents input data for creating or linking a communication.
      type: object
      properties:
        communicationId:
          description: External communication ID.
          type: string
        communicationType:
          description: Type of the communication.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.InputCaseLink:
      type: object
      properties:
        etag:
          type: string
        name:
          type: string
        url:
          type: string
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.InputCatalog:
      type: object
      properties:
        closeReasonGroup:
          $ref: '#/components/schemas/general.Lookup'
          title: Close reason group ID associated with the catalog
        code:
          type: string
          title: Code for external integrations (optional)
        description:
          type: string
          title: Description of the catalog (optional)
        name:
          type: string
          title: Name of the catalog (required)
        prefix:
          type: string
          title: Prefix for case identification (optional)
        skills:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of skill IDs associated with the catalog
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the catalog
        state:
          type: boolean
          title: 'State of the catalog (true for active, false for inactive)'
        status:
          $ref: '#/components/schemas/general.Lookup'
          title: Status ID associated with the catalog
        teams:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of team IDs associated with the catalog
      title: InputCatalog message contains the fields for creating or updating a catalog
    webitel.cases.InputCloseReason:
      type: object
      properties:
        description:
          type: string
          title: Description of the close reason
        name:
          type: string
          title: Name of the close reason
      title: InputCloseReason message for inputting close reason data
    webitel.cases.InputCloseReasonGroup:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    webitel.cases.InputCreateCase:
      description: Input structure for creating a new case.
      type: object
      properties:
        assignee:
          description: Optional assignee ID.
          $ref: '#/components/schemas/general.Lookup'
        closeReason:
          description: Optional close information.
          $ref: '#/components/schemas/general.Lookup'
        closeReasonGroup:
          description: Optional close reason.
          $ref: '#/components/schemas/general.Lookup'
        closeResult:
          description: Optional close information.
          type: string
        contactInfo:
          description: Optional contact information.
          type: string
        custom:
          description: Custom data extension fields ..
          type: object
        description:
          description: Optional description of the case.
          type: string
        group:
          description: Optional group ID.
          $ref: '#/components/schemas/general.Lookup'
        impacted:
          description: 'Required impacted user ID (default: reporter).'
          $ref: '#/components/schemas/general.Lookup'
        links:
          description: List of links attached to the case.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.InputCaseLink'
            type: object
        priority:
          description: Optional priority level.
          $ref: '#/components/schemas/general.Lookup'
        rating:
          description: API-only rating information.
          type: string
          format: int64
        ratingComment:
          description: API-only rating information.
          type: string
        related:
          description: List of related cases.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CreateCaseRelatedCaseInput'
            type: object
        reporter:
          description: 'Required reporter ID (if empty, anonymous contact).'
          $ref: '#/components/schemas/general.Lookup'
        service:
          description: Service ID (affects many other readonly fields).
          $ref: '#/components/schemas/general.Lookup'
        source:
          description: Source of the case.
          $ref: '#/components/schemas/general.Lookup'
        status:
          description: Initial case status (default from lookup or UI).
          $ref: '#/components/schemas/general.Lookup'
        statusCondition:
          $ref: '#/components/schemas/general.Lookup'
        subject:
          description: Required subject of the case.
          type: string
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.InputCreateService:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee ID responsible for the service
        catalogId:
          type: string
          format: int64
          title: ID of the root catalog
        code:
          type: string
          title: Code for external integrations (optional)
        description:
          type: string
          title: Description of the service (optional)
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group ID responsible for the service
        name:
          type: string
          title: Name of the service (required)
        rootId:
          type: string
          format: int64
          title: Parent catalog ID (required)
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the service
        state:
          type: boolean
          title: 'State of the service (true for active, false for inactive)'
    webitel.cases.InputCreateStatusCondition:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    webitel.cases.InputPriority:
      type: object
      properties:
        color:
          type: string
          title: Color of the priority
        description:
          type: string
          title: Description of the priority
        name:
          type: string
          title: Name of the priority
      title: InputPriority message for creating a new priority
    webitel.cases.InputRelatedCase:
      description: Input for creating or updating a related case.
      type: object
      properties:
        primaryCase:
          description: Primary case details.
          $ref: '#/components/schemas/general.Lookup'
        relatedCase:
          description: Related case details.
          $ref: '#/components/schemas/general.Lookup'
        relationType:
          description: Relation type.
          $ref: '#/components/schemas/webitel.cases.RelationType'
        userId:
          description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
          $ref: '#/components/schemas/general.Lookup'
    webitel.cases.InputSLA:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/general.Lookup'
          title: Calendar ID from the "Calendars" dictionary
        description:
          type: string
          title: Description of the SLA
        name:
          type: string
          title: Name of the SLA
        reactionTime:
          type: string
          format: int64
          title: Reaction time
        resolutionTime:
          type: string
          format: int64
          title: Resolution time
        validFrom:
          type: string
          format: int64
          title: Validity period for the SLA
        validTo:
          type: string
          format: int64
      title: InputSLA message for inputting SLA data
    webitel.cases.InputSLACondition:
      type: object
      properties:
        name:
          type: string
        priorities:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: List of priority IDs for creation
        reactionTime:
          type: string
          format: int64
        resolutionTime:
          type: string
          format: int64
      title: InputSLACondition message for inputting SLACondition data
    webitel.cases.InputService:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee ID responsible for the service
        catalogId:
          type: string
          format: int64
          title: The parent catalog (required)
        code:
          type: string
          title: Code for external integrations (optional)
        description:
          type: string
          title: Description of the service (optional)
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group ID responsible for the service
        name:
          type: string
          title: Name of the service (required)
        rootId:
          type: string
          format: int64
          title: ID of the root catalog
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA ID associated with the service
        state:
          type: boolean
          title: 'State of the service (true for active, false for inactive)'
      title: InputService message contains the fields for creating or updating a service
    webitel.cases.InputSource:
      description: The data structure representing a source
      type: object
      properties:
        description:
          description: A short description of the source
          type: string
          format: string
          example: Handles incoming calls from customers
          default: No description provided
          maxLength: 500
          title: Optional short description for context
        name:
          description: The name of the source
          type: string
          format: string
          example: Inbound Calls
          default: New Source
          maxLength: 100
          minLength: 2
          pattern: '^[a-zA-Z0-9_\- ]+$'
          title: Display name for the source
        type:
          description: The type of the source
          format: string
          example: CALL
          default: '"CALL"'
          enum:
            - CALL
            - EMAIL
            - CHAT
          $ref: '#/components/schemas/webitel.cases.SourceType'
          title: Type of the source; restrictable to a fixed set of allowed values
      example:
        description: Inbound customer calls
        name: Inbound
        type: CALL
      default: '{ "name": "Default Source", "type": "CALL" }'
      externalDocs:
        description: Supported source types documentation
        url: 'https://api.example.com/docs/source-types'
      maxProperties: 5
      minProperties: 2
      required:
        - name
        - type
      title: Input Source
    webitel.cases.InputStatus:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    webitel.cases.InputStatusCondition:
      type: object
      properties:
        description:
          type: string
          title: Description of the status condition
        final:
          type: boolean
          title: Final status condition
        initial:
          type: boolean
          title: Initial status condition
        name:
          type: string
          title: Name of the status condition
      title: InputStatusCondition message for inputting status condition data
    webitel.cases.LinkCommunicationResponse:
      description: Response message after linking communications to a case.
      type: object
      properties:
        data:
          description: List of linked communications.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CaseCommunication'
            type: object
    webitel.cases.ListCommunicationsResponse:
      description: Response message for listing communications linked to a case.
      type: object
      properties:
        data:
          description: List of communications.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.CaseCommunication'
            type: object
        next:
          type: boolean
        page:
          description: Current page number.
          type: integer
          format: int32
    webitel.cases.LocateCatalogResponse:
      type: object
      properties:
        catalog:
          $ref: '#/components/schemas/webitel.cases.Catalog'
          title: The located catalog
      title: LocateCatalogResponse message contains a single catalog entity
    webitel.cases.LocateCloseReasonGroupResponse:
      type: object
      properties:
        closeReasonGroup:
          $ref: '#/components/schemas/webitel.cases.CloseReasonGroup'
      title: LocateCloseReasonGroupResponse message contains a single close reason group entity
    webitel.cases.LocateCloseReasonResponse:
      type: object
      properties:
        closeReason:
          $ref: '#/components/schemas/webitel.cases.CloseReason'
      title: LocateCloseReasonResponse message contains a single close reason entity
    webitel.cases.LocatePriorityResponse:
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/webitel.cases.Priority'
      title: LocatePriorityResponse message contains a single priority entity
    webitel.cases.LocateSLAConditionResponse:
      type: object
      properties:
        slaCondition:
          $ref: '#/components/schemas/webitel.cases.SLACondition'
      title: LocateSLAConditionResponse message contains a single SLACondition entity
    webitel.cases.LocateSLAResponse:
      type: object
      properties:
        sla:
          $ref: '#/components/schemas/webitel.cases.SLA'
      title: LocateSLAResponse message contains a single SLA entity
    webitel.cases.LocateServiceResponse:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/webitel.cases.Service'
          title: The located service
      title: LocateServiceResponse message contains a single service entity
    webitel.cases.LocateSourceResponse:
      description: Response message for locating a source.
      type: object
      properties:
        source:
          description: The located source.
          $ref: '#/components/schemas/webitel.cases.Source'
    webitel.cases.LocateStatusConditionResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/webitel.cases.StatusCondition'
      title: LocateStatusConditionResponse message contains a single status entity
    webitel.cases.LocateStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/webitel.cases.Status'
      title: LocateStatusResponse message contains a single status entity
    webitel.cases.Priority:
      type: object
      properties:
        color:
          type: string
          title: Color of the priority
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the priority
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the priority
        description:
          type: string
          title: Description of the priority
        id:
          type: string
          format: int64
          title: Unique identifier of the priority
        name:
          type: string
          title: Name of the priority
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the priority
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the priority
      title: Priority message represents a priority entity with metadata
    webitel.cases.PriorityList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Priority'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: PriorityList message contains a list of Priority items with pagination
    webitel.cases.RelatedCase:
      description: Represents a related case with its relationship details.
      type: object
      properties:
        createdAt:
          description: Timestamp (in milliseconds) of when the relation was created.
          type: string
          format: int64
        createdBy:
          description: User who created the relation.
          $ref: '#/components/schemas/general.Lookup'
        etag:
          description: Etag for the related case entity.
          type: string
        id:
          description: Unique identifier for the related case.
          type: string
          format: int64
        primaryCase:
          description: Primary case details.
          $ref: '#/components/schemas/webitel.cases.RelatedCaseLookup'
        relatedCase:
          description: Related case details.
          $ref: '#/components/schemas/webitel.cases.RelatedCaseLookup'
        relationType:
          description: Relation type between cases.
          $ref: '#/components/schemas/webitel.cases.RelationType'
        updatedAt:
          description: Timestamp (in milliseconds) of the last update.
          type: string
          format: int64
        updatedBy:
          description: User who last updated the relation.
          $ref: '#/components/schemas/general.Lookup'
        ver:
          description: 'Version number of the related case, used for concurrency control.'
          type: integer
          format: int32
    webitel.cases.RelatedCaseList:
      description: Paginated list of related cases.
      type: object
      properties:
        data:
          description: List of related cases on the current page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.RelatedCase'
            type: object
        next:
          description: Flag to indicate if more pages are available.
          type: boolean
        page:
          description: Current page number.
          type: string
          format: int64
    webitel.cases.RelatedCaseLookup:
      description: RelatedCaseLookup is created specifically to include the subject field.
      type: object
      properties:
        color:
          type: string
          title: colour ( calculated by attached priority )
        etag:
          type: string
        id:
          type: string
          format: int64
          title: id
        name:
          type: string
          title: name
        subject:
          type: string
          title: subject
        ver:
          type: integer
          format: int32
          title: ver
    webitel.cases.RelationType:
      description: Enum for relation types between cases.
      type: string
      default: RELATION_TYPE_UNSPECIFIED
      enum:
        - RELATION_TYPE_UNSPECIFIED
        - DUPLICATES
        - IS_DUPLICATED_BY
        - BLOCKS
        - IS_BLOCKED_BY
        - CAUSES
        - IS_CAUSED_BY
        - IS_CHILD_OF
        - IS_PARENT_OF
        - RELATES_TO
    webitel.cases.SLA:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/general.Lookup'
          title: Calendar ID from the "Calendars" dictionary - required
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the SLA
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the SLA
        description:
          type: string
          title: Description of the SLA - optional
        id:
          type: string
          format: int64
          title: Unique identifier of the SLA
        name:
          type: string
          title: Name of the SLA - required
        reactionTime:
          type: string
          format: int64
          title: Reaction time - required
        resolutionTime:
          type: string
          format: int64
          title: Resolution time - required
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the SLA
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the SLA
        validFrom:
          type: string
          format: int64
          title: Validity period for the SLA - optional
        validTo:
          type: string
          format: int64
      title: SLA message represents an SLA entity with metadata
    webitel.cases.SLACondition:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the SLACondition
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the SLACondition
        id:
          type: string
          format: int64
          title: Unique identifier of the SLACondition
        name:
          type: string
          title: Name of the SLACondition - required
        priorities:
          type: array
          items:
            $ref: '#/components/schemas/general.Lookup'
            type: object
          title: 'Priorities associated with the SLACondition - fetched as Lookup entities [ Priority name + ID ]'
        reactionTime:
          type: string
          format: int64
          title: Reaction time - required
        resolutionTime:
          type: string
          format: int64
          title: Resolution time - required
        slaId:
          type: string
          format: int64
          title: SLA ID associated with the SLACondition
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the SLACondition
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the SLACondition
      title: SLACondition message represents an SLACondition entity with metadata
    webitel.cases.SLAConditionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.SLACondition'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: SLAConditionList message contains a list of SLACondition items with pagination
    webitel.cases.SLAList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.SLA'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: SLAList message contains a list of SLA items with pagination
    webitel.cases.Service:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/general.Lookup'
          title: Assignee responsible for the service
        catalogId:
          type: string
          format: int64
          title: Catalogs associated with the service
        code:
          type: string
          title: Code for external integrations (optional)
        createdAt:
          type: string
          format: int64
          title: Timestamp when the service was created
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: User who created the service
        description:
          type: string
          title: Description of the service (optional)
        group:
          $ref: '#/components/schemas/general.ExtendedLookup'
          title: Group responsible for the service
        id:
          type: string
          format: int64
          title: Unique identifier for the service
        name:
          type: string
          title: Name of the service
        rootId:
          type: string
          format: int64
          title: ID of the parent catalog
        searched:
          type: boolean
          title: flag showing whether the catalog was searched
        service:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: Service associated with the service
        sla:
          $ref: '#/components/schemas/general.Lookup'
          title: SLA associated with the service
        state:
          type: boolean
          title: 'State of the service (true for active, false for inactive)'
        updatedAt:
          type: string
          format: int64
          title: Timestamp when the service was last updated
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: User who last updated the service
      title: Service message represents a service entity within a catalog
    webitel.cases.ServiceList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Service'
            type: object
          title: List of service items
        next:
          type: boolean
          title: Indicates if there are more pages
        page:
          type: integer
          format: int32
          title: Page number for pagination
      title: ServiceList message contains a list of services with pagination
    webitel.cases.Source:
      description: Represents a data source in the contact management system.
      type: object
      properties:
        createdAt:
          description: Unix timestamp representing when the source was created.
          type: string
          format: int64
          readOnly: true
        createdBy:
          description: Reference to the user who originally created this source.
          $ref: '#/components/schemas/general.Lookup'
          readOnly: true
        description:
          description: An optional longer explanation of the source's purpose.
          type: string
          example: Primary CRM system used for customer relationship tracking.
          maxLength: 500
        id:
          description: 'Unique identifier for the source, generated automatically.'
          type: string
          format: int64
          readOnly: true
        name:
          description: 'A unique, descriptive name for the source.'
          type: string
          example: CRM System
          maxLength: 100
          minLength: 3
          pattern: '^[a-zA-Z0-9_\-\s]+$'
        type:
          description: The type of data source represented by this entry.
          example: CALL
          default: TYPE_UNSPECIFIED
          enum:
            - TYPE_UNSPECIFIED
            - CALL
            - CHAT
            - SOCIAL_MEDIA
            - EMAIL
            - API
            - MANUAL
          $ref: '#/components/schemas/webitel.cases.SourceType'
        updatedAt:
          description: Unix timestamp representing the most recent update.
          type: string
          format: int64
          readOnly: true
        updatedBy:
          description: Reference to the user who most recently modified this source.
          $ref: '#/components/schemas/general.Lookup'
          readOnly: true
      required:
        - id
        - name
        - type
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
      title: Source Entity
    webitel.cases.SourceList:
      description: A list of sources.
      type: object
      properties:
        items:
          description: List of sources.
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Source'
            type: object
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          type: integer
          format: int32
    webitel.cases.SourceType:
      description: |-
        Represents a source type for the source entity.

         - TYPE_UNSPECIFIED: Unspecified source type.
         - CALL: Phone call source type.
         - CHAT: Chat source type.
         - SOCIAL_MEDIA: Social media source type.
         - EMAIL: Email source type.
         - API: API source type.
         - MANUAL: Manual source type.
      type: string
      default: TYPE_UNSPECIFIED
      enum:
        - TYPE_UNSPECIFIED
        - CALL
        - CHAT
        - SOCIAL_MEDIA
        - EMAIL
        - API
        - MANUAL
    webitel.cases.SourceTypeLookup:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        type:
          $ref: '#/components/schemas/webitel.cases.SourceType'
    webitel.cases.Status:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the close reason
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the close reason
        description:
          type: string
          title: Description of the close reason
        id:
          type: string
          format: int64
          title: Unique identifier of the close reason
        name:
          type: string
          title: Name of the close reason
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the close reason
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the close reason
      title: Status message represents a status entity with metadata
    webitel.cases.StatusCondition:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
          title: CreatedAt timestamp of the status condition
        createdBy:
          $ref: '#/components/schemas/general.Lookup'
          title: CreatedBy user of the status condition
        description:
          type: string
          title: Description of the status condition
        final:
          type: boolean
          title: Final status condition
        id:
          type: string
          format: int64
          title: Unique identifier of the status condition
        initial:
          type: boolean
          title: Initial status condition
        name:
          type: string
          title: Name of the status condition
        statusId:
          type: string
          format: int64
          title: Status ID of the status condition
        updatedAt:
          type: string
          format: int64
          title: UpdatedAt timestamp of the status condition
        updatedBy:
          $ref: '#/components/schemas/general.Lookup'
          title: UpdatedBy user of the status condition
      title: StatusCondition message represents a status entity with metadata
    webitel.cases.StatusConditionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.StatusCondition'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: StatusConditionList message contains a list of StatusCondition items with pagination
    webitel.cases.StatusList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.cases.Status'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
      title: StatusList message contains a list of Status items with pagination
    webitel.cases.TranscriptLookup:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/general.Lookup'
        id:
          type: string
          format: int64
        locale:
          type: string
    webitel.cases.UnlinkCommunicationResponse:
      description: Response message after unlinking a communication from a case.
      type: object
      properties:
        affected:
          description: Affected rows.
          type: string
          format: int64
    webitel.chat.AgentChat:
      type: object
      properties:
        closeReason:
          type: string
          title: Close reason (from agent perspective)
        closedAt:
          type: string
          format: int64
        contact:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Connected contact
        gateway:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Chat gateway
        id:
          type: string
          title: Chat id
        lastMessage:
          $ref: '#/components/schemas/webitel.chat.Message'
          title: Chat first message
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: Queue name
        startedAt:
          type: string
          format: int64
          title: Chat time length
        title:
          type: string
          title: Chat title
        unprocessedClose:
          type: boolean
          title: |-
            Special attribute for the closed-active chats (on fact closed but should be on active tab on the front-end)
            can be true only when close reason = any("client_leave", "client_timeout", "agent_timeout", "silence_timeout")
    webitel.chat.BroadcastError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/google.rpc.Status'
        peerId:
          type: string
    webitel.chat.BroadcastMessageRequest:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/webitel.chat.InputMessage'
        peers:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.InputPeer'
            type: object
        timeout:
          type: string
          format: int64
        variables:
          type: object
          additionalProperties:
            type: string
    webitel.chat.BroadcastMessageResponse:
      type: object
      properties:
        failure:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.BroadcastError'
            type: object
        variables:
          type: object
          additionalProperties:
            type: string
    webitel.chat.Button:
      type: object
      properties:
        code:
          description: Postback/Callback data.
          type: string
        share:
          description: Request to share contact info.
          $ref: '#/components/schemas/webitel.chat.Button.Request'
        text:
          description: Caption to display.
          type: string
        url:
          description: URL to navigate to ..
          type: string
    webitel.chat.Button.Request:
      description: |-
        - phone: Phone Number
         - email: Email Address
         - contact: General Form
         - location: Current Location
      type: string
      default: phone
      enum:
        - phone
        - email
        - contact
        - location
      title: Type of request to share contact info
    webitel.chat.ButtonRow:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Button'
            type: object
          title: Button(s) in a row
    webitel.chat.Chat:
      description: |-
        The Chat info.
        Alias: participant, subscriber, member, peer, leg.
      type: object
      properties:
        context:
          description: Context. Variables.
          type: object
          additionalProperties:
            type: string
        dc:
          description: '[D]omain[C]omponent primary ID.'
          type: string
          format: int64
        id:
          description: |-
            Unique identifier for this chat.
            [FROM] Member / Channel ID.

            // [TO] Group. Conversation ID.
             string chat_id = 2;
          type: string
        invite:
          description: 'OPTIONAL. Invite[d] BY member info.'
          $ref: '#/components/schemas/webitel.chat.Chat.Invite'
        join:
          description: |-
            OPTIONAL. A non-zero value indicates that
            the participant has joined the chat.
          type: string
          format: int64
        left:
          type: string
          format: int64
          title: |-
            OPTIONAL. A non-zero value indicates that
            the participant has left the chat. OFFLINE(!)
        peer:
          description: '[FROM]: User identity. Seed.'
          $ref: '#/components/schemas/webitel.chat.Peer'
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: OPTIONAL. Last dialog queue
        title:
          description: '[TO]: Chat title.'
          type: string
        via:
          description: '[FROM] VIA text gateway profile.'
          $ref: '#/components/schemas/webitel.chat.Peer'
    webitel.chat.Chat.Invite:
      type: object
      properties:
        date:
          type: string
          format: int64
          title: Timestamp when the invitation to join the chat was sent
        from:
          type: string
          title: Chat member ID who invited to join the chat
    webitel.chat.ChatCustomers:
      type: object
      properties:
        next:
          type: boolean
          title: Next page is available ?
        page:
          description: Page number of results.
          type: integer
          format: int32
        peers:
          description: Dataset page of Customer(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Customer'
            type: object
        vias:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
          title: 'List of unique text gateways, mentioned in peers. [VIA]'
      title: ChatCustomers dataset
    webitel.chat.ChatDialogs:
      type: object
      properties:
        data:
          description: Dataset page of Dialog(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Dialog'
            type: object
        next:
          type: boolean
          title: Next page available ?
        page:
          description: Page number of results.
          type: integer
          format: int32
      title: ChatDialogs dataset
    webitel.chat.ChatMembers:
      type: object
      properties:
        data:
          description: Page of the chat participants.
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
        next:
          type: boolean
          title: Next page available ?
        page:
          description: Page number of results.
          type: integer
          format: int32
      title: ChatMembers dataset
    webitel.chat.ChatMessage:
      description: Chat Message.
      type: object
      properties:
        chat:
          description: Conversation the message belongs to ..
          $ref: '#/components/schemas/webitel.chat.ContactChat'
        context:
          description: Context. Variables. Environment.
          type: object
          additionalProperties:
            type: string
        date:
          description: Timestamp when this message was sent (published).
          type: string
          format: int64
        edit:
          description: Timestamp when this message was last edited.
          type: string
          format: int64
        file:
          description: Message Media. Attachment.
          $ref: '#/components/schemas/webitel.chat.MessageFile'
        from:
          description: Sender of the message.
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
        id:
          description: Unique message identifier inside this chat.
          type: string
          format: int64
        keyboard:
          description: Keyboard. Buttons. Quick Replies.
          $ref: '#/components/schemas/webitel.chat.MessageReplyMarkup'
        postback:
          description: 'Postback. Reply Button Click[ed].'
          $ref: '#/components/schemas/webitel.chat.MessagePostback'
        sender:
          description: 'Chat Sender of the message, sent on behalf of a chat (member).'
          $ref: '#/components/schemas/webitel.chat.ContactChat'
        text:
          description: Message Text.
          type: string
    webitel.chat.ChatMessages:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
          title: 'List of chats mentioned in messages. [FROM]'
        messages:
          description: Dataset page of messages.
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Message'
            type: object
        next:
          type: boolean
          title: Next page is available ?
        page:
          description: Dataset page number.
          type: integer
          format: int32
        peers:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
          title: 'List of peers mentioned in messages. [FROM]'
      title: ChatMessages dataset
    webitel.chat.ChatMessagesRequest.Offset:
      type: object
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          type: string
          format: int64
        id:
          type: string
          format: int64
          title: Messages ONLY starting from the specified message ID
      title: Offset options
    webitel.chat.ChatPeer:
      description: Peer contact.
      type: object
      properties:
        id:
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          type: string
        name:
          description: Contact display **name**.
          type: string
        type:
          description: Contact **type** provider.
          type: string
    webitel.chat.ContactChat:
      description: |-
        The Chat info.
        Alias: participant, subscriber, member, peer, leg.
      type: object
      properties:
        context:
          description: Context. Variables.
          type: object
          additionalProperties:
            type: string
        dc:
          description: '[D]omain[C]omponent primary ID.'
          type: string
          format: int64
        id:
          description: |-
            Unique identifier for this chat.
            [FROM] Member / Channel ID.

            // [TO] Group. Conversation ID.
             string chat_id = 2;
          type: string
        invite:
          description: 'OPTIONAL. Invite[d] BY member info.'
          $ref: '#/components/schemas/webitel.chat.ContactChat.Invite'
        join:
          description: |-
            OPTIONAL. A non-zero value indicates that
            the participant has joined the chat.
          type: string
          format: int64
        left:
          type: string
          format: int64
          title: |-
            OPTIONAL. A non-zero value indicates that
            the participant has left the chat. OFFLINE(!)
        peer:
          description: '[FROM]: User identity. Seed.'
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
        title:
          description: '[TO]: Chat title.'
          type: string
        via:
          description: '[FROM] VIA text gateway profile.'
          $ref: '#/components/schemas/webitel.chat.ChatPeer'
    webitel.chat.ContactChat.Invite:
      type: object
      properties:
        date:
          type: string
          format: int64
          title: Timestamp when the invitation to join the chat was sent
        from:
          type: string
          title: Chat member ID who invited to join the chat
    webitel.chat.Customer:
      description: Customer is external chat contact.
      type: object
      properties:
        id:
          description: |-
            Customer unique **ID**entifier.
            Account **type**-specific string.
          type: string
        name:
          description: Customer account **name**.
          type: string
        type:
          description: Customer account **type**.
          type: string
        via:
          description: '[VIA] Text gateway associations.'
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Peer'
            type: object
    webitel.chat.Dialog:
      description: Chat Dialog. Conversation info.
      type: object
      properties:
        closed:
          type: string
          format: int64
          title: |-
            Timestamp when dialog was closed.
            Zero value means - connected (online)
            Otherwise - disconnected (offline)
        closedCause:
          type: string
          title: Close reason if closed from the request sender perspective
        context:
          description: Context. Variables. Environment.
          type: object
          additionalProperties:
            type: string
        date:
          description: Timestamp of the latest activity.
          type: string
          format: int64
        dc:
          description: '[D]omain[C]omponent primary ID.'
          type: string
          format: int64
        from:
          description: |-
            [FROM]: Originator.
            Leg[A]. Contact / User.
          $ref: '#/components/schemas/webitel.chat.Peer'
        id:
          description: The Conversation thread unique ID.
          type: string
        members:
          description: |-
            [TO]: Participants.
            Leg[A+]. Schema / Agent.
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.Chat'
            type: object
        message:
          description: The latest (top) message.
          $ref: '#/components/schemas/webitel.chat.Message'
        queue:
          $ref: '#/components/schemas/webitel.chat.Peer'
          title: OPTIONAL. Last dialog queue
        started:
          description: Timestamp when dialog started.
          type: string
          format: int64
        title:
          description: Title of the dialog.
          type: string
        via:
          description: '[VIA] Text gateway [FROM] originated thru ...'
          $ref: '#/components/schemas/webitel.chat.Peer'
    webitel.chat.EmptyResponse:
      type: object
    webitel.chat.File:
      description: Media File.
      type: object
      properties:
        id:
          type: string
          title: File location
        name:
          type: string
          title: Filename
        size:
          type: string
          format: int64
          title: Size in bytes
        type:
          type: string
          title: MIME media type
        url:
          type: string
          title: File url (optional)
    webitel.chat.GetAgentChatsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.AgentChat'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
    webitel.chat.GetCaseChatHistoryRequest.Offset:
      type: object
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          type: string
          format: int64
        id:
          type: string
          format: int64
          title: Messages ONLY starting from the specified message ID
      title: Offset options
    webitel.chat.GetContactChatHistoryRequest.Offset:
      type: object
      properties:
        date:
          description: Messages ONLY been sent before the specified epochtime(milli).
          type: string
          format: int64
        id:
          type: string
          format: int64
          title: Messages ONLY starting from the specified message ID
      title: Offset options
    webitel.chat.GetContactChatHistoryResponse:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.ContactChat'
            type: object
          title: 'List of chats mentioned in messages. [FROM]'
        messages:
          description: Dataset page of messages.
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.ChatMessage'
            type: object
        next:
          type: boolean
          title: Next page is available ?
        page:
          description: Dataset page number.
          type: integer
          format: int32
        peers:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.ChatPeer'
            type: object
          title: 'List of peers mentioned in messages. [FROM]'
      title: ChatMessages dataset
    webitel.chat.InputButton:
      type: object
      properties:
        caption:
          type: string
        code:
          type: string
        text:
          type: string
        type:
          type: string
        url:
          type: string
    webitel.chat.InputButtonRow:
      type: object
      properties:
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.InputButton'
            type: object
    webitel.chat.InputFile:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
    webitel.chat.InputKeyboard:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.InputButtonRow'
            type: object
    webitel.chat.InputMessage:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/webitel.chat.InputFile'
        keyboard:
          $ref: '#/components/schemas/webitel.chat.InputKeyboard'
        text:
          type: string
    webitel.chat.InputPeer:
      description: InputPeer identity.
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        via:
          type: string
    webitel.chat.LinkContactToClientNAResponse:
      type: object
    webitel.chat.Lookup:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    webitel.chat.MarkChatProcessedResponse:
      type: object
    webitel.chat.Message:
      description: Chat Message.
      type: object
      properties:
        chat:
          description: Conversation the message belongs to ..
          $ref: '#/components/schemas/webitel.chat.Chat'
        context:
          description: Context. Variables. Environment.
          type: object
          additionalProperties:
            type: string
        date:
          description: Timestamp when this message was sent (published).
          type: string
          format: int64
        edit:
          description: Timestamp when this message was last edited.
          type: string
          format: int64
        file:
          description: Message Media. Attachment.
          $ref: '#/components/schemas/webitel.chat.File'
        from:
          description: Sender of the message.
          $ref: '#/components/schemas/webitel.chat.Peer'
        id:
          description: Unique message identifier inside this chat.
          type: string
          format: int64
        keyboard:
          description: Keyboard. Buttons. Quick Replies.
          $ref: '#/components/schemas/webitel.chat.ReplyMarkup'
        postback:
          description: 'Postback. Reply Button Click[ed].'
          $ref: '#/components/schemas/webitel.chat.Postback'
        sender:
          description: 'Chat Sender of the message, sent on behalf of a chat (member).'
          $ref: '#/components/schemas/webitel.chat.Chat'
        text:
          description: Message Text.
          type: string
    webitel.chat.MessageButton:
      type: object
      properties:
        code:
          description: Postback/Callback data.
          type: string
        share:
          description: Request to share contact info.
          $ref: '#/components/schemas/webitel.chat.MessageButton.Request'
        text:
          description: Caption to display.
          type: string
        url:
          description: URL to navigate to ..
          type: string
    webitel.chat.MessageButton.Request:
      description: |-
        - phone: Phone Number
         - email: Email Address
         - contact: General Form
         - location: Current Location
      type: string
      default: phone
      enum:
        - phone
        - email
        - contact
        - location
      title: Type of request to share contact info
    webitel.chat.MessageButtonRow:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.MessageButton'
            type: object
          title: Button(s) in a row
    webitel.chat.MessageFile:
      description: Media File.
      type: object
      properties:
        id:
          type: string
          title: File location
        name:
          type: string
          title: Filename
        size:
          type: string
          format: int64
          title: Size in bytes
        type:
          type: string
          title: MIME media type
        url:
          type: string
          title: Exact url of file (if exists)
    webitel.chat.MessagePostback:
      description: 'Postback. Reply Button Click[ed].'
      type: object
      properties:
        code:
          description: Data associated with the Button.
          type: string
        mid:
          description: Message ID of the button.
          type: string
          format: int64
        text:
          description: Button's display caption.
          type: string
    webitel.chat.MessageReplyMarkup:
      type: object
      properties:
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.MessageButtonRow'
            type: object
          title: Markup of button(s)
        noInput:
          description: |-
            An option used to block input to force
            the user to respond with one of the buttons.
          type: boolean
    webitel.chat.Peer:
      description: Peer contact.
      type: object
      properties:
        id:
          description: |-
            Contact unique **ID**entifier.
            Contact **type**-specific string.
          type: string
        name:
          description: Contact display **name**.
          type: string
        type:
          description: Contact **type** provider.
          type: string
    webitel.chat.Postback:
      description: 'Postback. Reply Button Click[ed].'
      type: object
      properties:
        code:
          description: Data associated with the Button.
          type: string
        mid:
          description: Message ID of the button.
          type: string
          format: int64
        text:
          description: Button's display caption.
          type: string
    webitel.chat.ReplyMarkup:
      type: object
      properties:
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/webitel.chat.ButtonRow'
            type: object
          title: Markup of button(s)
        noInput:
          description: |-
            An option used to block input to force
            the user to respond with one of the buttons.
          type: boolean
    webitel.chat.Timerange:
      description: Timerange filter value.
      type: object
      properties:
        since:
          description: |-
            Since epochtime (milli).
            **Match**: greater than ..
          type: string
          format: int64
        until:
          description: |-
            Until epochtime (milli).
            **Match**: less or equal ..
          type: string
          format: int64
    webitel.contacts.AccessMode:
      type: string
      default: READ
      enum:
        - READ
        - WRITE
        - DELETE
      title: |-
        - READ: Can `fetch` record. [GET]
         - WRITE: Can `update` record. [PUT|PATCH]
         - DELETE: Can `delete` record. [DELETE]
    webitel.contacts.AddContactsToGroupRequest:
      description: Request message for adding contacts to a group.
      type: object
      properties:
        contactIds:
          description: List of contact IDs to add to the group.
          type: array
          items:
            format: int64
            type: string
        groupIds:
          description: The unique ID of the group.
          type: array
          items:
            format: int64
            type: string
    webitel.contacts.Attachment:
      type: object
      properties:
        id:
          type: string
          format: int64
        mime:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        url:
          type: string
    webitel.contacts.CallEvent:
      type: object
      properties:
        closedAt:
          type: string
          format: int64
        duration:
          type: string
          format: int64
        files:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.CallFile'
            type: object
        flowScheme:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        gateway:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          type: string
        isDetailed:
          type: boolean
        isInbound:
          type: boolean
        isMissed:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
        queue:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        totalDuration:
          type: string
          format: int64
        transcripts:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.TranscriptLookup'
            type: object
    webitel.contacts.CallFile:
      type: object
      properties:
        id:
          type: string
          format: int64
        mimeType:
          type: string
        name:
          type: string
        size:
          type: string
          format: int64
        startAt:
          type: string
          format: int64
        stopAt:
          type: string
          format: int64
    webitel.contacts.ChatEvent:
      type: object
      properties:
        closedAt:
          type: string
          format: int64
        duration:
          type: string
          format: int64
        flowScheme:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        gateway:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          type: string
        isDetailed:
          type: boolean
        isInbound:
          type: boolean
        isMissed:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
        queue:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
    webitel.contacts.Comment:
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        format:
          description: Styles of the text components.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment.Format'
            type: object
        id:
          description: The unique ID of the Comment. Never changes.
          type: string
        text:
          description: 'Rich Text, multi-line[d] string value.'
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
      example:
        created_at: '1680268507698'
        created_by:
          id: '34'
          name: John Doe
        etag: FqaTCDLbhpaoUreL
        id: '354'
        text: This is a new note about the contact's recent activity. So ...
        updated_at: '1680268507698'
        updated_by:
          id: '34'
          name: John Doe
      title: |-
        The Contact's internal Comment.
        Output purpose only
    webitel.contacts.Comment.Format:
      type: object
      properties:
        bold:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Bold'
        codeblock:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Codeblock'
        italic:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Italic'
        length:
          description: Length text runes count.
          type: integer
          format: int32
        link:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Link'
        monospace:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Monospace'
        offset:
          description: Offset text runes count.
          type: integer
          format: int32
        strikethrough:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Strikethrough'
        underline:
          $ref: '#/components/schemas/webitel.contacts.Comment.Format.Underline'
    webitel.contacts.Comment.Format.Bold:
      type: object
    webitel.contacts.Comment.Format.Codeblock:
      type: object
      properties:
        language:
          type: string
    webitel.contacts.Comment.Format.Italic:
      type: object
    webitel.contacts.Comment.Format.Link:
      type: object
      properties:
        url:
          type: string
          title: 'REQUIRED. If text[offset:length] is a regular plaintext, NOT an URL itself !'
    webitel.contacts.Comment.Format.Monospace:
      type: object
    webitel.contacts.Comment.Format.Strikethrough:
      type: object
    webitel.contacts.Comment.Format.Underline:
      type: object
    webitel.contacts.CommentList:
      description: Comment dataset.
      type: object
      properties:
        data:
          description: Comment dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
      example:
        data:
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '354'
            text: This is a new note about the contact's recent activity. So ...
            updated_at: '1680516785357'
            updated_by:
              id: '34'
              name: John Doe
          - created_at: '1680268537698'
            created_by:
              id: '56'
              name: Bruce Wayne
            etag: FZiTxVgr41VPFxyu
            id: '357'
            text: This contact may become a customer in a few days
            updated_at: '1680268563357'
            updated_by:
              name: Jane Lee (deleted)
            ver: '4'
        next: true
        page: 1
    webitel.contacts.Condition:
      type: object
      properties:
        assignee:
          description: The ID of the assignee that should be assigned if the condition is met (optional).
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        createdAt:
          description: The timestamp (in milliseconds) of when the condition was created.
          type: string
          format: int64
        createdBy:
          description: The user who created this condition.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          description: The ID of the static group that should be assigned if the condition is met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          description: The unique ID of the condition.
          type: string
          format: int64
        updatedAt:
          description: The timestamp (in milliseconds) of the last update.
          type: string
          format: int64
        updatedBy:
          description: The user who performed the last update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      title: Condition
    webitel.contacts.ConditionList:
      description: A list of Conditions.
      type: object
      properties:
        items:
          description: List of conditions.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Condition'
            type: object
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.Contact:
      description: |-
        The Contact principal source.
        OUTPUT purpose only.
      type: object
      properties:
        about:
          description: |-
            BIO. Short description about the Contact person.
            OPTIONAL. Multi-lined text.
          type: string
        comments:
          description: The Contact's internal comment(s).
          $ref: '#/components/schemas/webitel.contacts.CommentList'
        createdAt:
          type: string
          format: int64
          title: unix
        createdBy:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user
        custom:
          description: Custom extension data fields.
          type: object
        domain:
          description: READONLY. The contact's metadata.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        emails:
          description: The Contact's email address(es).
          $ref: '#/components/schemas/webitel.contacts.EmailList'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        groups:
          description: The Contact's associated group(s).
          $ref: '#/components/schemas/webitel.contacts.ContactGroupList'
        id:
          description: The unique ID of the association. Never changes.
          type: string
        imclients:
          description: 'The contact''s [I]nstant[M]essaging clients.'
          $ref: '#/components/schemas/webitel.contacts.IMClientList'
        labels:
          description: The Contact's associated tag(s).
          $ref: '#/components/schemas/webitel.contacts.LabelList'
        languages:
          description: A Contact's locale preference(s).
          $ref: '#/components/schemas/webitel.contacts.LanguageList'
        managers:
          description: The Contact's internal manager(s).
          $ref: '#/components/schemas/webitel.contacts.ManagerList'
        mode:
          description: '[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'
          type: string
        name:
          description: |-
            The Contact's name.
            This field is a singleton for Contact sources.
          $ref: '#/components/schemas/webitel.contacts.Name'
        phones:
          description: The Contact's phone numbers.
          $ref: '#/components/schemas/webitel.contacts.PhoneList'
        photos:
          description: Output only. The Contact's photo(s).
          $ref: '#/components/schemas/webitel.contacts.PhotoList'
          readOnly: true
        timezones:
          description: The Contact's timezone preference(s).
          $ref: '#/components/schemas/webitel.contacts.TimezoneList'
        updatedAt:
          type: string
          format: int64
          title: unix
        updatedBy:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user
        user:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: user connected to the contact
        variables:
          description: |-
            Arbitrary client data that is populated by clients.
            Duplicate keys and values are allowed.
          $ref: '#/components/schemas/webitel.contacts.VariableList'
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.ContactGroup:
      description: The Contact's Group association.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        group:
          description: Group of contacts associated.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          description: The unique ID of the association. Never changes.
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.ContactGroupList:
      description: |-
        Contact groups dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactGroupList.data are always subordinate to some contact.id.
      type: object
      properties:
        data:
          description: Group dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.ContactGroup'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.ContactList:
      description: Contact dataset.
      type: object
      properties:
        data:
          description: Contact(s) dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Contact'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.CreateDynamicGroupRequest:
      description: Request message for creating a new dynamic group.
      type: object
      properties:
        condition:
          description: Input details for the dynamic group.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputDynamicCondition'
            type: object
        defaultGroup:
          description: Default static group to assign if no conditions are met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the dynamic group: active/inactive.'
          type: boolean
        name:
          description: The name of the dynamic group.
          type: string
      required:
        - name
    webitel.contacts.CreateGroupRequest:
      description: Request message for creating a new group.
      type: object
      properties:
        description:
          description: The description of the group.
          type: string
        enabled:
          description: The enabled status of the group.
          type: boolean
        name:
          description: The name of the group.
          type: string
      required:
        - name
    webitel.contacts.DayTimeline:
      type: object
      properties:
        callsCount:
          type: string
          format: int64
        chatsCount:
          type: string
          format: int64
        dayTimestamp:
          type: string
          format: int64
        emailsCount:
          type: string
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Event'
            type: object
    webitel.contacts.DynamicCondition:
      type: object
      properties:
        assignee:
          description: The ID of the assignee that should be assigned if the condition is met (optional).
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          description: The ID of the static group that should be assigned if the condition is met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          description: The unique ID of the condition.
          type: string
          format: int64
      title: Dynamic Group condition
    webitel.contacts.DynamicConditions.CreateConditionBody:
      description: Request message for creating a new condition.
      type: object
      properties:
        assignee:
          description: The ID of the assignee that should be assigned if the condition is met (optional).
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          description: The ID of the static group that should be assigned if the condition is met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
    webitel.contacts.DynamicGroup:
      type: object
      properties:
        conditions:
          description: List of dynamic conditions associated with the group.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicCondition'
            type: object
        createdAt:
          description: Timestamp(milli) of the group's creation.
          type: string
          format: int64
        createdBy:
          description: The user who created this dynamic group.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        defaultGroup:
          description: Default static group to be assigned if no conditions are met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the group: active or inactive.'
          type: boolean
        id:
          description: The unique ID of the dynamic group. Never changes.
          type: string
          format: int64
        name:
          description: The name of the dynamic group.
          type: string
        updatedAt:
          description: Timestamp(milli) of the last group update.
          type: string
          format: int64
        updatedBy:
          description: The user who performed the last update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      title: Dynamic Group
    webitel.contacts.DynamicGroupInput:
      description: Input message for creating/updating a dynamic group.
      type: object
      properties:
        defaultGroup:
          description: Default static group to assign if no conditions are met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        description:
          description: The description of the dynamic group.
          type: string
        enabled:
          description: 'Enabled status of the dynamic group: active/inactive.'
          type: boolean
        name:
          description: The name of the dynamic group.
          type: string
    webitel.contacts.DynamicGroupList:
      description: A list of Dynamic Groups.
      type: object
      properties:
        items:
          description: List of dynamic groups.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
            type: object
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.EmailAddress:
      description: The Contact's email address.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        email:
          description: The email address.
          type: string
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: Indicates whether this phone number is default within other channels of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the email address.
            Lookup value from CommunicationType dictionary.
            The type can be custom or one of these predefined values:
            - home
            - work
            - other
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
        verified:
          type: boolean
          title: |-
            Indicate whether Contact, as a Person, realy owns this associated phone number.
            In other words: whether Contact is reachable thru this 'email' communication channel ?
    webitel.contacts.EmailEvent:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Attachment'
            type: object
        body:
          type: string
          title: plain text of email
        cc:
          type: array
          items:
            type: string
          title: array of ccs (email addresses)
        from:
          type: array
          items:
            type: string
          title: array of senders (email addresses)
        html:
          type: string
          title: html body of email
        id:
          type: string
        isDetailed:
          type: boolean
          title: reserved for the open
        isInbound:
          type: boolean
          title: inbound/outbound email
        owner:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: Agent who sent/accepted
        profile:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: email profile
        sender:
          type: array
          items:
            type: string
          title: array of receivers (email addresses)
        subject:
          type: string
        to:
          type: array
          items:
            type: string
          title: array of receivers (email addresses)
    webitel.contacts.EmailList:
      description: Email dataset.
      type: object
      properties:
        data:
          description: EmailAddress dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.EmailAddress'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.EmptyResponse:
      type: object
    webitel.contacts.Event:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/webitel.contacts.CallEvent'
        chat:
          $ref: '#/components/schemas/webitel.contacts.ChatEvent'
        createdAt:
          type: string
          format: int64
        email:
          $ref: '#/components/schemas/webitel.contacts.EmailEvent'
        type:
          $ref: '#/components/schemas/webitel.contacts.TimelineEventType'
    webitel.contacts.GetTimelineCounterResponse:
      type: object
      properties:
        callsCount:
          type: string
          format: int64
        chatsCount:
          type: string
          format: int64
          title: defined event types
        dateFrom:
          type: string
          format: int64
          title: filter dates
        dateTo:
          type: string
          format: int64
        emailsCount:
          type: string
          format: int64
    webitel.contacts.GetTimelineResponse:
      type: object
      properties:
        days:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.DayTimeline'
            type: object
        next:
          type: boolean
        page:
          type: string
          format: int64
    webitel.contacts.Group:
      type: object
      properties:
        conditions:
          description: List of dynamic conditions associated with the group.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.DynamicCondition'
            type: object
        contactsSize:
          type: string
          format: int64
        createdAt:
          description: Timestamp(milli) of the group's creation.
          type: string
          format: int64
        createdBy:
          description: The user who created this group.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        defaultGroup:
          description: Default static group to be assigned if no conditions are met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        description:
          description: The description of the group.
          type: string
        enabled:
          type: boolean
        id:
          description: The unique ID of the group. Never changes.
          type: string
        name:
          description: The name of the group.
          type: string
        type:
          $ref: '#/components/schemas/webitel.contacts.GroupType'
          title: type ( Dynamic / Static )
        updatedAt:
          description: Timestamp(milli) of the last group update.
          type: string
          format: int64
        updatedBy:
          description: The user who performed the last update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      title: Group of Contacts
    webitel.contacts.GroupList:
      description: A list of Groups.
      type: object
      properties:
        items:
          description: List of groups.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Group'
            type: object
        next:
          description: Have more records.
          type: boolean
        page:
          description: Page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.GroupType:
      description: |-
        - GROUP_TYPE_UNSPECIFIED: Default value
         - STATIC: Static group
         - DYNAMIC: Dynamic group
      type: string
      default: GROUP_TYPE_UNSPECIFIED
      enum:
        - GROUP_TYPE_UNSPECIFIED
        - STATIC
        - DYNAMIC
      title: Enum for Group Type
    webitel.contacts.IMClient:
      description: 'A contact''s [I]nstant[M]essaging client.'
      type: object
      properties:
        app:
          description: |-
            App (Text-Gateway) used to connect the IM client.
            Id will be internal id of gateway.
            Name will be name of the gateway.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        protocol:
          description: Protocol used to connect the IM client.
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        user:
          description: |-
            External user which contacted to us.
            Id will be from external service.
            Name will be from external service.
          example:
            id: '596417343'
            name: John Doe
            type: telegram
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
        via:
          description: '[Via] App(-specific) peer(-id) to connect[from] the IM client.'
          type: string
    webitel.contacts.IMClientList:
      type: object
      properties:
        data:
          description: IMClient dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.IMClient'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.InputComment:
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        format:
          description: NEW Text components styling format.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Comment.Format'
            type: object
        text:
          description: NEW Text of the comment.
          type: string
      example:
        text: This is a new note about the contact's recent activity. So ...
      required:
        - text
    webitel.contacts.InputCondition:
      description: Input message for creating/updating a condition.
      type: object
      properties:
        assignee:
          description: The ID of the assignee that should be assigned if the condition is met (optional).
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          description: The ID of the static group that should be assigned if the condition is met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        position:
          description: The position of the condition in the group.
          $ref: '#/components/schemas/webitel.contacts.Position'
    webitel.contacts.InputContact:
      description: The Contact principal input.
      type: object
      properties:
        about:
          description: |-
            BIO. Short description about the Contact person.
            OPTIONAL. Multi-lined text.
          type: string
        comments:
          description: Publish NEW comment(s) for this Contact.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputComment'
            type: object
        custom:
          description: Custom extension data fields.
          type: object
        emails:
          description: The Contact's email address(es).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputEmailAddress'
            type: object
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        groups:
          description: The Contact's associated group(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputContactGroup'
            type: object
        imclients:
          description: 'The contact''s [I]nstant[M]essaging clients.'
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputIMClient'
            type: object
        labels:
          description: The Contact's associated label(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputLabel'
            type: object
        languages:
          description: A Contact's locale preference(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputLanguage'
            type: object
        managers:
          description: The Contact's internal manager(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputManager'
            type: object
        name:
          $ref: '#/components/schemas/webitel.contacts.InputName'
          title: The Contact's name. Singleton
        phones:
          description: The Contact's phone numbers.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputPhoneNumber'
            type: object
        photos:
          description: Output only. The Contact's photo(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputPhoto'
            type: object
          readOnly: true
        timezones:
          description: The Contact's timezone preference(s).
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputTimezone'
            type: object
        variables:
          description: Arbitrary client data that is populated by clients.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.InputVariable'
            type: object
    webitel.contacts.InputContactGroup:
      description: An input of the Contact's groups.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        group:
          description: Group of contacts associated.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      required:
        - etag
    webitel.contacts.InputDynamicCondition:
      type: object
      properties:
        assignee:
          description: The ID of the assignee that should be assigned if the condition is met (optional).
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        expression:
          description: The query or condition expression used to evaluate the group.
          type: string
        group:
          description: The ID of the static group that should be assigned if the condition is met.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      title: Dynamic Group condition
    webitel.contacts.InputEmailAddress:
      description: Input of the Contact's email address.
      type: object
      properties:
        email:
          description: The email address.
          type: string
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        primary:
          description: Indicates whether this phone number is default within other channels of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the email address.
            Lookup value from CommunicationType dictionary.
            The type can be custom or one of these predefined values:
            - home
            - work
            - other
        verified:
          type: boolean
          title: |-
            Indicate whether Contact, as a Person, realy owns this associated phone number.
            In other words: whether Contact is reachable thru this 'email' communication channel ?
      example:
        email: user@domain
        etag: '1679792219687'
        primary: true
        type:
          name: personal
        verified: false
      required:
        - email
    webitel.contacts.InputGroup:
      type: object
      properties:
        description:
          description: The new description of the group.
          type: string
        enabled:
          description: The new enabled status of the group.
          type: boolean
        name:
          description: The new name of the group.
          type: string
      title: Input message for creating/updating a group
    webitel.contacts.InputIMClient:
      description: Input of the contact IM client.
      type: object
      properties:
        createdBy:
          description: Id of Agent created this IM client.
          type: string
        externalUser:
          type: string
          title: External user id
        gatewayId:
          description: App (Text-Gateway) used to connect the IM client.
          type: string
        protocol:
          type: string
        via:
          description: '[Via] App(-specific) peer(-id) to connect[from] the IM client.'
          type: string
    webitel.contacts.InputLabel:
      description: |-
        A Contact's associated Tag.
        Output purpose only.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        label:
          description: |-
            REQUIRED. Hashtag value;
            NOTE: Keep in mind, hashtags are not case-sensitive,
            but adding capital letters does make them easier to read:
            #MakeAWish vs. #makeawish.
          type: string
      required:
        - tag
    webitel.contacts.InputLanguage:
      description: An input of the Contact's language.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing association.
          type: string
        primary:
          description: |-
            Indicates whether this association must be default
            among others of the same type.
          type: boolean
        tag:
          type: string
          title: |-
            NEW, well-formed IETF BCP 47 language tag representing the locale.
            https://www.rfc-editor.org/info/bcp47
      example:
        primary: false
        tag: uk
      required:
        - etag
    webitel.contacts.InputManager:
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        primary:
          description: Indicates whether this association must be default among others.
          type: boolean
        user:
          description: Responsible User.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      example:
        primary: true
        user:
          id: '357'
          name: Bruce Wayne
      required:
        - etag
    webitel.contacts.InputName:
      type: object
      properties:
        commonName:
          description: |-
            REQUIRED. End-User's full name in displayable form
            including all name parts, possibly including titles and suffixes,
            ordered according to the End-User's locale and preferences.
          type: string
        familyName:
          type: string
          title: |-
            OPTIONAL. Surname(s) or last name(s) of the End-User.
            Note that in some cultures, people can have multiple family names or no family name;
            all can be present, with the names being separated by space characters.
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name
        givenName:
          type: string
          title: |-
            OPTIONAL. Given name(s) or first name(s) of the End-User.
            Note that in some cultures, people can have multiple given names;
            all can be present, with the names being separated by space characters.
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name
        middleName:
          description: |-
            OPTIONAL. Middle name(s) of the End-User.
            Note that in some cultures, people can have multiple middle names;
            all can be present, with the names being separated by space characters.
            Also note that in some cultures, middle names are not used.
          type: string
        verified:
          description: 'Indicate whether Contact, as a Person, realy owns this associated name.'
          type: boolean
    webitel.contacts.InputPhoneNumber:
      description: Input of the contact phone number.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        number:
          description: The phone number.
          type: string
        primary:
          description: Indicates whether this phone number is default within other channels of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the phone number.
            Reference on CommunicationType dictionary.
            Used for outbound routing while dialup a phone number.
            The type can be custom or one of these predefined values:
            - home
            - work
            - mobile
            - homeFax
            - workFax
            - otherFax
            - pager
            - workMobile
            - workPager
            - main
            - googleVoice
            - other
        verified:
          type: boolean
          title: |-
            Indicate whether Contact, as a Person, realy owns this associated phone number.
            In other words: whether Contact is reachable thru this 'phone' communication channel ?
      required:
        - number
    webitel.contacts.InputPhoto:
      description: Input of the photo.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing association.
          type: string
        photoId:
          type: string
          format: int64
          title: File unique ID within 'storage' service
        photoUrl:
          type: string
          title: |-
            The URL of the photo.
            You can change the desired size by appending
            a query parameter sz={size} at the end of the url,
            where {size} is the size in pixels.
            Example: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50
        primary:
          description: True if the photo is a default photo; false if the photo is a user-provided photo.
          type: boolean
      required:
        - fileUrl
    webitel.contacts.InputTimezone:
      description: An input of the Contact's timezones.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        primary:
          description: Indicates whether this association must be default among others.
          type: boolean
        timezone:
          description: Timezone dictionary reference value associated.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
      required:
        - etag
    webitel.contacts.InputVariable:
      description: Input of the Contact's variable.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        key:
          description: NEW Key.
          type: string
          pattern: ^\w+$
        value:
          description: NEW Value.
      example:
        key: var_rename
        value:
          - string_item
          - - 3
            - 7
          - false
          - null
      required:
        - key
    webitel.contacts.Label:
      description: |-
        A Contact's associated Tag.
        Output purpose only.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        label:
          description: |-
            REQUIRED. Tag value;
            NOTE: Keep in mind, hashtags are not case-sensitive,
            but adding capital letters does make them easier to read:
            #MakeAWish vs. #makeawish.
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.LabelInfo:
      type: object
      properties:
        label:
          description: |-
            Label tag.

            Count of sources.
            int32 count = 2;
             Sources of Contacts assigned.
            repeated string sources = 3;
          type: string
      title: LabelInfo about the Label's tag
    webitel.contacts.LabelList:
      description: |-
        LabelList dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactLabels.data are always subordinate to some contact.id.
      type: object
      properties:
        data:
          description: Label(s) dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Label'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: Page number of partial result.
          type: integer
          format: int32
    webitel.contacts.LabelTags:
      description: LabelTags dataset list of label's info.
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.LabelInfo'
            type: object
          title: Labels info dataset
        next:
          type: boolean
          title: Next page available ?
        page:
          description: Page number of partial result.
          type: integer
          format: int32
        sources:
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Lookup'
            type: object
          title: Contact sources dataset
    webitel.contacts.Language:
      description: |-
        A Contact's locale preference.
        Output purpose only.
      type: object
      properties:
        code:
          type: string
          title: uk              ; golang.org/x/text/language.MustParse(s).Base()
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        lang:
          type: string
          title: Ukrainian       ; golang.org/x/text/language/display.English.Languages().Name(tag)
        name:
          type: string
          title: українська      ; golang.org/x/text/language/display.Self().Name(tag)
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        region:
          type: string
          title: UA              ; golang.org/x/text/language.MustParse(s).Region()
        script:
          type: string
          title: Cyrl; (Cyrillic); golang.org/x/text/language.MustParse(s).Script()
        tag:
          type: string
          title: |-
            The well-formed IETF BCP 47 language tag representing the locale.
            https://www.rfc-editor.org/info/bcp47
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.LanguageList:
      description: |-
        LabelsData
        NOTE: Edge represents connection between two nodes.
        So this ContactLabels.data are always subordinate to some contact.id.
      type: object
      properties:
        data:
          description: Page of the Contact's Language(s) dataset.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Language'
            type: object
        next:
          type: boolean
          title: |-
            Next indicate whether there are more result records(page+) available.
            If set - next page is available with query ?size=$(data.length)&page=$(page++)
        page:
          description: Page number of partial result dataset records.
          type: integer
          format: int32
      example:
        data:
          - code: uk
            created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '7'
            lang: Ukrainian
            name: українська
            primary: true
            region: UA
            script: Cyrl
            tag: uk-UA
            updated_at: '1680516785357'
            updated_by:
              name: Jane Lee (deleted)
            ver: '3'
        next: true
        page: 1
    webitel.contacts.LocateConditionResponse:
      description: Response message for locating a condition by ID.
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/webitel.contacts.Condition'
    webitel.contacts.LocateDynamicGroupResponse:
      description: Response message for locating a dynamic group by ID.
      type: object
      properties:
        group:
          $ref: '#/components/schemas/webitel.contacts.DynamicGroup'
    webitel.contacts.LocateGroupResponse:
      description: Response message for locating a group.
      type: object
      properties:
        group:
          description: The located group.
          $ref: '#/components/schemas/webitel.contacts.Group'
    webitel.contacts.Lookup:
      description: |-
        Lookup reference information.
        Simplified search filter to uniquely identify related object.
      type: object
      properties:
        id:
          description: Reference Object unique ID.
          type: string
        name:
          description: Reference Object display name.
          type: string
        type:
          description: Reference Object well-known type.
          type: string
    webitel.contacts.Manager:
      description: Manager. The Contact's responsible User.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        user:
          description: Responsible User.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.ManagerList:
      description: Manager dataset.
      type: object
      properties:
        data:
          description: Manager dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Manager'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.Name:
      description: |-
        A contact's name.
        If the name is a mononym, the family name is empty.

        Inspired:
        https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
        https://developers.google.com/people/api/rest/v1/people#name
      type: object
      properties:
        commonName:
          description: |-
            REQUIRED. End-User's full name in displayable form
            including all name parts, possibly including titles and suffixes,
            ordered according to the End-User's locale and preferences.
          type: string
        familyName:
          type: string
          title: |-
            OPTIONAL. Surname(s) or last name(s) of the End-User.
            Note that in some cultures, people can have multiple family names or no family name;
            all can be present, with the names being separated by space characters.
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name
        givenName:
          type: string
          title: |-
            OPTIONAL. Given name(s) or first name(s) of the End-User.
            Note that in some cultures, people can have multiple given names;
            all can be present, with the names being separated by space characters.
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name
        middleName:
          description: |-
            OPTIONAL. Middle name(s) of the End-User.
            Note that in some cultures, people can have multiple middle names;
            all can be present, with the names being separated by space characters.
            Also note that in some cultures, middle names are not used.
          type: string
        verified:
          description: 'Indicate whether Contact, as a Person, realy owns this associated name.'
          type: boolean
    webitel.contacts.PhoneList:
      description: PhoneNumber dataset.
      type: object
      properties:
        data:
          description: PhoneNumber dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.PhoneNumber'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.PhoneNumber:
      description: The Contact's phone number.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        number:
          description: The phone number.
          type: string
        primary:
          description: Indicates whether this phone number is default within other channels of the same type(phone).
          type: boolean
        type:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
          title: |-
            The type of the phone number.
            Reference on CommunicationType dictionary.
            Used for outbound routing while dialup a phone number.
            The type can be custom or one of these predefined values:
            - home
            - work
            - mobile
            - homeFax
            - workFax
            - otherFax
            - pager
            - workMobile
            - workPager
            - main
            - googleVoice
            - other
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
        verified:
          type: boolean
          title: |-
            Indicate whether Contact, as a Person, realy owns this associated phone number.
            In other words: whether Contact is reachable thru this 'phone' communication channel ?
    webitel.contacts.Photo:
      description: |-
        A contact's photo.
        A picture shown next to the contact's name
        to help others recognize the contact.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        photoId:
          type: string
          format: int64
          title: File unique ID within 'storage' service
        photoUrl:
          type: string
          title: |-
            The URL of the photo.
            You can change the desired size by appending
            a query parameter sz={size} at the end of the url,
            where {size} is the size in pixels.
            Example: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50
        primary:
          description: True if the photo is a default photo; false if the photo is a user-provided photo.
          type: boolean
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.PhotoList:
      description: Photo dataset.
      type: object
      properties:
        data:
          description: Photo dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Photo'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.Position:
      description: Position details for conditions in the group.
      type: object
      properties:
        condDown:
          type: string
          format: int64
          title: |-
            The target position where the condition should be moved.
            if we set last (n) index position -- set only cond_down -- cond_up should be ZERO
        condUp:
          type: string
          format: int64
          title: |-
            The current position of the condition in the list.
            if we set zero (0) index position -- set only cond_up -- cond_down should be ZERO
    webitel.contacts.TimelineEventType:
      type: string
      default: chat
      enum:
        - chat
        - call
        - email
    webitel.contacts.Timezone:
      description: A Contact's timezone preference.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        primary:
          description: |-
            Indicates whether this association is the default
            among others of the same type.
          type: boolean
        timezone:
          description: Timezone dictionary reference value associated.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.contacts.TimezoneList:
      description: |-
        Timezone dataset.
        NOTE: Edge represents connection between two nodes.
        So this ContactTimezones.data are always subordinate to some contact.id.
      type: object
      properties:
        data:
          description: Timezone dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Timezone'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.contacts.TranscriptLookup:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        id:
          type: string
          format: int64
        locale:
          type: string
    webitel.contacts.Variable:
      description: |-
        The Contact's variable.
        Arbitrary data that is populated by users or clients.
        Duplicate keys and values are allowed.
      type: object
      properties:
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        key:
          description: Key name of the variable.
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.contacts.Lookup'
        value:
          description: JSON value of the variable.
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
      example:
        created_at: '1680268507698'
        created_by:
          id: '34'
          name: John Doe
        etag: FqaTCDLbhpaoUreL
        id: '6'
        key: var_complex
        updated_at: '1680516785357'
        updated_by:
          name: Ja Lee (deleted)
        value:
          inner_var: null
          value_arr:
            - string
            - - null
            - false
            - 1
        ver: '2'
    webitel.contacts.VariableList:
      description: Variable dataset.
      type: object
      properties:
        data:
          description: Variable dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.contacts.Variable'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
      example:
        data:
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: FqaTCDLbhpaoUreL
            id: '4'
            key: my_string
            updated_at: '1680268507698'
            updated_by:
              id: '34'
              name: John Doe
            value: string_value
          - created_at: '1680268507698'
            created_by:
              id: '34'
              name: John Doe
            etag: ogTsuZAIA1CcEZGC
            id: '6'
            key: var_complex
            updated_at: '1680516785357'
            updated_by:
              name: Ja Lee (deleted)
            value:
              inner_var: null
              value_arr:
                - string
                - - null
                - false
                - 1
            ver: '2'
        next: true
        page: 1
    webitel.knowledgebase.Article:
      type: object
      properties:
        tags:
          description: Tags associated with the article.
          type: array
          items:
            type: string
        createdAt:
          description: The user who created this Field.
          type: string
          format: int64
        createdBy:
          description: Timestamp(milli) of the Field creation.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        hasChildren:
          description: Indicates that the article has children.
          type: boolean
        id:
          description: The unique ID of the association. Never changes.
          type: string
        parentArticle:
          description: The parent article ID.
          type: string
          format: int64
        pinned:
          description: Indicates that the article is pinned on the top of list.
          type: boolean
        spaceId:
          description: Space ID associated with.
          type: string
          format: int64
        state:
          description: Indicates the state of the article.
          type: boolean
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
        updatedAt:
          description: |-
            Timestamp(milli) of the last Field update.
            Take part in Etag generation.
          type: string
          format: int64
        updatedBy:
          description: The user who performed last Update.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.knowledgebase.ArticleList:
      description: |-
        Article dataset.
        NOTE: Edge represents connection between two nodes.
        So this spaceArticles.data are always subordinate to some space.id.
      type: object
      properties:
        data:
          description: Article dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Article'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.knowledgebase.ArticleVersion:
      type: object
      properties:
        tags:
          description: Tags associated with the article.
          type: array
          items:
            type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        parentArticle:
          description: The parent article ID.
          type: string
          format: int64
        spaceId:
          description: Space ID associated with.
          type: string
          format: int64
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
        updatedAt:
          description: Timestamp(milli) of the last Field update.
          type: string
          format: int64
        updatedBy:
          description: The user who loaded this attachment.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        ver:
          description: Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.knowledgebase.ArticleVersionList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.ArticleVersion'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.knowledgebase.Attachment:
      type: object
      properties:
        id:
          description: The unique ID of the association. Never changes.
          type: string
        size:
          description: The size of the attachment.
          type: integer
          format: int32
        title:
          description: The title of the article.
          type: string
        uploadedBy:
          description: The user who loaded this attachment.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
    webitel.knowledgebase.AttachmentList:
      type: object
      properties:
        data:
          description: Attachment dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Attachment'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.knowledgebase.Combined:
      type: object
      properties:
        id:
          type: string
          title: Id of the record (article or space)
        name:
          type: string
          title: Display name of the record (article or space)
        type:
          type: string
          title: 'Type of the record: article/space'
    webitel.knowledgebase.CombinedList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Combined'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.knowledgebase.InputArticle:
      description: An input of the Space's Articles.
      type: object
      properties:
        tags:
          description: Tags associated with the article.
          type: array
          items:
            type: string
        etag:
          description: Unique ID of the latest version of an existing resource.
          type: string
        parentArticle:
          description: The parent article ID.
          type: string
          format: int64
        pinned:
          description: Indicates that the article is pinned on the top of list.
          type: boolean
        spaceId:
          description: |-
            [VALUE]: --------------------------------------
            Space ID associated with.
          type: string
          format: int64
        state:
          description: Indicates if article is active and actual.
          type: boolean
        text:
          description: The text content of the article.
          type: string
        title:
          description: The title of the article.
          type: string
      required:
        - etag
    webitel.knowledgebase.InputSpace:
      description: The Space principal input.
      type: object
      properties:
        etag:
          description: Unique ID of the latest version of an existing resorce.
          type: string
        homePage:
          description: |-
            BIO. Short description about the space.
            OPTIONAL. Multi-lined text.
          type: string
        name:
          description: Represents the name of the knowledge base space.
          type: string
        state:
          description: The state of the space.
          type: boolean
    webitel.knowledgebase.Lookup:
      description: |-
        Lookup reference information.
        Simplified search filter to uniquely identify related object.
      type: object
      properties:
        id:
          description: Reference Object unique ID.
          type: string
        name:
          description: Reference Object display name.
          type: string
        type:
          description: Reference Object well-known type.
          type: string
    webitel.knowledgebase.Space:
      type: object
      properties:
        createdAt:
          description: The timestamp when the space was created (in Unix time).
          type: string
          format: int64
        createdBy:
          description: The user who created the space.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        domain:
          description: READONLY. The space's metadata.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        etag:
          description: |-
            Unique ID of the latest version of the update.
            This ID changes after any update to the underlying value(s).
          type: string
        hasChildren:
          description: Indicates if the space has children.
          type: boolean
        homePage:
          description: BIO. Short description about the space.
          type: string
        id:
          description: The unique ID of the association. Never changes.
          type: string
        mode:
          description: '[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'
          type: string
        name:
          description: The name of the space.
          type: string
        state:
          description: The state of the space.
          type: boolean
        updatedAt:
          description: The timestamp when the space was last updated (in Unix time).
          type: string
          format: int64
        updatedBy:
          description: The user who last updated the space.
          $ref: '#/components/schemas/webitel.knowledgebase.Lookup'
        ver:
          description: |-
            READONLY. Operational attributes
            Version of the latest update. Numeric sequence.
          type: integer
          format: int32
    webitel.knowledgebase.SpaceList:
      type: object
      properties:
        data:
          description: Space(s) dataset page.
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Space'
            type: object
        next:
          type: boolean
          title: |-
            Indicates that this is a partial result.
            More data available upon query: ?size=${data.len}&page=${page++}
        page:
          description: The page number of the partial result.
          type: integer
          format: int32
    webitel.knowledgebase.Tag:
      type: object
      properties:
        name:
          description: The name of the tag.
          type: string
    webitel.knowledgebase.TagsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/webitel.knowledgebase.Tag'
            type: object
        next:
          type: boolean
        page:
          type: integer
          format: int32
    webitel.proto.data.Dataset:
      description: Dataset records page view.
      type: object
      properties:
        data:
          description: List of the dataset page records.
          type: array
          items:
            type: object
        next:
          type: boolean
          title: Next page available?
        page:
          description: Current page number.
          type: integer
          format: int32
        type:
          description: Type of the dataset record.
          $ref: '#/components/schemas/webitel.proto.data.Struct'
    webitel.proto.data.Field:
      description: Field of the struct.
      type: object
      properties:
        always:
          description: |-
            Always signifies that the field value will be computed on any write (INSERT OR UPDATE) operations.
            The field cannot be written to, and when read the result of the last generated expression will be returned.

            The generation expression can refer to other columns in the table, but not other generated columns. Any functions and operators used must be immutable. References to other tables are not allowed.
          title: '[ ON INSERT OR UPDATE ]'
        binary:
          $ref: '#/components/schemas/webitel.proto.data.type.Binary'
        bool:
          $ref: '#/components/schemas/webitel.proto.data.type.Bool'
        datetime:
          $ref: '#/components/schemas/webitel.proto.data.type.Datetime'
        default:
          description: |-
            The `default` expression will be used in `INSERT` operation
            that does not specify a value for the field.

            If there is no default for a field, then the default is null.
          title: '[ ON INSERT ONLY ]'
        disabled:
          type: boolean
          title: Optional. Disable data read operation. (selection)
        duration:
          $ref: '#/components/schemas/webitel.proto.data.type.Duration'
        float:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        float32:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        float64:
          $ref: '#/components/schemas/webitel.proto.data.type.Float'
        hidden:
          type: boolean
          title: |-
            Is hidden (system) field ?
            Do NOT display on the `view` card ?
        hint:
          description: 'Short description. Default: {name}.'
          type: string
        id:
          description: |-
            Field [code] name.

            code
          type: string
        int:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        int32:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        int64:
          $ref: '#/components/schemas/webitel.proto.data.type.Int'
        kind:
          description: Required. The field type.
          $ref: '#/components/schemas/webitel.proto.data.type.Kind'
        lookup:
          $ref: '#/components/schemas/webitel.proto.data.type.Lookup'
        name:
          description: |-
            Title of the field. Lang specific.

            title
          type: string
        readonly:
          description: |-
            Optional. Disable any write (INSERT OR UPDATE) operations.
            READONLY signifies that the field value will be always computed on any write (INSERT OR UPDATE) operations.
            If selected, the `default` value MUST be specified.

            FIXME: Is base field ? [ id, created_, updated_ ]
          type: boolean
        required:
          type: boolean
          title: optionalDoNotAllowNullValues
        richtext:
          $ref: '#/components/schemas/webitel.proto.data.type.Text'
        string:
          $ref: '#/components/schemas/webitel.proto.data.type.Text'
        uint:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
        uint32:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
        uint64:
          $ref: '#/components/schemas/webitel.proto.data.type.Uint'
    webitel.proto.data.ImportCSVRequest.action:
      type: string
      default: continue
      enum:
        - continue
        - break
    webitel.proto.data.Index:
      description: 'INDEX [struct.fields].'
      type: object
      properties:
        fields:
          description: 'A set of [struct.fields.id] to INDEX within [type] dataset.'
          type: array
          items:
            type: string
        include:
          description: 'A set of [struct.fields.id] to INCLUDE beside the [fields] index.'
          type: array
          items:
            type: string
        unique:
          description: 'Indicates whether set of [fields] MUST be UNIQUE within [type].'
          type: boolean
    webitel.proto.data.InputDictionary:
      type: object
      properties:
        about:
          type: string
          title: Short description
        administered:
          type: boolean
          title: Administer access control ? Enable RbAC ?
        display:
          description: |-
            Required. Display [fields.id] key.
            Used as [lookup].name setting for this [struct] type.
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
          title: Fields definitions
        indexes:
          description: INDEX fields.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
        name:
          description: 'A User-friendly [type.id] name ; lang: specific.'
          type: string
        primary:
          description: |-
            Required. Primary [fields.id] key.
            Used as [lookup].id setting for this [struct] type.
          type: string
        repo:
          description: |-
            string id = 1; // The [type] name (singular form), e.g.: `country`.

            Repository (dataset) name (plural form), e.g.: `countries`.
          type: string
      example:
        about: Dataset of countries we are working with ..
        display: name
        fields:
          - hint: +3(80)
            id: code
            int32:
              max: '9999'
              min: '10'
            kind: int32
            name: Code
          - hint: Country name
            id: name
            kind: string
            name: Country
            string:
              max: 64
          - id: capital
            kind: lookup
            lookup:
              id: name
              name: name
              type: dictionaries/cities
            name: Capital city
          - datetime:
              part: full
              time: s
            default: $(timestamp)
            id: created_at
            kind: datetime
            name: Creation Date
            readonly: true
          - default: $(user)
            id: created_by
            kind: lookup
            lookup:
              id: id
              name: name
              type: users
            name: Author
            readonly: true
          - always: $(timestamp)
            datetime:
              part: full
              time: s
            id: updated_at
            kind: datetime
            name: Last Modified
            readonly: true
          - always: $(user)
            id: updated_by
            kind: lookup
            lookup:
              type: users
            name: Editor
            readonly: true
        indexes:
          capital_city:
            fields:
              - capital
            unique: true
          code:
            unique: true
        name: Countries
        primary: code
        repo: countries
    webitel.proto.data.InputExtension:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
          title: Fields definitions
        indices:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
          title: INDEX Fields
      example:
        fields:
          - id: country
            kind: lookup
            lookup:
              id: code
              name: name
              type: /dictionaries/countries
            name: Country
          - id: city
            kind: lookup
            lookup:
              id: id
              name: name
              type: '/dictionaries/cities?code={country.code}'
            name: City
        indexes:
          city: {}
          country: {}
    webitel.proto.data.LookupValue:
      type: object
      properties:
        id:
          description: Required. Unique Identifier.
          type: string
        name:
          description: Readonly. Display name.
          type: string
        type:
          description: Optional. Reference type.
          type: string
    webitel.proto.data.Struct:
      description: |-
        Type of the Structure.

        int64 dc = 0;
      type: object
      properties:
        about:
          description: Optional. Short description.
          type: string
        administered:
          type: boolean
          title: Administer access control ? Enable RbAC ?
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/webitel.proto.data.LookupValue'
        display:
          description: |-
            Required. Display [fields.id] key.
            Used as [lookup].name setting for this [struct] type.
          type: string
        extendable:
          description: |-
            // Extension fields type.
             Extension extension = 23;
          type: boolean
          title: Readonly. System- type(s) support only !
        fields:
          description: Fields of the struct type.
          type: array
          items:
            $ref: '#/components/schemas/webitel.proto.data.Field'
            type: object
        id:
          description: 'Deprecated. Use `repo` instead. The [type] name (singular form), e.g.: `country`.'
          type: string
        indexes:
          description: |-
            INDEX fields.

            Extension extension = 15;
          type: object
          additionalProperties:
            $ref: '#/components/schemas/webitel.proto.data.Index'
        name:
          description: 'A User-friendly [id] name ; lang: specific.'
          type: string
        objclass:
          description: Readonly. RbAC objclass identity.
          type: string
        path:
          description: 'Readonly. Relative path to access the dataset APIs, e.g.: `dictionaries/countries`.'
          type: string
        primary:
          description: |-
            Required. Primary [fields.id] key.
            Used as [lookup].id setting for this [struct] type.
          type: string
        readonly:
          type: boolean
          title: |-
            Readonly. Is [ system / custom ] type ?
            NOTE: Custom [types.repo] are always prefixed with `/dictionaries`
        repo:
          description: 'Repository (dataset) name (plural form), e.g.: `countries`.'
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/webitel.proto.data.LookupValue'
    webitel.proto.data.StructList:
      description: Dataset of structured types.
      type: object
      properties:
        data:
          description: List of `Struct` types.
          type: array
          items:
            $ref: '#/components/schemas/webitel.proto.data.Struct'
            type: object
        next:
          type: boolean
          title: Next page available ?
        page:
          description: Page number of results.
          type: integer
          format: int32
    webitel.proto.data.type.Binary:
      type: object
      properties:
        maxBytes:
          type: integer
          format: int64
        violation:
          type: object
          additionalProperties:
            type: string
    webitel.proto.data.type.Bool:
      type: object
      title: no constraints
    webitel.proto.data.type.Datetime:
      description: |-
        Datetime type settings.

        enum Part {
           full = 0; // date & time
           date = 1; // date only ; YYYY-MM-DD
           time = 2; // time only ; HH:mm:ss[.pres]
         }
         Part part = 1; // part of: [ date &| time ]
         enum Stamp {
           s  =  0; // seconds
           ms =  1; // [milli]seconds ; E+3
           mc =  2; // [micro]seconds ; E+6
           ns =  3; // [nano]seconds  ; E+9
           m  = -1; // minutes
           h  = -2; // hours
         }
         Stamp time = 2; // time precision
         string zone = 3; // ??? [ Europe/Kyiv | +03:00 ]
      type: object
      properties:
        epoch:
          description: |-
            Epoch timestamp.
            If zero - UNIX epoch (1970-01-01 00:00:00) will be used.
          type: number
          format: double
        format:
          type: string
          title: |-
            Display format.
            See [layouts](https://pkg.go.dev/time#pkg-constants) for details.
            Default: `Mon, 02 Jan 2006 15:04:05 -0700`; [time.RFC1123Z]
        zone:
          description: |-
            Timezone associated.
            Default: `UTC`.
          type: string
    webitel.proto.data.type.Duration:
      type: object
      properties:
        format:
          type: string
          title: |-
            Display format.
            TODO: `hh:mm:ss.ms`
        max:
          type: string
          format: int64
        min:
          type: string
          format: int64
        violation:
          type: object
          additionalProperties:
            type: string
      title: Duration
    webitel.proto.data.type.Float:
      type: object
      properties:
        frac:
          type: integer
          format: int64
          title: fractional part precision
        max:
          type: number
          format: double
        min:
          type: number
          format: double
        violation:
          type: object
          additionalProperties:
            type: string
    webitel.proto.data.type.Int:
      type: object
      properties:
        max:
          type: string
          format: int64
        min:
          type: string
          format: int64
        violation:
          type: object
          additionalProperties:
            type: string
          title: |-
            DESIGN. Custom error(s) on spec. constraint violation.
            map < constraint, template > to produce [status.message].
            {
              "min": "country code {value} MUST contain at least 2 digits"
              "max": "country code {value} MAY contain at most 4 digits"
            }
    webitel.proto.data.type.Kind:
      description: |-
        Kind of primitive data types.

         - none: option allow_alias = true;
         - list: [array]
         - int: int32
         - uint: uint32
         - float: float32
         - datetime: date &| time
      type: string
      default: none
      enum:
        - none
        - list
        - bool
        - int
        - int32
        - int64
        - uint
        - uint32
        - uint64
        - float
        - float32
        - float64
        - binary
        - lookup
        - string
        - richtext
        - datetime
        - duration
    webitel.proto.data.type.Lookup:
      description: |-
        Lookup ( REFERENCE ) type descriptor.
        Simplified [webitel.custom.Struct] options.
      type: object
      properties:
        display:
          description: |-
            [Readonly]. Display dataset field.
            (lookup).{`name`} value relation.
          type: string
        name:
          description: '[Readonly]. Dataset title.'
          type: string
        path:
          description: |-
            [Required]. Reference dataset relative path
            e.g.: "contacts", "dictionaries/cities".
            (lookup).{`type`} value relation.
          type: string
        primary:
          description: |-
            [Readonly]. Primary dataset field.
            (lookup).{`id`} value relation.
          type: string
        query:
          type: object
          additionalProperties:
            type: string
          title: |-
            Optional. Query dataset filters ...
            map < filter, template >
        violation:
          type: object
          additionalProperties:
            type: string
          title: '[ "not_found", "too_much_records" ]'
    webitel.proto.data.type.Text:
      type: object
      properties:
        maxBytes:
          type: integer
          format: int64
        maxChars:
          type: integer
          format: int64
        multiline:
          type: boolean
        violation:
          type: object
          additionalProperties:
            type: string
          title: |-
            // accept format
             string accept_regex = 7;
             // equality strategy
             bool ignore_case = 8;
    webitel.proto.data.type.Uint:
      type: object
      properties:
        max:
          type: string
          format: uint64
        min:
          type: string
          format: uint64
        violation:
          type: object
          additionalProperties:
            type: string
    wfmAbsence:
      type: object
      properties:
        absentAt:
          type: string
          format: int64
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        typeId:
          $ref: '#/components/schemas/wfmAbsenceType'
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAbsenceType:
      type: string
      default: ABSENCE_TYPE_UNSPECIFIED
      enum:
        - ABSENCE_TYPE_UNSPECIFIED
        - ABSENCE_TYPE_DAYOFF
        - ABSENCE_TYPE_VACATION
        - ABSENCE_TYPE_SICKDAY
    wfmAgentAbsences:
      type: object
      properties:
        absences:
          type: array
          items:
            $ref: '#/components/schemas/wfmAbsence'
            type: object
        agent:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAgentSchedule:
      type: object
      properties:
        absence:
          $ref: '#/components/schemas/wfmAbsenceType'
        date:
          type: string
          format: int64
        locked:
          type: boolean
        shift:
          $ref: '#/components/schemas/wfmAgentScheduleShift'
    wfmAgentScheduleShift:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        domainId:
          type: string
          format: int64
        end:
          type: string
          format: int64
        id:
          type: string
          format: int64
        pauses:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentScheduleShiftPause'
            type: object
        skills:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentScheduleShiftSkill'
            type: object
        start:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAgentScheduleShiftPause:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/wfmLookupEntity'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        domainId:
          type: string
          format: int64
        end:
          type: string
          format: int64
        id:
          type: string
          format: int64
        start:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAgentScheduleShiftSkill:
      type: object
      properties:
        capacity:
          type: string
          format: int64
        enabled:
          type: boolean
        skill:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAgentWorkingConditions:
      type: object
      properties:
        pauseTemplate:
          $ref: '#/components/schemas/wfmLookupEntity'
        workingCondition:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmAgentWorkingSchedule:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/wfmLookupEntity'
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentSchedule'
            type: object
    wfmCreateAgentAbsenceResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
    wfmCreateAgentsAbsencesRequest:
      type: object
      properties:
        agentIds:
          type: array
          items:
            format: int64
            type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateAgentsAbsencesRequestabsentType'
            type: object
    wfmCreateAgentsAbsencesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentAbsences'
            type: object
    wfmCreateAgentsWorkingScheduleShiftsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentWorkingSchedule'
            type: object
    wfmCreateForecastCalculationRequest:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
    wfmCreateForecastCalculationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
    wfmCreatePauseTemplateRequest:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
    wfmCreatePauseTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
    wfmCreateShiftTemplateRequest:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
    wfmCreateShiftTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
    wfmCreateWorkingConditionRequest:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
    wfmCreateWorkingConditionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
    wfmCreateWorkingScheduleRequest:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
    wfmCreateWorkingScheduleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
    wfmDeleteAgentAbsenceResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmDeleteForecastCalculationResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmDeletePauseTemplateResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmDeleteShiftTemplateResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmDeleteWorkingConditionResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmDeleteWorkingScheduleResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmExecuteForecastCalculationResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmExecuteForecastCalculationResponseForecast'
            type: object
    wfmExecuteForecastCalculationResponseForecast:
      type: object
      properties:
        agents:
          type: string
          format: int64
        timestamp:
          type: string
          format: int64
    wfmFilterBetween:
      type: object
      properties:
        from:
          type: string
          format: int64
        to:
          type: string
          format: int64
    wfmForecastCalculation:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        procedure:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmHoliday:
      type: object
      properties:
        date:
          type: string
          format: int64
        name:
          type: string
    wfmLookupEntity:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    wfmPauseTemplate:
      type: object
      properties:
        causes:
          type: array
          items:
            $ref: '#/components/schemas/wfmPauseTemplateCause'
            type: object
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmPauseTemplateCause:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/wfmLookupEntity'
        duration:
          type: string
          format: int64
    wfmReadAgentAbsenceResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
    wfmReadAgentWorkingConditionsResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmAgentWorkingConditions'
    wfmReadForecastCalculationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
    wfmReadPauseTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
    wfmReadShiftTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
    wfmReadWorkingConditionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
    wfmReadWorkingScheduleForecastResponse:
      type: object
      properties:
        items:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/wfmWorkingScheduleForecast'
    wfmReadWorkingScheduleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
    wfmSearchAgentAbsenceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmAbsence'
            type: object
    wfmSearchAgentsAbsencesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentAbsences'
            type: object
        next:
          type: boolean
    wfmSearchAgentsWorkingScheduleResponse:
      type: object
      properties:
        holidays:
          type: array
          items:
            $ref: '#/components/schemas/wfmHoliday'
            type: object
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmAgentWorkingSchedule'
            type: object
        total:
          type: string
          format: int64
    wfmSearchForecastCalculationResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmForecastCalculation'
            type: object
        next:
          type: boolean
    wfmSearchPauseTemplateResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmPauseTemplate'
            type: object
        next:
          type: boolean
    wfmSearchShiftTemplateResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmShiftTemplate'
            type: object
        next:
          type: boolean
    wfmSearchWorkingConditionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmWorkingCondition'
            type: object
        next:
          type: boolean
    wfmSearchWorkingScheduleResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/wfmWorkingSchedule'
            type: object
        next:
          type: boolean
    wfmShiftTemplate:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        times:
          type: array
          items:
            $ref: '#/components/schemas/wfmShiftTemplateTime'
            type: object
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmShiftTemplateTime:
      type: object
      properties:
        end:
          type: integer
          format: int32
        start:
          type: integer
          format: int32
    wfmUpdateAgentAbsenceResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmAbsence'
    wfmUpdateAgentWorkingConditionsResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmAgentWorkingConditions'
    wfmUpdateForecastCalculationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmForecastCalculation'
    wfmUpdatePauseTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmPauseTemplate'
    wfmUpdateShiftTemplateResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmShiftTemplate'
    wfmUpdateWorkingConditionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingCondition'
    wfmUpdateWorkingScheduleAddAgentsResponse:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
    wfmUpdateWorkingScheduleRemoveAgentResponse:
      type: object
      properties:
        id:
          type: string
          format: int64
    wfmUpdateWorkingScheduleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/wfmWorkingSchedule'
    wfmWorkingCondition:
      type: object
      properties:
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        daysOff:
          type: integer
          format: int32
        description:
          type: string
        domainId:
          type: string
          format: int64
        id:
          type: string
          format: int64
        name:
          type: string
        pauseDuration:
          type: integer
          format: int32
        pauseTemplate:
          $ref: '#/components/schemas/wfmLookupEntity'
        shiftTemplate:
          $ref: '#/components/schemas/wfmLookupEntity'
        sickLeaves:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        vacation:
          type: integer
          format: int32
        workdayHours:
          type: integer
          format: int32
        workdaysPerMonth:
          type: integer
          format: int32
    wfmWorkingSchedule:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
        blockOutsideActivity:
          type: boolean
        calendar:
          $ref: '#/components/schemas/wfmLookupEntity'
        createdAt:
          type: string
          format: int64
        createdBy:
          $ref: '#/components/schemas/wfmLookupEntity'
        domainId:
          type: string
          format: int64
        endDateAt:
          type: string
          format: int64
        endTimeAt:
          type: string
          format: int64
        extraSkills:
          type: array
          items:
            $ref: '#/components/schemas/wfmLookupEntity'
            type: object
        id:
          type: string
          format: int64
        name:
          type: string
        startDateAt:
          type: string
          format: int64
        startTimeAt:
          type: string
          format: int64
        state:
          $ref: '#/components/schemas/wfmWorkingScheduleState'
        team:
          $ref: '#/components/schemas/wfmLookupEntity'
        totalAgents:
          type: string
          format: int64
        updatedAt:
          type: string
          format: int64
        updatedBy:
          $ref: '#/components/schemas/wfmLookupEntity'
    wfmWorkingScheduleForecast:
      type: object
      properties:
        forecast:
          type: array
          items:
            $ref: '#/components/schemas/wfmWorkingScheduleForecastForecast'
            type: object
    wfmWorkingScheduleForecastForecast:
      type: object
      properties:
        agents:
          type: string
          format: int64
        hour:
          type: string
          format: int64
    wfmWorkingScheduleState:
      type: string
      default: WORKING_SCHEDULE_STATE_UNSPECIFIED
      enum:
        - WORKING_SCHEDULE_STATE_UNSPECIFIED
        - WORKING_SCHEDULE_STATE_ACTIVE
        - WORKING_SCHEDULE_STATE_PENDING
        - WORKING_SCHEDULE_STATE_DRAFT
        - WORKING_SCHEDULE_STATE_ARCHIVED
  requestBodies:
    ContactGroups_UpdateContactGroupInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              group:
                description: Group of contacts associated.
                $ref: '#/components/schemas/webitel.contacts.Lookup'
            title: NEW Update of the group link.
      description: NEW Update of the group link.
      required: true
    Devices_UpdateDeviceDevice:
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                description: username
                type: string
                title: credentials
              brand:
                description: vendor brand name
                type: string
                title: provision
              created_at:
                type: string
                format: int64
                title: unix
              created_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              deleted_at:
                type: string
                format: int64
                title: unix
              deleted_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              hotdesk:
                description: act as a hotdesk
                type: boolean
                title: 'Hotdesk: this workstation aliases'
              hotdesks:
                type: array
                items:
                  type: string
                title: associated aliases
              ip:
                type: string
              logged_in:
                type: string
                format: int64
                title: |-
                  caller profile
                   webitel.adt.caller caller = 4;
              mac:
                type: string
                title: static
              model:
                type: string
              name:
                description: display name
                type: string
                title: |-
                  kind of
                  DeviceType type = 19;
              password:
                type: string
                title: password
              provision:
                type: object
                additionalProperties:
                  type: string
                title: provision extra data
              reged:
                type: boolean
                title: |-
                  TODO: something like PresenceStatus instead of Registration
                   repeated Registration contacts = 16;
              updated_at:
                type: string
                format: int64
                title: unix
              updated_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              user:
                $ref: '#/components/schemas/api.UserId'
                title: '[optional] The user that ''owns'' the device;'
            title: Device profile
      description: Device profile
      required: true
    Dictionaries_UpdateData2Record:
      content:
        application/json:
          schema:
            type: object
      description: Record data fields changes.
      required: true
    Emails_UpdateEmailInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                description: The email address.
                type: string
              primary:
                description: Indicates whether this phone number is default within other channels of the same type(phone).
                type: boolean
              type:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                title: |-
                  The type of the email address.
                  Lookup value from CommunicationType dictionary.
                  The type can be custom or one of these predefined values:
                  - home
                  - work
                  - other
              verified:
                type: boolean
                title: |-
                  Indicate whether Contact, as a Person, realy owns this associated phone number.
                  In other words: whether Contact is reachable thru this 'email' communication channel ?
            example:
              email: user@domain
              etag: '1679792219687'
              primary: true
              type:
                name: personal
              verified: false
            required:
              - email
            title: NEW Update of the email address link.
      description: NEW Update of the email address link.
      required: true
    Managers_UpdateManagerInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              primary:
                description: Indicates whether this association must be default among others.
                type: boolean
              user:
                description: Responsible User.
                $ref: '#/components/schemas/webitel.contacts.Lookup'
            example:
              primary: true
              user:
                id: '357'
                name: Bruce Wayne
            title: NEW Update of the manager link.
      description: NEW Update of the manager link.
      required: true
    Phones_UpdatePhoneInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              number:
                description: The phone number.
                type: string
              primary:
                description: Indicates whether this phone number is default within other channels of the same type(phone).
                type: boolean
              type:
                $ref: '#/components/schemas/webitel.contacts.Lookup'
                title: |-
                  The type of the phone number.
                  Reference on CommunicationType dictionary.
                  Used for outbound routing while dialup a phone number.
                  The type can be custom or one of these predefined values:
                  - home
                  - work
                  - mobile
                  - homeFax
                  - workFax
                  - otherFax
                  - pager
                  - workMobile
                  - workPager
                  - main
                  - googleVoice
                  - other
              verified:
                type: boolean
                title: |-
                  Indicate whether Contact, as a Person, realy owns this associated phone number.
                  In other words: whether Contact is reachable thru this 'phone' communication channel ?
            required:
              - number
            title: NEW Update of the phone number details.
      description: NEW Update of the phone number details.
      required: true
    Timezones_UpdateTimezoneInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              primary:
                description: Indicates whether this association must be default among others.
                type: boolean
              timezone:
                description: Timezone dictionary reference value associated.
                $ref: '#/components/schemas/webitel.contacts.Lookup'
            title: NEW Update of the timezone link.
      description: NEW Update of the timezone link.
      required: true
    UpdateCaseInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              assignee:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default from service or set by UI;'
              close_reason:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required;'
              close_result:
                type: string
                title: 'create: not required; update: required only when case status goes to the final state'
              contact_info:
                type: string
                title: 'create: not required;'
              custom:
                description: Custom data extension fields ..
                type: object
              description:
                type: string
                title: 'create: not required;'
              group:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default from service or set by UI;'
              impacted:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: required, default is reporter or ui (if empty recognize as anonymous);'
              priority:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default first value from priority lookup'
              rating:
                type: string
                format: int64
              rating_comment:
                type: string
              reporter:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: required (if empty recognize as anonymous contact);'
              service:
                $ref: '#/components/schemas/general.Lookup'
                title: on this field base many other readonly fields on return
              source:
                $ref: '#/components/schemas/general.Lookup'
                title: source of the case
              status:
                $ref: '#/components/schemas/general.Lookup'
                title: 'create: not required, default initial value from status lookup or ui;'
              status_condition:
                $ref: '#/components/schemas/webitel.cases.StatusCondition'
              subject:
                type: string
                title: 'create: required;'
              userID:
                description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                $ref: '#/components/schemas/general.Lookup'
            title: Input data with updated fields.
      description: Input data with updated fields.
      required: true
    UpdateCommentInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              text:
                description: Content of the comment.
                type: string
              userID:
                description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                $ref: '#/components/schemas/general.Lookup'
            example:
              text: My new comment
            title: Data for the comment to update.
      description: Data for the comment to update.
      required: true
    UpdateLinkInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
              userID:
                description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                $ref: '#/components/schemas/general.Lookup'
      required: true
    UpdateRelatedCaseInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              primary_case:
                description: Primary case details.
                type: object
                properties:
                  name:
                    type: string
                title: Primary case details.
              related_case:
                description: Related case details.
                $ref: '#/components/schemas/general.Lookup'
              relation_type:
                description: Relation type.
                $ref: '#/components/schemas/webitel.cases.RelationType'
              userID:
                description: Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.
                $ref: '#/components/schemas/general.Lookup'
            title: Input data for the related case update.
      description: Input data for the related case update.
      required: true
    UserAccessTokens_UpdateUserAccessTokenUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              created_at:
                type: string
                format: int64
                title: 'unix::ms'
              created_by:
                $ref: '#/components/schemas/api.ObjectId'
              deleted_at:
                type: string
                format: int64
                title: '[optional] disabled at'
              deleted_by:
                $ref: '#/components/schemas/api.ObjectId'
                title: '[optional] disabled by'
              token:
                type: string
                title: 'tokenString::access_token'
              updated_at:
                type: string
                format: int64
                title: 'unix::ms'
              updated_by:
                $ref: '#/components/schemas/api.ObjectId'
              usage:
                type: string
                title: '[optional] short usage description'
              user:
                type: object
                properties:
                  name:
                    type: string
                    title: display name
                title: '[optional] output depends on API endpoint'
            title: '[required] identification + modifications(about)'
      description: '[required] identification + modifications(about)'
      required: true
    Users_UpdateUserUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              chat_name:
                description: |-
                  The "chat_name" field is used to store the name displayed externally on the platform.
                  For example, "chat_name" is shown when an agent connects to chats with clients.
                type: string
              contact:
                description: '[optional] contact connected to this user'
                $ref: '#/components/schemas/api.ObjectId'
                title: |-
                  repeated Call calls = 13; // order by created_at
                  repeated Registration reged = 13; // order by register_last
              created_at:
                type: string
                format: int64
                title: unix
              created_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              deleted_at:
                type: string
                format: int64
                title: unix
              deleted_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              device:
                $ref: '#/components/schemas/api.ObjectId'
                title: '[optional] default device assigned ? WebRTC register ?'
              devices:
                description: '[editable] list of unique `regular` devices, attached to this user'
                type: array
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: 'map<int64, string> devices = 13;'
              email:
                type: string
              extension:
                type: string
                title: 'Caller-ID-Number:'
              hotdesks:
                type: array
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: '[readonly] list of unique `hotdesk` devices, assigned to this user'
              license:
                type: array
                items:
                  $ref: '#/components/schemas/api.LicenseUser'
                  type: object
                title: 'list of unique licenses, granted to this user'
              name:
                type: string
                title: 'Caller-ID-Name: Display Name'
              password:
                type: string
              permissions:
                type: array
                items:
                  $ref: '#/components/schemas/api.Permission'
                  type: object
                title: set of operational permission grants
              presence:
                description: |-
                  string presence = 7; // unique set of <user> presentity <status:basic> tuples open[ed]
                   string status = 8; // short display status (short description)
                $ref: '#/components/schemas/api.UserPresence'
                title: |-
                  CallerId caller = 5; // extension
                  PresenceStatus presence = 8;
              profile:
                type: object
                additionalProperties:
                  type: string
                title: 'list of variables, assigned to this user as an environment unit'
              roles:
                type: array
                items:
                  $ref: '#/components/schemas/api.ObjectId'
                  type: object
                title: 'roles, member of which is this user'
              totp_url:
                type: string
                title: '[readonly][optional] one time password if setting (2fa) is enabled'
              updated_at:
                type: string
                format: int64
                title: unix
              updated_by:
                $ref: '#/components/schemas/api.UserId'
                title: user
              username:
                type: string
                title: alphanumeric username (login)
            title: 'body: modifications/changes'
      description: 'body: modifications/changes'
      required: true
    Variables_UpdateVariableInput:
      content:
        application/json:
          schema:
            type: object
            properties:
              key:
                description: NEW Key.
                type: string
                pattern: ^\w+$
              value:
                description: NEW Value.
            example:
              key: var_rename
              value:
                - string_item
                - - 3
                  - 7
                - false
                - null
            required:
              - key
            title: NEW Variable update.
      description: NEW Variable update.
      required: true
    api.Classes.UpdateClassBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Classes.UpdateClassBody'
      required: true
    api.Domains.UpdateDomainBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Domains.UpdateDomainBody'
      required: true
    api.LDAP.DeleteLDAPTemplateBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.DeleteLDAPTemplateBody'
      required: true
    api.LDAP.UpdateLDAPCatalogBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.UpdateLDAPCatalogBody'
      required: true
    api.LDAP.UpdateLDAPTemplateBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.LDAP.UpdateLDAPTemplateBody'
      required: true
    api.OAuth2Federation.UpdateOAuthServiceBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.OAuth2Federation.UpdateOAuthServiceBody'
      required: true
    api.Roles.UpdateRoleBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.Roles.UpdateRoleBody'
      required: true
    webitel.cases.InputCatalog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCatalog'
      description: Input data for updating the catalog
      required: true
    webitel.cases.InputCloseReason:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCloseReason'
      required: true
    webitel.cases.InputCloseReasonGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputCloseReasonGroup'
      required: true
    webitel.cases.InputPriority:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputPriority'
      required: true
    webitel.cases.InputSLA:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSLA'
      required: true
    webitel.cases.InputSLACondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSLACondition'
      required: true
    webitel.cases.InputService:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputService'
      description: Input data for updating the service
      required: true
    webitel.cases.InputSource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputSource'
      required: true
    webitel.cases.InputStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputStatus'
      required: true
    webitel.cases.InputStatusCondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.cases.InputStatusCondition'
      required: true
    webitel.contacts.DynamicGroupInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.DynamicGroupInput'
      description: Input details for the dynamic group.
      required: true
    webitel.contacts.InputCondition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.InputCondition'
      description: Input details for the condition.
      required: true
    webitel.contacts.InputGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webitel.contacts.InputGroup'
      required: true
  securitySchemes:
    AccessToken:
      in: header
      name: X-Webitel-Access
      type: apiKey
tags:
  - name: RoutingChatPlanService
  - name: RoutingOutboundCallService
  - name: RoutingSchemaService
  - name: RoutingVariableService
  - name: AgentService
  - name: SkillService
  - name: AgentSkillService
  - name: AgentTeamService
  - name: AuditFormService
  - name: BucketService
  - name: CalendarService
  - name: CallService
  - name: EmailProfileService
  - name: ListService
  - name: MemberService
  - name: OutboundResourceService
  - name: OutboundResourceGroupService
  - name: AgentPauseCauseService
  - name: PresetQueryService
  - name: PushService
  - name: QueueService
  - name: QueueBucketService
  - name: CommunicationTypeService
  - name: QueueHookService
  - name: QueueResourcesService
  - name: QueueSkillService
  - name: QuickRepliesService
  - name: RegionService
  - name: SchemaVariablesService
  - name: SchemaVersionService
  - name: SystemSettingService
  - name: TeamHookService
  - name: TeamTriggerService
  - name: TriggerService
  - name: UserHelperService
  - name: WebHookService
security:
  - AccessToken: []
