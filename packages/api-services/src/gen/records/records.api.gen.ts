/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	_DeleteParams,
	Create200,
	CreateBody,
	DataDataset,
	LocateRecords200,
	LocateRecordsParams,
	SearchRecordsParams,
	Update2Body,
	Update2Params,
	Update200,
	Update2200,
	UpdateBody,
	UpdateParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getRecords =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Delete dataset records
			 */
			const _delete = <TData = AxiosResponse<DataDataset>>(
				repo: string,
				params: _DeleteParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/v2/dataset/${repo}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Search dataset records
			 */
			const searchRecords = <TData = AxiosResponse<DataDataset>>(
				repo: string,
				params?: SearchRecordsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/v2/dataset/${repo}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Create dataset record
			 */
			const create = <TData = AxiosResponse<Create200>>(
				repo: string,
				createBody: CreateBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(`/v2/dataset/${repo}`, createBody, options);
			};
			/**
			 * (Record) {
			 * @summary Locate dataset record
			 */
			const locateRecords = <TData = AxiosResponse<LocateRecords200>>(
				repo: string,
				id: string,
				params?: LocateRecordsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/v2/dataset/${repo}/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Update dataset record
			 */
			const update = <TData = AxiosResponse<Update200>>(
				repo: string,
				id: string,
				updateBody: UpdateBody,
				params?: UpdateParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(`/v2/dataset/${repo}/${id}`, updateBody, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Update dataset record
			 */
			const update2 = <TData = AxiosResponse<Update2200>>(
				repo: string,
				id: string,
				update2Body: Update2Body,
				params?: Update2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(`/v2/dataset/${repo}/${id}`, update2Body, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return { _delete, searchRecords, create, locateRecords, update, update2 };
		};
export type _DeleteResult = AxiosResponse<DataDataset>;
export type SearchRecordsResult = AxiosResponse<DataDataset>;
export type CreateResult = AxiosResponse<Create200>;
export type LocateRecordsResult = AxiosResponse<LocateRecords200>;
export type UpdateResult = AxiosResponse<Update200>;
export type Update2Result = AxiosResponse<Update2200>;

// --- footer end
