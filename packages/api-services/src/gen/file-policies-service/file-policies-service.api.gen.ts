/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	FilePoliciesServiceSearchFilePoliciesParams,
	StorageCreateFilePolicyRequest,
	StorageFilePolicy,
	StorageFilePolicyApplyRequest,
	StorageFilePolicyApplyResponse,
	StorageListFilePolicies,
	StorageMovePositionFilePolicyRequest,
	StorageMovePositionFilePolicyResponse,
	StoragePatchFilePolicyRequest,
	StorageUpdateFilePolicyRequest,
} from '.././_models';

// --- header start
//

export const // --- title start
	getFilePoliciesService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of FilePolicy
			 */
			const filePoliciesServiceSearchFilePolicies = <
				TData = AxiosResponse<StorageListFilePolicies>,
			>(
				params?: FilePoliciesServiceSearchFilePoliciesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/storage/file_policies', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create FilePolicy
			 */
			const filePoliciesServiceCreateFilePolicy = <
				TData = AxiosResponse<StorageFilePolicy>,
			>(
				storageCreateFilePolicyRequest: StorageCreateFilePolicyRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/storage/file_policies',
					storageCreateFilePolicyRequest,
					options,
				);
			};
			const filePoliciesServiceMovePositionFilePolicy = <
				TData = AxiosResponse<StorageMovePositionFilePolicyResponse>,
			>(
				fromId: number,
				toId: number,
				storageMovePositionFilePolicyRequest: StorageMovePositionFilePolicyRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/storage/file_policies/${fromId}/to/${toId}`,
					storageMovePositionFilePolicyRequest,
					options,
				);
			};
			/**
			 * @summary Remove FilePolicy
			 */
			const filePoliciesServiceDeleteFilePolicy = <
				TData = AxiosResponse<StorageFilePolicy>,
			>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/storage/file_policies/${id}`, options);
			};
			/**
			 * @summary FilePolicy item
			 */
			const filePoliciesServiceReadFilePolicy = <
				TData = AxiosResponse<StorageFilePolicy>,
			>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/storage/file_policies/${id}`, options);
			};
			/**
			 * @summary Patch FilePolicy
			 */
			const filePoliciesServicePatchFilePolicy = <
				TData = AxiosResponse<StorageFilePolicy>,
			>(
				id: number,
				storagePatchFilePolicyRequest: StoragePatchFilePolicyRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/storage/file_policies/${id}`,
					storagePatchFilePolicyRequest,
					options,
				);
			};
			/**
			 * @summary Update FilePolicy
			 */
			const filePoliciesServiceUpdateFilePolicy = <
				TData = AxiosResponse<StorageFilePolicy>,
			>(
				id: number,
				storageUpdateFilePolicyRequest: StorageUpdateFilePolicyRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/storage/file_policies/${id}`,
					storageUpdateFilePolicyRequest,
					options,
				);
			};
			const filePoliciesServiceFilePolicyApply = <
				TData = AxiosResponse<StorageFilePolicyApplyResponse>,
			>(
				id: number,
				storageFilePolicyApplyRequest: StorageFilePolicyApplyRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/storage/file_policies/${id}/apply`,
					storageFilePolicyApplyRequest,
					options,
				);
			};

			// --- footer start
			return {
				filePoliciesServiceSearchFilePolicies,
				filePoliciesServiceCreateFilePolicy,
				filePoliciesServiceMovePositionFilePolicy,
				filePoliciesServiceDeleteFilePolicy,
				filePoliciesServiceReadFilePolicy,
				filePoliciesServicePatchFilePolicy,
				filePoliciesServiceUpdateFilePolicy,
				filePoliciesServiceFilePolicyApply,
			};
		};
export type FilePoliciesServiceSearchFilePoliciesResult =
	AxiosResponse<StorageListFilePolicies>;
export type FilePoliciesServiceCreateFilePolicyResult =
	AxiosResponse<StorageFilePolicy>;
export type FilePoliciesServiceMovePositionFilePolicyResult =
	AxiosResponse<StorageMovePositionFilePolicyResponse>;
export type FilePoliciesServiceDeleteFilePolicyResult =
	AxiosResponse<StorageFilePolicy>;
export type FilePoliciesServiceReadFilePolicyResult =
	AxiosResponse<StorageFilePolicy>;
export type FilePoliciesServicePatchFilePolicyResult =
	AxiosResponse<StorageFilePolicy>;
export type FilePoliciesServiceUpdateFilePolicyResult =
	AxiosResponse<StorageFilePolicy>;
export type FilePoliciesServiceFilePolicyApplyResult =
	AxiosResponse<StorageFilePolicyApplyResponse>;

// --- footer end
