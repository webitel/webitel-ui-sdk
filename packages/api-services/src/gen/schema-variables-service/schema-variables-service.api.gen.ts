/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	EngineCreateSchemaVariableRequest,
	EngineListSchemaVariable,
	EngineSchemaVariable,
	EngineSchemaVariablesServicePatchSchemaVariableBody,
	EngineSchemaVariablesServiceUpdateSchemaVariableBody,
	SearchSchemaVariableParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getSchemaVariablesService =
		// --- title end
		() => {
			// --- header end
			const searchSchemaVariable = <
				TData = AxiosResponse<EngineListSchemaVariable>,
			>(
				params?: SearchSchemaVariableParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/routing/schema/variables', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createSchemaVariable = <
				TData = AxiosResponse<EngineSchemaVariable>,
			>(
				engineCreateSchemaVariableRequest: EngineCreateSchemaVariableRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/routing/schema/variables',
					engineCreateSchemaVariableRequest,
					options,
				);
			};
			const deleteSchemaVariable = <
				TData = AxiosResponse<EngineSchemaVariable>,
			>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/routing/schema/variables/${id}`, options);
			};
			const readSchemaVariable = <TData = AxiosResponse<EngineSchemaVariable>>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/routing/schema/variables/${id}`, options);
			};
			const patchSchemaVariable = <TData = AxiosResponse<EngineSchemaVariable>>(
				id: number,
				engineSchemaVariablesServicePatchSchemaVariableBody: EngineSchemaVariablesServicePatchSchemaVariableBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/routing/schema/variables/${id}`,
					engineSchemaVariablesServicePatchSchemaVariableBody,
					options,
				);
			};
			const updateSchemaVariable = <
				TData = AxiosResponse<EngineSchemaVariable>,
			>(
				id: number,
				engineSchemaVariablesServiceUpdateSchemaVariableBody: EngineSchemaVariablesServiceUpdateSchemaVariableBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/routing/schema/variables/${id}`,
					engineSchemaVariablesServiceUpdateSchemaVariableBody,
					options,
				);
			};

			// --- footer start
			return {
				searchSchemaVariable,
				createSchemaVariable,
				deleteSchemaVariable,
				readSchemaVariable,
				patchSchemaVariable,
				updateSchemaVariable,
			};
		};
export type SearchSchemaVariableResult =
	AxiosResponse<EngineListSchemaVariable>;
export type CreateSchemaVariableResult = AxiosResponse<EngineSchemaVariable>;
export type DeleteSchemaVariableResult = AxiosResponse<EngineSchemaVariable>;
export type ReadSchemaVariableResult = AxiosResponse<EngineSchemaVariable>;
export type PatchSchemaVariableResult = AxiosResponse<EngineSchemaVariable>;
export type UpdateSchemaVariableResult = AxiosResponse<EngineSchemaVariable>;

// --- footer end
