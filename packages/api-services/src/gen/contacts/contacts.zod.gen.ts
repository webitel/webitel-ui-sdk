/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * | Field       | Type 
| ----------- | ---- 
| **----------- READ-ONLY -----------** | 
| `id`        | int64 
| `ver`       | int32 
| `etag`      | string 
| **---------- OPERATIONAL ----------** | 
| `created_at` | int64(epoch:milli) 
| `created_by` | lookup(user) 
| `updated_at` | int64(epoch:milli) 
| `updated_by` | lookup(user) 
| **---------- ATTRIBUTES -----------** | 
| `name`      | name! 
| `about`     | string 
| `labels`    | list[label!] 
| `emails`    | list[email!] 
| `photos`    | list[photo!] 
| `phones`    | list[phone!] 
| `managers`  | list[manager!] 
| `comments`  | list[comment!] 
| `addresses` | list[address!] 
| `languages` | list[language!] 
| `timezones` | list[timezone!] 
| `variables` | list[variable!] 
| `imclients` | list[imClient!] 

 * @summary Search for Contact(s)
 */
export const contactsSearchContactsQuerySortItemDefault = 'id';
export const contactsSearchContactsQuerySortItemRegExp = /^[+|-|!]?\w+$/;
export const contactsSearchContactsQueryFieldsItemDefault = '*';
export const contactsSearchContactsQueryModeDefault = 'READ';

export const contactsSearchContactsQueryParams = zod.object({
	page: zod
		.number()
		.optional()
		.describe(
			'Page number of result records.   _default(1); offset=(size*(page-1));_\n\n```javascript\nlet\n    offset = 0\n  , page = req.page\n;\nif (page <= 0)\n    page = 1;\nif (page > 1)\n    offset = ((page-1)*size);\n// . . .\n```',
		),
	size: zod
		.number()
		.optional()
		.describe(
			'Limit of result page records count.   _default(16); limit=(size<=0?-1:size+1);_\n\n```javascript\nconst\n    default = 16\n  , maximum = 32\n;\nlet limit = req.size;\nif (limit <= 0)\n    limit = default;\nif (maximum < limit)\n    limit = maximum;\n// . . .\n```',
		),
	q: zod
		.string()
		.optional()
		.describe(
			'Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\nUsed to query records within a set of `qin` fields, eg: name,emails{type},labels etc...',
		),
	sort: zod
		.array(zod.string().regex(contactsSearchContactsQuerySortItemRegExp))
		.optional()
		.describe(
			'Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = "-" / "!"\nASC    = [ "+" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.',
		),
	fields: zod
		.array(zod.string())
		.optional()
		.describe(
			'Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( "," field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= "{" fields "}"\nfuncs  ::= *( func )\nfunc   ::= "." name "(" [ args ] ")"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; "A"-"Z" / "a"-"z"\nDIGIT    = %x30-39            ; "0"-"9"\nUSCORE   = %x5F ; underscore  ; "_"\n```',
		),
	id: zod
		.array(zod.string())
		.optional()
		.describe('Records with unique IDentifier(s).\nAccept: `id` -or- `etag`.'),
	qin: zod
		.array(zod.string())
		.optional()
		.describe(
			'[Q]uery[IN] is a set of search fields for term `q`.\nDefault: `name{common_name}`.',
		),
	mode: zod
		.enum(['READ', 'WRITE', 'DELETE'])
		.default(contactsSearchContactsQueryModeDefault)
		.describe(
			'Source access mode requirement.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]',
		),
	notIdGroup: zod
		.string()
		.optional()
		.describe(
			'Excludes contacts that belong to the specified group ID.\n- Filters out contacts associated with the given `group_id`.',
		),
	group: zod
		.array(zod.string())
		.optional()
		.describe(
			'Filters contacts by the specified group(s).\n- Includes only contacts that belong to one or more of the given group Group(s).',
		),
	owner: zod
		.array(zod.string())
		.optional()
		.describe(
			'Filters contacts by the specified owner(s).\n- Includes only contacts whose owner matches one or more of the given Owner(s).\n- The owner ID corresponds to `contact_id` in the `directory.wbt_user` table.',
		),
	label: zod
		.array(zod.string())
		.optional()
		.describe(
			'Filters contacts by the specified label(s).\n- Includes only contacts that have one or more of the given Label(s).',
		),
	user: zod
		.boolean()
		.optional()
		.describe(
			'Filters contacts based on whether they are user-associated.\n- `true`  ‚Üí Includes only user-associated contacts.\n- `false` ‚Üí Includes only contacts that are NOT user-associated.\n- A contact is considered user-associated if it exists in `directory.wbt_user`.',
		),
});

export const contactsSearchContactsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						about: zod
							.string()
							.optional()
							.describe(
								'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
							),
						comments: zod
							.object({
								data: zod
									.array(
										zod.object({
											createdAt: zod
												.string()
												.optional()
												.describe('The user who created this Field.'),
											createdBy: zod
												.object({
													id: zod
														.string()
														.optional()
														.describe('Reference Object unique ID.'),
													name: zod
														.string()
														.optional()
														.describe('Reference Object display name.'),
													type: zod
														.string()
														.optional()
														.describe('Reference Object well-known type.'),
												})
												.optional()
												.describe(
													'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
												),
											etag: zod
												.string()
												.optional()
												.describe(
													'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
												),
											format: zod
												.array(
													zod.object({
														bold: zod.object({}).optional(),
														codeblock: zod
															.object({
																language: zod.string().optional(),
															})
															.optional(),
														italic: zod.object({}).optional(),
														length: zod
															.number()
															.optional()
															.describe('Length text runes count.'),
														link: zod
															.object({
																url: zod.string().optional(),
															})
															.optional(),
														monospace: zod.object({}).optional(),
														offset: zod
															.number()
															.optional()
															.describe('Offset text runes count.'),
														strikethrough: zod.object({}).optional(),
														underline: zod.object({}).optional(),
													}),
												)
												.optional()
												.describe('Styles of the text components.'),
											id: zod
												.string()
												.optional()
												.describe(
													'The unique ID of the Comment. Never changes.',
												),
											text: zod
												.string()
												.optional()
												.describe('Rich Text, multi-line[d] string value.'),
											updatedAt: zod
												.string()
												.optional()
												.describe(
													'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
												),
											updatedBy: zod
												.object({
													id: zod
														.string()
														.optional()
														.describe('Reference Object unique ID.'),
													name: zod
														.string()
														.optional()
														.describe('Reference Object display name.'),
													type: zod
														.string()
														.optional()
														.describe('Reference Object well-known type.'),
												})
												.optional()
												.describe(
													'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
												),
											ver: zod
												.number()
												.optional()
												.describe(
													'Version of the latest update. Numeric sequence.',
												),
										}),
									)
									.optional()
									.describe('Comment dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('Comment dataset.'),
						createdAt: zod.string().optional(),
						createdBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						custom: zod
							.object({})
							.optional()
							.describe('Custom extension data fields.'),
						domain: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						emails: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												email: zod
													.string()
													.optional()
													.describe('The email address.'),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'Indicates whether this phone number is default within other channels of the same type(phone).',
													),
												type: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
												verified: zod.boolean().optional(),
											})
											.describe("The Contact's email address."),
									)
									.optional()
									.describe('EmailAddress dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('Email dataset.'),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
							),
						groups: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												group: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe("The Contact's Group association."),
									)
									.optional()
									.describe('Group dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe(
								'Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.',
							),
						id: zod
							.string()
							.optional()
							.describe('The unique ID of the association. Never changes.'),
						imclients: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												app: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												protocol: zod
													.string()
													.optional()
													.describe('Protocol used to connect the IM client.'),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												user: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
												via: zod
													.string()
													.optional()
													.describe(
														'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
													),
											})
											.describe("A contact's [I]nstant[M]essaging client."),
									)
									.optional()
									.describe('IMClient dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional(),
						labels: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												label: zod
													.string()
													.optional()
													.describe(
														'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe(
												"A Contact's associated Tag.\nOutput purpose only.",
											),
									)
									.optional()
									.describe('Label(s) dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('Page number of partial result.'),
							})
							.optional()
							.describe(
								'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
							),
						languages: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												code: zod.string().optional(),
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												lang: zod.string().optional(),
												name: zod.string().optional(),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'Indicates whether this association is the default\namong others of the same type.',
													),
												region: zod.string().optional(),
												script: zod.string().optional(),
												tag: zod.string().optional(),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe(
												"A Contact's locale preference.\nOutput purpose only.",
											),
									)
									.optional()
									.describe("Page of the Contact's Language(s) dataset."),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('Page number of partial result dataset records.'),
							})
							.optional()
							.describe(
								'LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
							),
						managers: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'Indicates whether this association is the default\namong others of the same type.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												user: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe("Manager. The Contact's responsible User."),
									)
									.optional()
									.describe('Manager dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('Manager dataset.'),
						mode: zod
							.string()
							.optional()
							.describe('[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'),
						name: zod
							.object({
								commonName: zod
									.string()
									.optional()
									.describe(
										"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
									),
								familyName: zod.string().optional(),
								givenName: zod.string().optional(),
								middleName: zod
									.string()
									.optional()
									.describe(
										'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
									),
								verified: zod
									.boolean()
									.optional()
									.describe(
										'Indicate whether Contact, as a Person, realy owns this associated name.',
									),
							})
							.optional()
							.describe(
								"A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
							),
						phones: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												number: zod
													.string()
													.optional()
													.describe('The phone number.'),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'Indicates whether this phone number is default within other channels of the same type(phone).',
													),
												type: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
												verified: zod.boolean().optional(),
											})
											.describe("The Contact's phone number."),
									)
									.optional()
									.describe('PhoneNumber dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('PhoneNumber dataset.'),
						photos: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												photoId: zod.string().optional(),
												photoUrl: zod.string().optional(),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'True if the photo is a default photo; false if the photo is a user-provided photo.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe(
												"A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
											),
									)
									.optional()
									.describe('Photo dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('Photo dataset.'),
						timezones: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												primary: zod
													.boolean()
													.optional()
													.describe(
														'Indicates whether this association is the default\namong others of the same type.',
													),
												timezone: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe("A Contact's timezone preference."),
									)
									.optional()
									.describe('Timezone dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe(
								'Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.',
							),
						updatedAt: zod.string().optional(),
						updatedBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						user: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						variables: zod
							.object({
								data: zod
									.array(
										zod
											.object({
												createdAt: zod
													.string()
													.optional()
													.describe('The user who created this Field.'),
												createdBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												etag: zod
													.string()
													.optional()
													.describe(
														'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
													),
												id: zod
													.string()
													.optional()
													.describe(
														'The unique ID of the association. Never changes.',
													),
												key: zod
													.string()
													.optional()
													.describe('Key name of the variable.'),
												updatedAt: zod
													.string()
													.optional()
													.describe(
														'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
													),
												updatedBy: zod
													.object({
														id: zod
															.string()
															.optional()
															.describe('Reference Object unique ID.'),
														name: zod
															.string()
															.optional()
															.describe('Reference Object display name.'),
														type: zod
															.string()
															.optional()
															.describe('Reference Object well-known type.'),
													})
													.optional()
													.describe(
														'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
													),
												value: zod
													.any()
													.optional()
													.describe('JSON value of the variable.'),
												ver: zod
													.number()
													.optional()
													.describe(
														'Version of the latest update. Numeric sequence.',
													),
											})
											.describe(
												"The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
											),
									)
									.optional()
									.describe('Variable dataset page.'),
								next: zod.boolean().optional(),
								page: zod
									.number()
									.optional()
									.describe('The page number of the partial result.'),
							})
							.optional()
							.describe('Variable dataset.'),
						ver: zod
							.number()
							.optional()
							.describe(
								'READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.',
							),
					})
					.describe('The Contact principal source.\nOUTPUT purpose only.'),
			)
			.optional()
			.describe('Contact(s) dataset page.'),
		next: zod.boolean().optional(),
		page: zod
			.number()
			.optional()
			.describe('The page number of the partial result.'),
	})
	.describe('Contact dataset.');

/**
 * @summary Create NEW Contact
 */
export const contactsCreateContactQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Source Fields to return into result.'),
});

export const contactsCreateContactBodyVariablesItemKeyRegExp = /^\w+$/;

export const contactsCreateContactBody = zod
	.object({
		about: zod
			.string()
			.optional()
			.describe(
				'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
			),
		comments: zod
			.array(
				zod.object({
					etag: zod
						.string()
						.optional()
						.describe(
							'Unique ID of the latest version of an existing resorce.',
						),
					format: zod
						.array(
							zod.object({
								bold: zod.object({}).optional(),
								codeblock: zod
									.object({
										language: zod.string().optional(),
									})
									.optional(),
								italic: zod.object({}).optional(),
								length: zod
									.number()
									.optional()
									.describe('Length text runes count.'),
								link: zod
									.object({
										url: zod.string().optional(),
									})
									.optional(),
								monospace: zod.object({}).optional(),
								offset: zod
									.number()
									.optional()
									.describe('Offset text runes count.'),
								strikethrough: zod.object({}).optional(),
								underline: zod.object({}).optional(),
							}),
						)
						.optional()
						.describe('NEW Text components styling format.'),
					text: zod.string().describe('NEW Text of the comment.'),
				}),
			)
			.optional()
			.describe('Publish NEW comment(s) for this Contact.'),
		custom: zod.object({}).optional().describe('Custom extension data fields.'),
		emails: zod
			.array(
				zod
					.object({
						email: zod.string().describe('The email address.'),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of an existing resorce.',
							),
						primary: zod
							.boolean()
							.optional()
							.describe(
								'Indicates whether this phone number is default within other channels of the same type(phone).',
							),
						type: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						verified: zod.boolean().optional(),
					})
					.describe("Input of the Contact's email address."),
			)
			.optional()
			.describe("The Contact's email address(es)."),
		etag: zod
			.string()
			.optional()
			.describe('Unique ID of the latest version of an existing resorce.'),
		groups: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.describe(
								'Unique ID of the latest version of an existing resource.',
							),
						group: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
					})
					.describe("An input of the Contact's groups."),
			)
			.optional()
			.describe("The Contact's associated group(s)."),
		imclients: zod
			.array(
				zod
					.object({
						createdBy: zod
							.string()
							.optional()
							.describe('Id of Agent created this IM client.'),
						externalUser: zod.string().optional(),
						gatewayId: zod
							.string()
							.optional()
							.describe('App (Text-Gateway) used to connect the IM client.'),
						protocol: zod.string().optional(),
						via: zod
							.string()
							.optional()
							.describe(
								'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
							),
					})
					.describe('Input of the contact IM client.'),
			)
			.optional()
			.describe("The contact's [I]nstant[M]essaging clients."),
		labels: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of an existing resorce.',
							),
						label: zod
							.string()
							.optional()
							.describe(
								'REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
							),
					})
					.describe("A Contact's associated Tag.\nOutput purpose only."),
			)
			.optional()
			.describe("The Contact's associated label(s)."),
		languages: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.describe(
								'Unique ID of the latest version of an existing association.',
							),
						primary: zod
							.boolean()
							.optional()
							.describe(
								'Indicates whether this association must be default\namong others of the same type.',
							),
						tag: zod.string().optional(),
					})
					.describe("An input of the Contact's language."),
			)
			.optional()
			.describe("A Contact's locale preference(s)."),
		managers: zod
			.array(
				zod.object({
					etag: zod
						.string()
						.describe(
							'Unique ID of the latest version of an existing resource.',
						),
					primary: zod
						.boolean()
						.optional()
						.describe(
							'Indicates whether this association must be default among others.',
						),
					user: zod
						.object({
							id: zod
								.string()
								.optional()
								.describe('Reference Object unique ID.'),
							name: zod
								.string()
								.optional()
								.describe('Reference Object display name.'),
							type: zod
								.string()
								.optional()
								.describe('Reference Object well-known type.'),
						})
						.optional()
						.describe(
							'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
						),
				}),
			)
			.optional()
			.describe("The Contact's internal manager(s)."),
		name: zod
			.object({
				commonName: zod
					.string()
					.optional()
					.describe(
						"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
					),
				familyName: zod.string().optional(),
				givenName: zod.string().optional(),
				middleName: zod
					.string()
					.optional()
					.describe(
						'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
					),
				verified: zod
					.boolean()
					.optional()
					.describe(
						'Indicate whether Contact, as a Person, realy owns this associated name.',
					),
			})
			.optional(),
		phones: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of an existing resorce.',
							),
						number: zod.string().describe('The phone number.'),
						primary: zod
							.boolean()
							.optional()
							.describe(
								'Indicates whether this phone number is default within other channels of the same type(phone).',
							),
						type: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						verified: zod.boolean().optional(),
					})
					.describe('Input of the contact phone number.'),
			)
			.optional()
			.describe("The Contact's phone numbers."),
		timezones: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.describe(
								'Unique ID of the latest version of an existing resource.',
							),
						primary: zod
							.boolean()
							.optional()
							.describe(
								'Indicates whether this association must be default among others.',
							),
						timezone: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
					})
					.describe("An input of the Contact's timezones."),
			)
			.optional()
			.describe("The Contact's timezone preference(s)."),
		variables: zod
			.array(
				zod
					.object({
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of an existing resorce.',
							),
						key: zod
							.string()
							.regex(contactsCreateContactBodyVariablesItemKeyRegExp)
							.describe('NEW Key.'),
						value: zod.any().optional().describe('NEW Value.'),
					})
					.describe("Input of the Contact's variable."),
			)
			.optional()
			.describe('Arbitrary client data that is populated by clients.'),
	})
	.describe('The Contact principal input.');

export const contactsCreateContactResponse = zod
	.object({
		about: zod
			.string()
			.optional()
			.describe(
				'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
			),
		comments: zod
			.object({
				data: zod
					.array(
						zod.object({
							createdAt: zod
								.string()
								.optional()
								.describe('The user who created this Field.'),
							createdBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							etag: zod
								.string()
								.optional()
								.describe(
									'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
								),
							format: zod
								.array(
									zod.object({
										bold: zod.object({}).optional(),
										codeblock: zod
											.object({
												language: zod.string().optional(),
											})
											.optional(),
										italic: zod.object({}).optional(),
										length: zod
											.number()
											.optional()
											.describe('Length text runes count.'),
										link: zod
											.object({
												url: zod.string().optional(),
											})
											.optional(),
										monospace: zod.object({}).optional(),
										offset: zod
											.number()
											.optional()
											.describe('Offset text runes count.'),
										strikethrough: zod.object({}).optional(),
										underline: zod.object({}).optional(),
									}),
								)
								.optional()
								.describe('Styles of the text components.'),
							id: zod
								.string()
								.optional()
								.describe('The unique ID of the Comment. Never changes.'),
							text: zod
								.string()
								.optional()
								.describe('Rich Text, multi-line[d] string value.'),
							updatedAt: zod
								.string()
								.optional()
								.describe(
									'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
								),
							updatedBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							ver: zod
								.number()
								.optional()
								.describe('Version of the latest update. Numeric sequence.'),
						}),
					)
					.optional()
					.describe('Comment dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Comment dataset.'),
		createdAt: zod.string().optional(),
		createdBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		custom: zod.object({}).optional().describe('Custom extension data fields.'),
		domain: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		emails: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								email: zod.string().optional().describe('The email address.'),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's email address."),
					)
					.optional()
					.describe('EmailAddress dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Email dataset.'),
		etag: zod
			.string()
			.optional()
			.describe(
				'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
			),
		groups: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								group: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("The Contact's Group association."),
					)
					.optional()
					.describe('Group dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.',
			),
		id: zod
			.string()
			.optional()
			.describe('The unique ID of the association. Never changes.'),
		imclients: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								app: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								protocol: zod
									.string()
									.optional()
									.describe('Protocol used to connect the IM client.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								via: zod
									.string()
									.optional()
									.describe(
										'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
									),
							})
							.describe("A contact's [I]nstant[M]essaging client."),
					)
					.optional()
					.describe('IMClient dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional(),
		labels: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								label: zod
									.string()
									.optional()
									.describe(
										'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's associated Tag.\nOutput purpose only."),
					)
					.optional()
					.describe('Label(s) dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result.'),
			})
			.optional()
			.describe(
				'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		languages: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								code: zod.string().optional(),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								lang: zod.string().optional(),
								name: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								region: zod.string().optional(),
								script: zod.string().optional(),
								tag: zod.string().optional(),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's locale preference.\nOutput purpose only."),
					)
					.optional()
					.describe("Page of the Contact's Language(s) dataset."),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result dataset records.'),
			})
			.optional()
			.describe(
				'LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		managers: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("Manager. The Contact's responsible User."),
					)
					.optional()
					.describe('Manager dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Manager dataset.'),
		mode: zod
			.string()
			.optional()
			.describe('[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'),
		name: zod
			.object({
				commonName: zod
					.string()
					.optional()
					.describe(
						"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
					),
				familyName: zod.string().optional(),
				givenName: zod.string().optional(),
				middleName: zod
					.string()
					.optional()
					.describe(
						'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
					),
				verified: zod
					.boolean()
					.optional()
					.describe(
						'Indicate whether Contact, as a Person, realy owns this associated name.',
					),
			})
			.optional()
			.describe(
				"A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
			),
		phones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								number: zod.string().optional().describe('The phone number.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's phone number."),
					)
					.optional()
					.describe('PhoneNumber dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('PhoneNumber dataset.'),
		photos: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								photoId: zod.string().optional(),
								photoUrl: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'True if the photo is a default photo; false if the photo is a user-provided photo.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
							),
					)
					.optional()
					.describe('Photo dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Photo dataset.'),
		timezones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								timezone: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's timezone preference."),
					)
					.optional()
					.describe('Timezone dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.',
			),
		updatedAt: zod.string().optional(),
		updatedBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		user: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		variables: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								key: zod
									.string()
									.optional()
									.describe('Key name of the variable.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								value: zod
									.any()
									.optional()
									.describe('JSON value of the variable.'),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
							),
					)
					.optional()
					.describe('Variable dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Variable dataset.'),
		ver: zod
			.number()
			.optional()
			.describe(
				'READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.',
			),
	})
	.describe('The Contact principal source.\nOUTPUT purpose only.');

/**
 * @summary Remove Contact source
 */
export const contactsDeleteContactParams = zod.object({
	etag: zod.string().describe('Unique ID of the latest version of a resource.'),
});

export const contactsDeleteContactQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved into result of changes.'),
});

export const contactsDeleteContactResponse = zod
	.object({
		about: zod
			.string()
			.optional()
			.describe(
				'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
			),
		comments: zod
			.object({
				data: zod
					.array(
						zod.object({
							createdAt: zod
								.string()
								.optional()
								.describe('The user who created this Field.'),
							createdBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							etag: zod
								.string()
								.optional()
								.describe(
									'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
								),
							format: zod
								.array(
									zod.object({
										bold: zod.object({}).optional(),
										codeblock: zod
											.object({
												language: zod.string().optional(),
											})
											.optional(),
										italic: zod.object({}).optional(),
										length: zod
											.number()
											.optional()
											.describe('Length text runes count.'),
										link: zod
											.object({
												url: zod.string().optional(),
											})
											.optional(),
										monospace: zod.object({}).optional(),
										offset: zod
											.number()
											.optional()
											.describe('Offset text runes count.'),
										strikethrough: zod.object({}).optional(),
										underline: zod.object({}).optional(),
									}),
								)
								.optional()
								.describe('Styles of the text components.'),
							id: zod
								.string()
								.optional()
								.describe('The unique ID of the Comment. Never changes.'),
							text: zod
								.string()
								.optional()
								.describe('Rich Text, multi-line[d] string value.'),
							updatedAt: zod
								.string()
								.optional()
								.describe(
									'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
								),
							updatedBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							ver: zod
								.number()
								.optional()
								.describe('Version of the latest update. Numeric sequence.'),
						}),
					)
					.optional()
					.describe('Comment dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Comment dataset.'),
		createdAt: zod.string().optional(),
		createdBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		custom: zod.object({}).optional().describe('Custom extension data fields.'),
		domain: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		emails: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								email: zod.string().optional().describe('The email address.'),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's email address."),
					)
					.optional()
					.describe('EmailAddress dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Email dataset.'),
		etag: zod
			.string()
			.optional()
			.describe(
				'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
			),
		groups: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								group: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("The Contact's Group association."),
					)
					.optional()
					.describe('Group dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.',
			),
		id: zod
			.string()
			.optional()
			.describe('The unique ID of the association. Never changes.'),
		imclients: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								app: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								protocol: zod
									.string()
									.optional()
									.describe('Protocol used to connect the IM client.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								via: zod
									.string()
									.optional()
									.describe(
										'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
									),
							})
							.describe("A contact's [I]nstant[M]essaging client."),
					)
					.optional()
					.describe('IMClient dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional(),
		labels: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								label: zod
									.string()
									.optional()
									.describe(
										'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's associated Tag.\nOutput purpose only."),
					)
					.optional()
					.describe('Label(s) dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result.'),
			})
			.optional()
			.describe(
				'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		languages: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								code: zod.string().optional(),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								lang: zod.string().optional(),
								name: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								region: zod.string().optional(),
								script: zod.string().optional(),
								tag: zod.string().optional(),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's locale preference.\nOutput purpose only."),
					)
					.optional()
					.describe("Page of the Contact's Language(s) dataset."),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result dataset records.'),
			})
			.optional()
			.describe(
				'LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		managers: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("Manager. The Contact's responsible User."),
					)
					.optional()
					.describe('Manager dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Manager dataset.'),
		mode: zod
			.string()
			.optional()
			.describe('[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'),
		name: zod
			.object({
				commonName: zod
					.string()
					.optional()
					.describe(
						"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
					),
				familyName: zod.string().optional(),
				givenName: zod.string().optional(),
				middleName: zod
					.string()
					.optional()
					.describe(
						'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
					),
				verified: zod
					.boolean()
					.optional()
					.describe(
						'Indicate whether Contact, as a Person, realy owns this associated name.',
					),
			})
			.optional()
			.describe(
				"A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
			),
		phones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								number: zod.string().optional().describe('The phone number.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's phone number."),
					)
					.optional()
					.describe('PhoneNumber dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('PhoneNumber dataset.'),
		photos: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								photoId: zod.string().optional(),
								photoUrl: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'True if the photo is a default photo; false if the photo is a user-provided photo.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
							),
					)
					.optional()
					.describe('Photo dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Photo dataset.'),
		timezones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								timezone: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's timezone preference."),
					)
					.optional()
					.describe('Timezone dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.',
			),
		updatedAt: zod.string().optional(),
		updatedBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		user: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		variables: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								key: zod
									.string()
									.optional()
									.describe('Key name of the variable.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								value: zod
									.any()
									.optional()
									.describe('JSON value of the variable.'),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
							),
					)
					.optional()
					.describe('Variable dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Variable dataset.'),
		ver: zod
			.number()
			.optional()
			.describe(
				'READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.',
			),
	})
	.describe('The Contact principal source.\nOUTPUT purpose only.');

/**
 * @summary Locate Contact source
 */
export const contactsLocateContactParams = zod.object({
	etag: zod
		.string()
		.describe(
			'The Contact source IDentifier.\nAccept: `etag` (obsolete+) or `id`.',
		),
});

export const contactsLocateContactQueryModeDefault = 'READ';

export const contactsLocateContactQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Source Fields to return into result.'),
	mode: zod
		.enum(['READ', 'WRITE', 'DELETE'])
		.default(contactsLocateContactQueryModeDefault)
		.describe(
			'The requirement of a special access mode to the Source.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]',
		),
});

export const contactsLocateContactResponse = zod
	.object({
		about: zod
			.string()
			.optional()
			.describe(
				'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
			),
		comments: zod
			.object({
				data: zod
					.array(
						zod.object({
							createdAt: zod
								.string()
								.optional()
								.describe('The user who created this Field.'),
							createdBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							etag: zod
								.string()
								.optional()
								.describe(
									'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
								),
							format: zod
								.array(
									zod.object({
										bold: zod.object({}).optional(),
										codeblock: zod
											.object({
												language: zod.string().optional(),
											})
											.optional(),
										italic: zod.object({}).optional(),
										length: zod
											.number()
											.optional()
											.describe('Length text runes count.'),
										link: zod
											.object({
												url: zod.string().optional(),
											})
											.optional(),
										monospace: zod.object({}).optional(),
										offset: zod
											.number()
											.optional()
											.describe('Offset text runes count.'),
										strikethrough: zod.object({}).optional(),
										underline: zod.object({}).optional(),
									}),
								)
								.optional()
								.describe('Styles of the text components.'),
							id: zod
								.string()
								.optional()
								.describe('The unique ID of the Comment. Never changes.'),
							text: zod
								.string()
								.optional()
								.describe('Rich Text, multi-line[d] string value.'),
							updatedAt: zod
								.string()
								.optional()
								.describe(
									'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
								),
							updatedBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							ver: zod
								.number()
								.optional()
								.describe('Version of the latest update. Numeric sequence.'),
						}),
					)
					.optional()
					.describe('Comment dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Comment dataset.'),
		createdAt: zod.string().optional(),
		createdBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		custom: zod.object({}).optional().describe('Custom extension data fields.'),
		domain: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		emails: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								email: zod.string().optional().describe('The email address.'),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's email address."),
					)
					.optional()
					.describe('EmailAddress dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Email dataset.'),
		etag: zod
			.string()
			.optional()
			.describe(
				'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
			),
		groups: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								group: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("The Contact's Group association."),
					)
					.optional()
					.describe('Group dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.',
			),
		id: zod
			.string()
			.optional()
			.describe('The unique ID of the association. Never changes.'),
		imclients: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								app: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								protocol: zod
									.string()
									.optional()
									.describe('Protocol used to connect the IM client.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								via: zod
									.string()
									.optional()
									.describe(
										'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
									),
							})
							.describe("A contact's [I]nstant[M]essaging client."),
					)
					.optional()
					.describe('IMClient dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional(),
		labels: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								label: zod
									.string()
									.optional()
									.describe(
										'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's associated Tag.\nOutput purpose only."),
					)
					.optional()
					.describe('Label(s) dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result.'),
			})
			.optional()
			.describe(
				'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		languages: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								code: zod.string().optional(),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								lang: zod.string().optional(),
								name: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								region: zod.string().optional(),
								script: zod.string().optional(),
								tag: zod.string().optional(),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's locale preference.\nOutput purpose only."),
					)
					.optional()
					.describe("Page of the Contact's Language(s) dataset."),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result dataset records.'),
			})
			.optional()
			.describe(
				'LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		managers: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("Manager. The Contact's responsible User."),
					)
					.optional()
					.describe('Manager dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Manager dataset.'),
		mode: zod
			.string()
			.optional()
			.describe('[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'),
		name: zod
			.object({
				commonName: zod
					.string()
					.optional()
					.describe(
						"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
					),
				familyName: zod.string().optional(),
				givenName: zod.string().optional(),
				middleName: zod
					.string()
					.optional()
					.describe(
						'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
					),
				verified: zod
					.boolean()
					.optional()
					.describe(
						'Indicate whether Contact, as a Person, realy owns this associated name.',
					),
			})
			.optional()
			.describe(
				"A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
			),
		phones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								number: zod.string().optional().describe('The phone number.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's phone number."),
					)
					.optional()
					.describe('PhoneNumber dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('PhoneNumber dataset.'),
		photos: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								photoId: zod.string().optional(),
								photoUrl: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'True if the photo is a default photo; false if the photo is a user-provided photo.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
							),
					)
					.optional()
					.describe('Photo dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Photo dataset.'),
		timezones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								timezone: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's timezone preference."),
					)
					.optional()
					.describe('Timezone dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.',
			),
		updatedAt: zod.string().optional(),
		updatedBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		user: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		variables: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								key: zod
									.string()
									.optional()
									.describe('Key name of the variable.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								value: zod
									.any()
									.optional()
									.describe('JSON value of the variable.'),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
							),
					)
					.optional()
					.describe('Variable dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Variable dataset.'),
		ver: zod
			.number()
			.optional()
			.describe(
				'READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.',
			),
	})
	.describe('The Contact principal source.\nOUTPUT purpose only.');

/**
 * @summary NEW Update of the Contact source
 */
export const contactsUpdateContactParams = zod.object({
	etag: zod
		.string()
		.describe('Unique ID of the latest version of an existing resorce.'),
});

export const contactsUpdateContactQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Source Fields to return into result.'),
});

export const contactsUpdateContactBodyVariablesItemKeyRegExp = /^\w+$/;

export const contactsUpdateContactBody = zod.object({
	about: zod
		.string()
		.optional()
		.describe(
			'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
		),
	comments: zod
		.array(
			zod.object({
				etag: zod
					.string()
					.optional()
					.describe('Unique ID of the latest version of an existing resorce.'),
				format: zod
					.array(
						zod.object({
							bold: zod.object({}).optional(),
							codeblock: zod
								.object({
									language: zod.string().optional(),
								})
								.optional(),
							italic: zod.object({}).optional(),
							length: zod
								.number()
								.optional()
								.describe('Length text runes count.'),
							link: zod
								.object({
									url: zod.string().optional(),
								})
								.optional(),
							monospace: zod.object({}).optional(),
							offset: zod
								.number()
								.optional()
								.describe('Offset text runes count.'),
							strikethrough: zod.object({}).optional(),
							underline: zod.object({}).optional(),
						}),
					)
					.optional()
					.describe('NEW Text components styling format.'),
				text: zod.string().describe('NEW Text of the comment.'),
			}),
		)
		.optional()
		.describe('Publish NEW comment(s) for this Contact.'),
	custom: zod.object({}).optional().describe('Custom extension data fields.'),
	emails: zod
		.array(
			zod
				.object({
					email: zod.string().describe('The email address.'),
					etag: zod
						.string()
						.optional()
						.describe(
							'Unique ID of the latest version of an existing resorce.',
						),
					primary: zod
						.boolean()
						.optional()
						.describe(
							'Indicates whether this phone number is default within other channels of the same type(phone).',
						),
					type: zod
						.object({
							id: zod
								.string()
								.optional()
								.describe('Reference Object unique ID.'),
							name: zod
								.string()
								.optional()
								.describe('Reference Object display name.'),
							type: zod
								.string()
								.optional()
								.describe('Reference Object well-known type.'),
						})
						.optional()
						.describe(
							'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
						),
					verified: zod.boolean().optional(),
				})
				.describe("Input of the Contact's email address."),
		)
		.optional()
		.describe("The Contact's email address(es)."),
	groups: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.describe(
							'Unique ID of the latest version of an existing resource.',
						),
					group: zod
						.object({
							id: zod
								.string()
								.optional()
								.describe('Reference Object unique ID.'),
							name: zod
								.string()
								.optional()
								.describe('Reference Object display name.'),
							type: zod
								.string()
								.optional()
								.describe('Reference Object well-known type.'),
						})
						.optional()
						.describe(
							'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
						),
				})
				.describe("An input of the Contact's groups."),
		)
		.optional()
		.describe("The Contact's associated group(s)."),
	imclients: zod
		.array(
			zod
				.object({
					createdBy: zod
						.string()
						.optional()
						.describe('Id of Agent created this IM client.'),
					externalUser: zod.string().optional(),
					gatewayId: zod
						.string()
						.optional()
						.describe('App (Text-Gateway) used to connect the IM client.'),
					protocol: zod.string().optional(),
					via: zod
						.string()
						.optional()
						.describe(
							'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
						),
				})
				.describe('Input of the contact IM client.'),
		)
		.optional()
		.describe("The contact's [I]nstant[M]essaging clients."),
	labels: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.optional()
						.describe(
							'Unique ID of the latest version of an existing resorce.',
						),
					label: zod
						.string()
						.optional()
						.describe(
							'REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
						),
				})
				.describe("A Contact's associated Tag.\nOutput purpose only."),
		)
		.optional()
		.describe("The Contact's associated label(s)."),
	languages: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.describe(
							'Unique ID of the latest version of an existing association.',
						),
					primary: zod
						.boolean()
						.optional()
						.describe(
							'Indicates whether this association must be default\namong others of the same type.',
						),
					tag: zod.string().optional(),
				})
				.describe("An input of the Contact's language."),
		)
		.optional()
		.describe("A Contact's locale preference(s)."),
	managers: zod
		.array(
			zod.object({
				etag: zod
					.string()
					.describe('Unique ID of the latest version of an existing resource.'),
				primary: zod
					.boolean()
					.optional()
					.describe(
						'Indicates whether this association must be default among others.',
					),
				user: zod
					.object({
						id: zod.string().optional().describe('Reference Object unique ID.'),
						name: zod
							.string()
							.optional()
							.describe('Reference Object display name.'),
						type: zod
							.string()
							.optional()
							.describe('Reference Object well-known type.'),
					})
					.optional()
					.describe(
						'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
					),
			}),
		)
		.optional()
		.describe("The Contact's internal manager(s)."),
	name: zod
		.object({
			commonName: zod
				.string()
				.optional()
				.describe(
					"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
				),
			familyName: zod.string().optional(),
			givenName: zod.string().optional(),
			middleName: zod
				.string()
				.optional()
				.describe(
					'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
				),
			verified: zod
				.boolean()
				.optional()
				.describe(
					'Indicate whether Contact, as a Person, realy owns this associated name.',
				),
		})
		.optional(),
	phones: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.optional()
						.describe(
							'Unique ID of the latest version of an existing resorce.',
						),
					number: zod.string().describe('The phone number.'),
					primary: zod
						.boolean()
						.optional()
						.describe(
							'Indicates whether this phone number is default within other channels of the same type(phone).',
						),
					type: zod
						.object({
							id: zod
								.string()
								.optional()
								.describe('Reference Object unique ID.'),
							name: zod
								.string()
								.optional()
								.describe('Reference Object display name.'),
							type: zod
								.string()
								.optional()
								.describe('Reference Object well-known type.'),
						})
						.optional()
						.describe(
							'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
						),
					verified: zod.boolean().optional(),
				})
				.describe('Input of the contact phone number.'),
		)
		.optional()
		.describe("The Contact's phone numbers."),
	timezones: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.describe(
							'Unique ID of the latest version of an existing resource.',
						),
					primary: zod
						.boolean()
						.optional()
						.describe(
							'Indicates whether this association must be default among others.',
						),
					timezone: zod
						.object({
							id: zod
								.string()
								.optional()
								.describe('Reference Object unique ID.'),
							name: zod
								.string()
								.optional()
								.describe('Reference Object display name.'),
							type: zod
								.string()
								.optional()
								.describe('Reference Object well-known type.'),
						})
						.optional()
						.describe(
							'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
						),
				})
				.describe("An input of the Contact's timezones."),
		)
		.optional()
		.describe("The Contact's timezone preference(s)."),
	variables: zod
		.array(
			zod
				.object({
					etag: zod
						.string()
						.optional()
						.describe(
							'Unique ID of the latest version of an existing resorce.',
						),
					key: zod
						.string()
						.regex(contactsUpdateContactBodyVariablesItemKeyRegExp)
						.describe('NEW Key.'),
					value: zod.any().optional().describe('NEW Value.'),
				})
				.describe("Input of the Contact's variable."),
		)
		.optional()
		.describe('Arbitrary client data that is populated by clients.'),
});

export const contactsUpdateContactResponse = zod
	.object({
		about: zod
			.string()
			.optional()
			.describe(
				'BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.',
			),
		comments: zod
			.object({
				data: zod
					.array(
						zod.object({
							createdAt: zod
								.string()
								.optional()
								.describe('The user who created this Field.'),
							createdBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							etag: zod
								.string()
								.optional()
								.describe(
									'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
								),
							format: zod
								.array(
									zod.object({
										bold: zod.object({}).optional(),
										codeblock: zod
											.object({
												language: zod.string().optional(),
											})
											.optional(),
										italic: zod.object({}).optional(),
										length: zod
											.number()
											.optional()
											.describe('Length text runes count.'),
										link: zod
											.object({
												url: zod.string().optional(),
											})
											.optional(),
										monospace: zod.object({}).optional(),
										offset: zod
											.number()
											.optional()
											.describe('Offset text runes count.'),
										strikethrough: zod.object({}).optional(),
										underline: zod.object({}).optional(),
									}),
								)
								.optional()
								.describe('Styles of the text components.'),
							id: zod
								.string()
								.optional()
								.describe('The unique ID of the Comment. Never changes.'),
							text: zod
								.string()
								.optional()
								.describe('Rich Text, multi-line[d] string value.'),
							updatedAt: zod
								.string()
								.optional()
								.describe(
									'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
								),
							updatedBy: zod
								.object({
									id: zod
										.string()
										.optional()
										.describe('Reference Object unique ID.'),
									name: zod
										.string()
										.optional()
										.describe('Reference Object display name.'),
									type: zod
										.string()
										.optional()
										.describe('Reference Object well-known type.'),
								})
								.optional()
								.describe(
									'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
								),
							ver: zod
								.number()
								.optional()
								.describe('Version of the latest update. Numeric sequence.'),
						}),
					)
					.optional()
					.describe('Comment dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Comment dataset.'),
		createdAt: zod.string().optional(),
		createdBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		custom: zod.object({}).optional().describe('Custom extension data fields.'),
		domain: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		emails: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								email: zod.string().optional().describe('The email address.'),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's email address."),
					)
					.optional()
					.describe('EmailAddress dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Email dataset.'),
		etag: zod
			.string()
			.optional()
			.describe(
				'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
			),
		groups: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								group: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("The Contact's Group association."),
					)
					.optional()
					.describe('Group dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.',
			),
		id: zod
			.string()
			.optional()
			.describe('The unique ID of the association. Never changes.'),
		imclients: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								app: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								protocol: zod
									.string()
									.optional()
									.describe('Protocol used to connect the IM client.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								via: zod
									.string()
									.optional()
									.describe(
										'[Via] App(-specific) peer(-id) to connect[from] the IM client.',
									),
							})
							.describe("A contact's [I]nstant[M]essaging client."),
					)
					.optional()
					.describe('IMClient dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional(),
		labels: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								label: zod
									.string()
									.optional()
									.describe(
										'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's associated Tag.\nOutput purpose only."),
					)
					.optional()
					.describe('Label(s) dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result.'),
			})
			.optional()
			.describe(
				'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		languages: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								code: zod.string().optional(),
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								lang: zod.string().optional(),
								name: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								region: zod.string().optional(),
								script: zod.string().optional(),
								tag: zod.string().optional(),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's locale preference.\nOutput purpose only."),
					)
					.optional()
					.describe("Page of the Contact's Language(s) dataset."),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('Page number of partial result dataset records.'),
			})
			.optional()
			.describe(
				'LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
			),
		managers: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								user: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("Manager. The Contact's responsible User."),
					)
					.optional()
					.describe('Manager dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Manager dataset.'),
		mode: zod
			.string()
			.optional()
			.describe('[R]ecord[b]ased[A]ccess[C]ontrol mode granted.'),
		name: zod
			.object({
				commonName: zod
					.string()
					.optional()
					.describe(
						"REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
					),
				familyName: zod.string().optional(),
				givenName: zod.string().optional(),
				middleName: zod
					.string()
					.optional()
					.describe(
						'OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.',
					),
				verified: zod
					.boolean()
					.optional()
					.describe(
						'Indicate whether Contact, as a Person, realy owns this associated name.',
					),
			})
			.optional()
			.describe(
				"A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
			),
		phones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								number: zod.string().optional().describe('The phone number.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this phone number is default within other channels of the same type(phone).',
									),
								type: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
								verified: zod.boolean().optional(),
							})
							.describe("The Contact's phone number."),
					)
					.optional()
					.describe('PhoneNumber dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('PhoneNumber dataset.'),
		photos: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								photoId: zod.string().optional(),
								photoUrl: zod.string().optional(),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'True if the photo is a default photo; false if the photo is a user-provided photo.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
							),
					)
					.optional()
					.describe('Photo dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Photo dataset.'),
		timezones: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								primary: zod
									.boolean()
									.optional()
									.describe(
										'Indicates whether this association is the default\namong others of the same type.',
									),
								timezone: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe("A Contact's timezone preference."),
					)
					.optional()
					.describe('Timezone dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe(
				'Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.',
			),
		updatedAt: zod.string().optional(),
		updatedBy: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		user: zod
			.object({
				id: zod.string().optional().describe('Reference Object unique ID.'),
				name: zod
					.string()
					.optional()
					.describe('Reference Object display name.'),
				type: zod
					.string()
					.optional()
					.describe('Reference Object well-known type.'),
			})
			.optional()
			.describe(
				'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
			),
		variables: zod
			.object({
				data: zod
					.array(
						zod
							.object({
								createdAt: zod
									.string()
									.optional()
									.describe('The user who created this Field.'),
								createdBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								etag: zod
									.string()
									.optional()
									.describe(
										'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
									),
								id: zod
									.string()
									.optional()
									.describe('The unique ID of the association. Never changes.'),
								key: zod
									.string()
									.optional()
									.describe('Key name of the variable.'),
								updatedAt: zod
									.string()
									.optional()
									.describe(
										'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
									),
								updatedBy: zod
									.object({
										id: zod
											.string()
											.optional()
											.describe('Reference Object unique ID.'),
										name: zod
											.string()
											.optional()
											.describe('Reference Object display name.'),
										type: zod
											.string()
											.optional()
											.describe('Reference Object well-known type.'),
									})
									.optional()
									.describe(
										'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
									),
								value: zod
									.any()
									.optional()
									.describe('JSON value of the variable.'),
								ver: zod
									.number()
									.optional()
									.describe('Version of the latest update. Numeric sequence.'),
							})
							.describe(
								"The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
							),
					)
					.optional()
					.describe('Variable dataset page.'),
				next: zod.boolean().optional(),
				page: zod
					.number()
					.optional()
					.describe('The page number of the partial result.'),
			})
			.optional()
			.describe('Variable dataset.'),
		ver: zod
			.number()
			.optional()
			.describe(
				'READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.',
			),
	})
	.describe('The Contact principal source.\nOUTPUT purpose only.');
