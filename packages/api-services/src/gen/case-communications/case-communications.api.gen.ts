/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	CasesInputCaseCommunication,
	CasesLinkCommunicationResponse,
	CasesListCommunicationsResponse,
	CasesUnlinkCommunicationResponse,
	LinkCommunicationParams,
	ListCommunicationsParams,
	UnlinkCommunicationParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getCaseCommunications =
		// --- title end
		() => {
			// --- header end
			/**
 * @summary Lists all communications linked to a specific case.
Currently a feature for future development.
 */
			const listCommunications = <
				TData = AxiosResponse<CasesListCommunicationsResponse>,
			>(
				caseEtag: string,
				params?: ListCommunicationsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/cases/${caseEtag}/communication`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Links a communication to a specific case.
			 */
			const linkCommunication = <
				TData = AxiosResponse<CasesLinkCommunicationResponse>,
			>(
				caseEtag: string,
				casesInputCaseCommunication: CasesInputCaseCommunication,
				params?: LinkCommunicationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/cases/${caseEtag}/communication`,
					casesInputCaseCommunication,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Unlinks a communication from a specific case.
			 */
			const unlinkCommunication = <
				TData = AxiosResponse<CasesUnlinkCommunicationResponse>,
			>(
				caseEtag: string,
				id: string,
				params?: UnlinkCommunicationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/cases/${caseEtag}/communication/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return { listCommunications, linkCommunication, unlinkCommunication };
		};
export type ListCommunicationsResult =
	AxiosResponse<CasesListCommunicationsResponse>;
export type LinkCommunicationResult =
	AxiosResponse<CasesLinkCommunicationResponse>;
export type UnlinkCommunicationResult =
	AxiosResponse<CasesUnlinkCommunicationResponse>;

// --- footer end
