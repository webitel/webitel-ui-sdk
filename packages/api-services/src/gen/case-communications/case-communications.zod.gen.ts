/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * service.proto
 * OpenAPI spec version: version not set
 */
import { z as zod } from 'zod';

/**
 * @summary Lists all communications linked to a specific case.
Currently a feature for future development.
 */
export const listCommunicationsParams = zod.object({
	case_etag: zod.string().describe('Case identifier.'),
});

export const listCommunicationsQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('List of fields to include in the response.'),
	q: zod.string().optional().describe('Query string for filtering results.'),
	size: zod.number().optional().describe('Number of records per page.'),
	page: zod.number().optional().describe('Page number for pagination.'),
	sort: zod.string().optional().describe('Sorting order.'),
});

export const listCommunicationsResponseDataItemCommunicationTypeDefault =
	'NO_TYPE';

export const listCommunicationsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						communicationId: zod
							.string()
							.optional()
							.describe('External communication ID.'),
						communicationType: zod
							.enum([
								'NO_TYPE',
								'COMMUNICATION_CHAT',
								'COMMUNICATION_CALL',
								'COMMUNICATION_EMAIL',
							])
							.default(
								listCommunicationsResponseDataItemCommunicationTypeDefault,
							)
							.describe(
								'Enum to define types of case communications.\n\n - NO_TYPE: Default value, no type specified.\n - COMMUNICATION_CHAT: Communication type: Chat.\n - COMMUNICATION_CALL: Communication type: Call.\n - COMMUNICATION_EMAIL: Communication type: Email.',
							),
						etag: zod
							.string()
							.optional()
							.describe('Version of the communication record.'),
						id: zod
							.string()
							.optional()
							.describe('Database ID of the communication.'),
						ver: zod
							.number()
							.optional()
							.describe('Version of the communication record.'),
					})
					.describe('Represents a single case communication.'),
			)
			.optional()
			.describe('List of communications.'),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Current page number.'),
	})
	.describe('Response message for listing communications linked to a case.');

/**
 * @summary Links a communication to a specific case.
 */
export const linkCommunicationParams = zod.object({
	case_etag: zod.string().describe('Case identifier.'),
});

export const linkCommunicationQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('List of fields to include in the response.'),
});

export const linkCommunicationBodyCommunicationTypeDefault = 'NO_TYPE';

export const linkCommunicationBody = zod
	.object({
		communicationId: zod
			.string()
			.optional()
			.describe('External communication ID.'),
		communicationType: zod
			.enum([
				'NO_TYPE',
				'COMMUNICATION_CHAT',
				'COMMUNICATION_CALL',
				'COMMUNICATION_EMAIL',
			])
			.default(linkCommunicationBodyCommunicationTypeDefault)
			.describe(
				'Enum to define types of case communications.\n\n - NO_TYPE: Default value, no type specified.\n - COMMUNICATION_CHAT: Communication type: Chat.\n - COMMUNICATION_CALL: Communication type: Call.\n - COMMUNICATION_EMAIL: Communication type: Email.',
			),
	})
	.describe('Represents input data for creating or linking a communication.');

export const linkCommunicationResponseDataItemCommunicationTypeDefault =
	'NO_TYPE';

export const linkCommunicationResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						communicationId: zod
							.string()
							.optional()
							.describe('External communication ID.'),
						communicationType: zod
							.enum([
								'NO_TYPE',
								'COMMUNICATION_CHAT',
								'COMMUNICATION_CALL',
								'COMMUNICATION_EMAIL',
							])
							.default(
								linkCommunicationResponseDataItemCommunicationTypeDefault,
							)
							.describe(
								'Enum to define types of case communications.\n\n - NO_TYPE: Default value, no type specified.\n - COMMUNICATION_CHAT: Communication type: Chat.\n - COMMUNICATION_CALL: Communication type: Call.\n - COMMUNICATION_EMAIL: Communication type: Email.',
							),
						etag: zod
							.string()
							.optional()
							.describe('Version of the communication record.'),
						id: zod
							.string()
							.optional()
							.describe('Database ID of the communication.'),
						ver: zod
							.number()
							.optional()
							.describe('Version of the communication record.'),
					})
					.describe('Represents a single case communication.'),
			)
			.optional()
			.describe('List of linked communications.'),
	})
	.describe('Response message after linking communications to a case.');

/**
 * @summary Unlinks a communication from a specific case.
 */
export const unlinkCommunicationParams = zod.object({
	case_etag: zod.string(),
	id: zod.string().describe('Communication identifier.'),
});

export const unlinkCommunicationQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('List of fields to include in the response.'),
});

export const unlinkCommunicationResponse = zod
	.object({
		affected: zod.string().optional().describe('Affected rows.'),
	})
	.describe('Response message after unlinking a communication from a case.');
