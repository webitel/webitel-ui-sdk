/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DeleteCalendarParams,
	EngineCalendar,
	EngineCalendarServiceUpdateCalendarBody,
	EngineCreateCalendarRequest,
	EngineListCalendar,
	EngineListTimezoneResponse,
	ReadCalendarParams,
	SearchCalendarParams,
	SearchTimezonesParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getCalendarService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of calendar
			 */
			const searchCalendar = <TData = AxiosResponse<EngineListCalendar>>(
				params?: SearchCalendarParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/calendars', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create calendar
			 */
			const createCalendar = <TData = AxiosResponse<EngineCalendar>>(
				engineCreateCalendarRequest: EngineCreateCalendarRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/calendars', engineCreateCalendarRequest, options);
			};
			/**
			 * @summary List timezones
			 */
			const searchTimezones = <
				TData = AxiosResponse<EngineListTimezoneResponse>,
			>(
				params?: SearchTimezonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/calendars/timezones', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Remove calendar
			 */
			const deleteCalendar = <TData = AxiosResponse<EngineCalendar>>(
				id: string,
				params?: DeleteCalendarParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/calendars/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Calendar item
			 */
			const readCalendar = <TData = AxiosResponse<EngineCalendar>>(
				id: string,
				params?: ReadCalendarParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/calendars/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update calendar
			 */
			const updateCalendar = <TData = AxiosResponse<EngineCalendar>>(
				id: string,
				engineCalendarServiceUpdateCalendarBody: EngineCalendarServiceUpdateCalendarBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/calendars/${id}`,
					engineCalendarServiceUpdateCalendarBody,
					options,
				);
			};

			// --- footer start
			return {
				searchCalendar,
				createCalendar,
				searchTimezones,
				deleteCalendar,
				readCalendar,
				updateCalendar,
			};
		};
export type SearchCalendarResult = AxiosResponse<EngineListCalendar>;
export type CreateCalendarResult = AxiosResponse<EngineCalendar>;
export type SearchTimezonesResult = AxiosResponse<EngineListTimezoneResponse>;
export type DeleteCalendarResult = AxiosResponse<EngineCalendar>;
export type ReadCalendarResult = AxiosResponse<EngineCalendar>;
export type UpdateCalendarResult = AxiosResponse<EngineCalendar>;

// --- footer end
