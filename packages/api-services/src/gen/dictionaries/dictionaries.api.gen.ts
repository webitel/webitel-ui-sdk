/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DictionariesCreateData200,
	DictionariesCreateDataBody,
	DictionariesDeleteData2Params,
	DictionariesDeleteDataParams,
	DictionariesDeleteTypeParams,
	DictionariesImportCSVBody,
	DictionariesLocateData200,
	DictionariesLocateDataParams,
	DictionariesSearchDataParams,
	DictionariesSearchTypeParams,
	DictionariesUpdateData2Body,
	DictionariesUpdateData2Params,
	DictionariesUpdateData200,
	DictionariesUpdateData2200,
	DictionariesUpdateDataBody,
	DictionariesUpdateDataParams,
	DictionariesUpdateTypeParams,
	WebitelProtoDataDataset,
	WebitelProtoDataInputDictionary,
	WebitelProtoDataStruct,
	WebitelProtoDataStructList,
} from '.././_models';

// --- header start
//

export const // --- title start
	getDictionaries =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Delete a dictionary records.
			 */
			const dictionariesDeleteData = <
				TData = AxiosResponse<WebitelProtoDataDataset>,
			>(
				repo: string,
				params: DictionariesDeleteDataParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/dictionaries/${repo}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Lookup a dictionary dataset.
			 */
			const dictionariesSearchData = <
				TData = AxiosResponse<WebitelProtoDataDataset>,
			>(
				repo: string,
				params?: DictionariesSearchDataParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/dictionaries/${repo}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Create a dictionary record.
			 */
			const dictionariesCreateData = <
				TData = AxiosResponse<DictionariesCreateData200>,
			>(
				repo: string,
				dictionariesCreateDataBody: DictionariesCreateDataBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/dictionaries/${repo}`,
					dictionariesCreateDataBody,
					options,
				);
			};
			/**
			 * @summary Import dataset from CSV file.
			 */
			const dictionariesImportCSV = <
				TData = AxiosResponse<WebitelProtoDataDataset>,
			>(
				repo: string,
				dictionariesImportCSVBody: DictionariesImportCSVBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/dictionaries/${repo}/csv`,
					dictionariesImportCSVBody,
					options,
				);
			};
			/**
			 * @summary Delete a dictionary records.
			 */
			const dictionariesDeleteData2 = <
				TData = AxiosResponse<WebitelProtoDataDataset>,
			>(
				repo: string,
				id: string[],
				params?: DictionariesDeleteData2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/dictionaries/${repo}/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Locate a dictionary record.
			 */
			const dictionariesLocateData = <
				TData = AxiosResponse<DictionariesLocateData200>,
			>(
				repo: string,
				id: string,
				params?: DictionariesLocateDataParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/dictionaries/${repo}/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Record) {
			 * @summary Update a dictionary record.
			 */
			const dictionariesUpdateData = <
				TData = AxiosResponse<DictionariesUpdateData200>,
			>(
				repo: string,
				id: string,
				dictionariesUpdateDataBody: DictionariesUpdateDataBody,
				params?: DictionariesUpdateDataParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/dictionaries/${repo}/${id}`,
					dictionariesUpdateDataBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * (Record) {
			 * @summary Update a dictionary record.
			 */
			const dictionariesUpdateData2 = <
				TData = AxiosResponse<DictionariesUpdateData2200>,
			>(
				repo: string,
				id: string,
				dictionariesUpdateData2Body: DictionariesUpdateData2Body,
				params?: DictionariesUpdateData2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/dictionaries/${repo}/${id}`,
					dictionariesUpdateData2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * (DictionaryList) {
			 * @summary Delete custom dictionaries.
			 */
			const dictionariesDeleteType = <
				TData = AxiosResponse<WebitelProtoDataStructList>,
			>(
				params: DictionariesDeleteTypeParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/types/dictionaries', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Lookup dictionaries data types.
			 */
			const dictionariesSearchType = <
				TData = AxiosResponse<WebitelProtoDataStructList>,
			>(
				params?: DictionariesSearchTypeParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/types/dictionaries', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (Dictionary) {
			 * @summary Locate the dictionary type.
			 */
			const dictionariesLocateType = <
				TData = AxiosResponse<WebitelProtoDataStruct>,
			>(
				repo: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/types/dictionaries/${repo}`, options);
			};
			/**
			 * (Dictionary) {
			 * @summary Create custom dictionary.
			 */
			const dictionariesCreateType = <
				TData = AxiosResponse<WebitelProtoDataStruct>,
			>(
				repo: string,
				webitelProtoDataInputDictionary: WebitelProtoDataInputDictionary,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/types/dictionaries/${repo}`,
					webitelProtoDataInputDictionary,
					options,
				);
			};
			/**
			 * (Dictionary) {
			 * @summary Update custom dictionary.
			 */
			const dictionariesUpdateType = <
				TData = AxiosResponse<WebitelProtoDataStruct>,
			>(
				repo: string,
				webitelProtoDataInputDictionary: WebitelProtoDataInputDictionary,
				params?: DictionariesUpdateTypeParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/types/dictionaries/${repo}`,
					webitelProtoDataInputDictionary,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				dictionariesDeleteData,
				dictionariesSearchData,
				dictionariesCreateData,
				dictionariesImportCSV,
				dictionariesDeleteData2,
				dictionariesLocateData,
				dictionariesUpdateData,
				dictionariesUpdateData2,
				dictionariesDeleteType,
				dictionariesSearchType,
				dictionariesLocateType,
				dictionariesCreateType,
				dictionariesUpdateType,
			};
		};
export type DictionariesDeleteDataResult =
	AxiosResponse<WebitelProtoDataDataset>;
export type DictionariesSearchDataResult =
	AxiosResponse<WebitelProtoDataDataset>;
export type DictionariesCreateDataResult =
	AxiosResponse<DictionariesCreateData200>;
export type DictionariesImportCSVResult =
	AxiosResponse<WebitelProtoDataDataset>;
export type DictionariesDeleteData2Result =
	AxiosResponse<WebitelProtoDataDataset>;
export type DictionariesLocateDataResult =
	AxiosResponse<DictionariesLocateData200>;
export type DictionariesUpdateDataResult =
	AxiosResponse<DictionariesUpdateData200>;
export type DictionariesUpdateData2Result =
	AxiosResponse<DictionariesUpdateData2200>;
export type DictionariesDeleteTypeResult =
	AxiosResponse<WebitelProtoDataStructList>;
export type DictionariesSearchTypeResult =
	AxiosResponse<WebitelProtoDataStructList>;
export type DictionariesLocateTypeResult =
	AxiosResponse<WebitelProtoDataStruct>;
export type DictionariesCreateTypeResult =
	AxiosResponse<WebitelProtoDataStruct>;
export type DictionariesUpdateTypeResult =
	AxiosResponse<WebitelProtoDataStruct>;

// --- footer end
