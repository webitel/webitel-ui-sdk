/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

export const searchPresetQueryQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
	section: zod.array(zod.string()).optional(),
});

export const searchPresetQueryResponse = zod.object({
	items: zod
		.array(
			zod.object({
				createdAt: zod.string().optional(),
				description: zod.string().optional(),
				id: zod.number().optional(),
				name: zod.string().optional(),
				preset: zod.any().optional(),
				section: zod.string().optional(),
				updatedAt: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

export const createPresetQueryBody = zod.object({
	description: zod.string().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
});

export const createPresetQueryResponse = zod.object({
	createdAt: zod.string().optional(),
	description: zod.string().optional(),
	id: zod.number().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
	updatedAt: zod.string().optional(),
});

export const deletePresetQueryParams = zod.object({
	id: zod.number(),
});

export const deletePresetQueryResponse = zod.object({
	createdAt: zod.string().optional(),
	description: zod.string().optional(),
	id: zod.number().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
	updatedAt: zod.string().optional(),
});

export const readPresetQueryParams = zod.object({
	id: zod.number(),
});

export const readPresetQueryResponse = zod.object({
	createdAt: zod.string().optional(),
	description: zod.string().optional(),
	id: zod.number().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
	updatedAt: zod.string().optional(),
});

export const patchPresetQueryParams = zod.object({
	id: zod.number(),
});

export const patchPresetQueryBody = zod.object({
	description: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
});

export const patchPresetQueryResponse = zod.object({
	createdAt: zod.string().optional(),
	description: zod.string().optional(),
	id: zod.number().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
	updatedAt: zod.string().optional(),
});

export const updatePresetQueryParams = zod.object({
	id: zod.number(),
});

export const updatePresetQueryBody = zod.object({
	description: zod.string().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
});

export const updatePresetQueryResponse = zod.object({
	createdAt: zod.string().optional(),
	description: zod.string().optional(),
	id: zod.number().optional(),
	name: zod.string().optional(),
	preset: zod.any().optional(),
	section: zod.string().optional(),
	updatedAt: zod.string().optional(),
});
