/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary Search for Contacts engaged Label(s).
 */
export const labelsGetLabelsQueryParams = zod.object({
	page: zod
		.number()
		.optional()
		.describe(
			'Page number of result dataset records. offset = ((page-1)*size)',
		),
	size: zod
		.number()
		.optional()
		.describe('Size count of records on result page. limit = (size+1)'),
	q: zod
		.string()
		.optional()
		.describe(
			'Search term: label.\n`?` - matches any one character\n`*` - matches 0 or more characters',
		),
});

export const labelsGetLabelsResponse = zod
	.object({
		labels: zod
			.array(
				zod.object({
					label: zod
						.string()
						.optional()
						.describe(
							'Label tag.\n\nCount of sources.\nint32 count = 2;\n Sources of Contacts assigned.\nrepeated string sources = 3;',
						),
				}),
			)
			.optional(),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Page number of partial result.'),
		sources: zod
			.array(
				zod
					.object({
						id: zod.string().optional().describe('Reference Object unique ID.'),
						name: zod
							.string()
							.optional()
							.describe('Reference Object display name.'),
						type: zod
							.string()
							.optional()
							.describe('Reference Object well-known type.'),
					})
					.describe(
						'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
					),
			)
			.optional(),
	})
	.describe("LabelTags dataset list of label's info.");

/**
 * @summary Remove Contact Labels associations.
 */
export const labelsDeleteLabelsParams = zod.object({
	contact_id: zod.string().describe('Link contact ID.'),
});

export const labelsDeleteLabelsQueryEtagItemRegExp = /^(\w+)(,\w+)*$/;

export const labelsDeleteLabelsQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved into result.'),
	etag: zod
		.array(zod.string().regex(labelsDeleteLabelsQueryEtagItemRegExp))
		.describe('Set of unique label(s).etag identifiers.'),
});

export const labelsDeleteLabelsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						createdAt: zod
							.string()
							.optional()
							.describe('The user who created this Field.'),
						createdBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
							),
						id: zod
							.string()
							.optional()
							.describe('The unique ID of the association. Never changes.'),
						label: zod
							.string()
							.optional()
							.describe(
								'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
							),
						updatedAt: zod
							.string()
							.optional()
							.describe(
								'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
							),
						updatedBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						ver: zod
							.number()
							.optional()
							.describe('Version of the latest update. Numeric sequence.'),
					})
					.describe("A Contact's associated Tag.\nOutput purpose only."),
			)
			.optional()
			.describe('Label(s) dataset page.'),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Page number of partial result.'),
	})
	.describe(
		'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
	);

/**
 * @summary Locate the Contact's associated Label(s).
 */
export const labelsListLabelsParams = zod.object({
	contact_id: zod.string().describe('Link contact ID.'),
});

export const labelsListLabelsQueryParams = zod.object({
	page: zod
		.number()
		.optional()
		.describe(
			'Page number of result dataset records. offset = ((page-1)*size)',
		),
	size: zod
		.number()
		.optional()
		.describe('Size count of records on result page. limit = (size+1)'),
	q: zod
		.string()
		.optional()
		.describe(
			'Search term: label tag.\n`?` - matches any one character\n`*` - matches 0 or more characters',
		),
	sort: zod
		.array(zod.string())
		.optional()
		.describe('Sort the result according to fields.'),
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved into result.'),
	id: zod
		.array(zod.string())
		.optional()
		.describe('Record(s) with unique ID or ETag.'),
});

export const labelsListLabelsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						createdAt: zod
							.string()
							.optional()
							.describe('The user who created this Field.'),
						createdBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
							),
						id: zod
							.string()
							.optional()
							.describe('The unique ID of the association. Never changes.'),
						label: zod
							.string()
							.optional()
							.describe(
								'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
							),
						updatedAt: zod
							.string()
							.optional()
							.describe(
								'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
							),
						updatedBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						ver: zod
							.number()
							.optional()
							.describe('Version of the latest update. Numeric sequence.'),
					})
					.describe("A Contact's associated Tag.\nOutput purpose only."),
			)
			.optional()
			.describe('Label(s) dataset page.'),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Page number of partial result.'),
	})
	.describe(
		'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
	);

/**
 * @summary Associate NEW Labels to the Contact.
 */
export const labelsMergeLabelsParams = zod.object({
	contact_id: zod.string().describe('Link contact ID.'),
});

export const labelsMergeLabelsQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved into result.'),
});

export const labelsMergeLabelsBodyItem = zod
	.object({
		etag: zod
			.string()
			.optional()
			.describe('Unique ID of the latest version of an existing resorce.'),
		label: zod
			.string()
			.optional()
			.describe(
				'REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
			),
	})
	.describe("A Contact's associated Tag.\nOutput purpose only.");
export const labelsMergeLabelsBody = zod
	.array(labelsMergeLabelsBodyItem)
	.min(1);

export const labelsMergeLabelsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						createdAt: zod
							.string()
							.optional()
							.describe('The user who created this Field.'),
						createdBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
							),
						id: zod
							.string()
							.optional()
							.describe('The unique ID of the association. Never changes.'),
						label: zod
							.string()
							.optional()
							.describe(
								'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
							),
						updatedAt: zod
							.string()
							.optional()
							.describe(
								'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
							),
						updatedBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						ver: zod
							.number()
							.optional()
							.describe('Version of the latest update. Numeric sequence.'),
					})
					.describe("A Contact's associated Tag.\nOutput purpose only."),
			)
			.optional()
			.describe('Label(s) dataset page.'),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Page number of partial result.'),
	})
	.describe(
		'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
	);

/**
 * @summary Reset Labels to fit the specified final set.
 */
export const labelsResetLabelsParams = zod.object({
	contact_id: zod.string().describe('Link contact ID.'),
});

export const labelsResetLabelsQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved into result.'),
});

export const labelsResetLabelsBodyItem = zod
	.object({
		etag: zod
			.string()
			.optional()
			.describe('Unique ID of the latest version of an existing resorce.'),
		label: zod
			.string()
			.optional()
			.describe(
				'REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
			),
	})
	.describe("A Contact's associated Tag.\nOutput purpose only.");
export const labelsResetLabelsBody = zod.array(labelsResetLabelsBodyItem);

export const labelsResetLabelsResponse = zod
	.object({
		data: zod
			.array(
				zod
					.object({
						createdAt: zod
							.string()
							.optional()
							.describe('The user who created this Field.'),
						createdBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						etag: zod
							.string()
							.optional()
							.describe(
								'Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).',
							),
						id: zod
							.string()
							.optional()
							.describe('The unique ID of the association. Never changes.'),
						label: zod
							.string()
							.optional()
							.describe(
								'REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.',
							),
						updatedAt: zod
							.string()
							.optional()
							.describe(
								'Timestamp(milli) of the last Field update.\nTake part in Etag generation.',
							),
						updatedBy: zod
							.object({
								id: zod
									.string()
									.optional()
									.describe('Reference Object unique ID.'),
								name: zod
									.string()
									.optional()
									.describe('Reference Object display name.'),
								type: zod
									.string()
									.optional()
									.describe('Reference Object well-known type.'),
							})
							.optional()
							.describe(
								'Lookup reference information.\nSimplified search filter to uniquely identify related object.',
							),
						ver: zod
							.number()
							.optional()
							.describe('Version of the latest update. Numeric sequence.'),
					})
					.describe("A Contact's associated Tag.\nOutput purpose only."),
			)
			.optional()
			.describe('Label(s) dataset page.'),
		next: zod.boolean().optional(),
		page: zod.number().optional().describe('Page number of partial result.'),
	})
	.describe(
		'LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.',
	);
