/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

export const searchCognitiveProfileQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.string()).optional(),
	service: zod.array(zod.enum(['DefaultService', 'STT', 'TTS'])).optional(),
	enabled: zod.boolean().optional(),
});

export const searchCognitiveProfileResponseItemsItemProviderDefault =
	'DefaultProvider';
export const searchCognitiveProfileResponseItemsItemServiceDefault =
	'DefaultService';

export const searchCognitiveProfileResponse = zod.object({
	items: zod
		.array(
			zod.object({
				createdAt: zod.string().optional(),
				createdBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				default: zod.boolean().optional(),
				description: zod.string().optional(),
				enabled: zod.boolean().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				provider: zod
					.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
					.default(searchCognitiveProfileResponseItemsItemProviderDefault),
				service: zod
					.enum(['DefaultService', 'STT', 'TTS'])
					.default(searchCognitiveProfileResponseItemsItemServiceDefault),
				updatedAt: zod.string().optional(),
				updatedBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

export const createCognitiveProfileBodyProviderDefault = 'DefaultProvider';
export const createCognitiveProfileBodyServiceDefault = 'DefaultService';

export const createCognitiveProfileBody = zod
	.object({
		default: zod.boolean().optional(),
		description: zod.string().optional(),
		enabled: zod.boolean().optional(),
		name: zod.string(),
		provider: zod.enum([
			'DefaultProvider',
			'Microsoft',
			'Google',
			'ElevenLabs',
		]),
		service: zod.enum(['DefaultService', 'STT', 'TTS']),
	})
	.describe('Create cognitive profile request body for TTS and TTS');

export const createCognitiveProfileResponseProviderDefault = 'DefaultProvider';
export const createCognitiveProfileResponseServiceDefault = 'DefaultService';

export const createCognitiveProfileResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(createCognitiveProfileResponseProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(createCognitiveProfileResponseServiceDefault),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Remove BackendProfile
 */
export const deleteCognitiveProfileParams = zod.object({
	id: zod.string(),
});

export const deleteCognitiveProfileResponseProviderDefault = 'DefaultProvider';
export const deleteCognitiveProfileResponseServiceDefault = 'DefaultService';

export const deleteCognitiveProfileResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(deleteCognitiveProfileResponseProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(deleteCognitiveProfileResponseServiceDefault),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const readCognitiveProfileParams = zod.object({
	id: zod.string(),
});

export const readCognitiveProfileResponseProviderDefault = 'DefaultProvider';
export const readCognitiveProfileResponseServiceDefault = 'DefaultService';

export const readCognitiveProfileResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(readCognitiveProfileResponseProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(readCognitiveProfileResponseServiceDefault),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const patchCognitiveProfileParams = zod.object({
	id: zod.string(),
});

export const patchCognitiveProfileBodyProviderDefault = 'DefaultProvider';
export const patchCognitiveProfileBodyServiceDefault = 'DefaultService';

export const patchCognitiveProfileBody = zod.object({
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	fields: zod.array(zod.string()).optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(patchCognitiveProfileBodyProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(patchCognitiveProfileBodyServiceDefault),
});

export const patchCognitiveProfileResponseProviderDefault = 'DefaultProvider';
export const patchCognitiveProfileResponseServiceDefault = 'DefaultService';

export const patchCognitiveProfileResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(patchCognitiveProfileResponseProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(patchCognitiveProfileResponseServiceDefault),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const updateCognitiveProfileParams = zod.object({
	id: zod.string(),
});

export const updateCognitiveProfileBodyProviderDefault = 'DefaultProvider';
export const updateCognitiveProfileBodyServiceDefault = 'DefaultService';

export const updateCognitiveProfileBody = zod.object({
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(updateCognitiveProfileBodyProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(updateCognitiveProfileBodyServiceDefault),
});

export const updateCognitiveProfileResponseProviderDefault = 'DefaultProvider';
export const updateCognitiveProfileResponseServiceDefault = 'DefaultService';

export const updateCognitiveProfileResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	enabled: zod.boolean().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	provider: zod
		.enum(['DefaultProvider', 'Microsoft', 'Google', 'ElevenLabs'])
		.default(updateCognitiveProfileResponseProviderDefault),
	service: zod
		.enum(['DefaultService', 'STT', 'TTS'])
		.default(updateCognitiveProfileResponseServiceDefault),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Search Voices
 */
export const searchCognitiveProfileVoicesParams = zod.object({
	id: zod.string(),
});

export const searchCognitiveProfileVoicesQueryParams = zod.object({
	q: zod.string().optional(),
	key: zod.string().optional(),
});

export const searchCognitiveProfileVoicesResponse = zod.object({
	items: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
});
