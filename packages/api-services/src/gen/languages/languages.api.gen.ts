/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	AddContactLanguagesParams,
	ContactsInputLanguage,
	ContactsLanguage,
	ContactsLanguageList,
	DelContactLanguageParams,
	DelContactLanguagesParams,
	GetContactLanguagesParams,
	SetContactLanguage2Body,
	SetContactLanguage2Params,
	SetContactLanguageBody,
	SetContactLanguageParams,
	SetContactLanguagesParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getLanguages =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove the Contact's language association(s).
			 */
			const delContactLanguages = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				params: DelContactLanguagesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/languages`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List of the Contact's language association(s).
			 */
			const getContactLanguages = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				params?: GetContactLanguagesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/languages`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Associate more language(s) with the Contact.
			 */
			const addContactLanguages = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				contactsInputLanguage: ContactsInputLanguage[],
				params?: AddContactLanguagesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/languages`,
					contactsInputLanguage,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Reset all Contact's languages to fit the specified fixed set.
			 */
			const setContactLanguages = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				contactsInputLanguage: ContactsInputLanguage[],
				params?: SetContactLanguagesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/languages`,
					contactsInputLanguage,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Remove the Contact's language association.
			 */
			const delContactLanguage = <TData = AxiosResponse<ContactsLanguage>>(
				contactId: string,
				etag: string,
				params?: DelContactLanguageParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/languages/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update the Contact's language association details.
			 */
			const setContactLanguage2 = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				etag: string,
				setContactLanguage2Body: SetContactLanguage2Body,
				params?: SetContactLanguage2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/languages/${etag}`,
					setContactLanguage2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update the Contact's language association details.
			 */
			const setContactLanguage = <TData = AxiosResponse<ContactsLanguageList>>(
				contactId: string,
				etag: string,
				setContactLanguageBody: SetContactLanguageBody,
				params?: SetContactLanguageParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/languages/${etag}`,
					setContactLanguageBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				delContactLanguages,
				getContactLanguages,
				addContactLanguages,
				setContactLanguages,
				delContactLanguage,
				setContactLanguage2,
				setContactLanguage,
			};
		};
export type DelContactLanguagesResult = AxiosResponse<ContactsLanguageList>;
export type GetContactLanguagesResult = AxiosResponse<ContactsLanguageList>;
export type AddContactLanguagesResult = AxiosResponse<ContactsLanguageList>;
export type SetContactLanguagesResult = AxiosResponse<ContactsLanguageList>;
export type DelContactLanguageResult = AxiosResponse<ContactsLanguage>;
export type SetContactLanguage2Result = AxiosResponse<ContactsLanguageList>;
export type SetContactLanguageResult = AxiosResponse<ContactsLanguageList>;

// --- footer end
