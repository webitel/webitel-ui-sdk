/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary List of OutboundResourceGroup
 */
export const searchOutboundResourceGroupQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
});

export const searchOutboundResourceGroupResponse = zod.object({
	items: zod
		.array(
			zod.object({
				communication: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				description: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				strategy: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create OutboundResourceGroup
 */
export const createOutboundResourceGroupBody = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
});

export const createOutboundResourceGroupResponse = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary List of OutboundResourceInGroup
 */
export const searchOutboundResourceInGroupParams = zod.object({
	group_id: zod.string(),
});

export const searchOutboundResourceInGroupQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
});

export const searchOutboundResourceInGroupResponse = zod.object({
	items: zod
		.array(
			zod.object({
				groupId: zod.string().optional(),
				id: zod.string().optional(),
				priority: zod.number().optional(),
				reserveResource: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				resource: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create OutboundResourceGroup
 */
export const createOutboundResourceInGroupParams = zod.object({
	group_id: zod.string(),
});

export const createOutboundResourceInGroupBody = zod.object({
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const createOutboundResourceInGroupResponse = zod.object({
	groupId: zod.string().optional(),
	id: zod.string().optional(),
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Remove OutboundResourceInGroup
 */
export const deleteOutboundResourceInGroupParams = zod.object({
	group_id: zod.string(),
	id: zod.string(),
});

export const deleteOutboundResourceInGroupQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteOutboundResourceInGroupResponse = zod.object({
	groupId: zod.string().optional(),
	id: zod.string().optional(),
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary OutboundResourceInGroup item
 */
export const readOutboundResourceInGroupParams = zod.object({
	group_id: zod.string(),
	id: zod.string(),
});

export const readOutboundResourceInGroupQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readOutboundResourceInGroupResponse = zod.object({
	groupId: zod.string().optional(),
	id: zod.string().optional(),
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Update OutboundResourceInGroup
 */
export const updateOutboundResourceInGroupParams = zod.object({
	group_id: zod.string(),
	id: zod.string(),
});

export const updateOutboundResourceInGroupBody = zod.object({
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const updateOutboundResourceInGroupResponse = zod.object({
	groupId: zod.string().optional(),
	id: zod.string().optional(),
	priority: zod.number().optional(),
	reserveResource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	resource: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Remove OutboundResourceGroup
 */
export const deleteOutboundResourceGroupParams = zod.object({
	id: zod.string(),
});

export const deleteOutboundResourceGroupQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteOutboundResourceGroupResponse = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary OutboundResourceGroup item
 */
export const readOutboundResourceGroupParams = zod.object({
	id: zod.string(),
});

export const readOutboundResourceGroupQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readOutboundResourceGroupResponse = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Update OutboundResourceGroup
 */
export const updateOutboundResourceGroupParams = zod.object({
	id: zod.string(),
});

export const updateOutboundResourceGroupBody = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
});

export const updateOutboundResourceGroupResponse = zod.object({
	communication: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	strategy: zod.string().optional(),
	time: zod
		.array(
			zod.object({
				endTimeOfDay: zod.number().optional(),
				startTimeOfDay: zod.number().optional(),
			}),
		)
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});
