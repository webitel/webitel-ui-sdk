/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	CreateSourceParams,
	ListSourcesParams,
	LocateSourceParams,
	UpdateSource2Params,
	UpdateSourceParams,
	WebitelCasesInputSource,
	WebitelCasesInputSourceBody,
	WebitelCasesLocateSourceResponse,
	WebitelCasesSource,
	WebitelCasesSourceList,
} from '.././_models';

// --- header start
//

export const // --- title start
	getSources =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Retrieve a list of sources or search sources
			 */
			const listSources = <TData = AxiosResponse<WebitelCasesSourceList>>(
				params?: ListSourcesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/cases/sources', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create a new source
			 */
			const createSource = <TData = AxiosResponse<WebitelCasesSource>>(
				webitelCasesInputSourceBody: WebitelCasesInputSourceBody,
				params?: CreateSourceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/cases/sources', webitelCasesInputSourceBody, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Delete a source
			 */
			const deleteSource = <TData = AxiosResponse<WebitelCasesSource>>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/cases/sources/${id}`, options);
			};
			/**
			 * @summary Locate a source by ID
			 */
			const locateSource = <
				TData = AxiosResponse<WebitelCasesLocateSourceResponse>,
			>(
				id: string,
				params?: LocateSourceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/cases/sources/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing source
			 */
			const updateSource2 = <TData = AxiosResponse<WebitelCasesSource>>(
				id: string,
				webitelCasesInputSource: WebitelCasesInputSource,
				params?: UpdateSource2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(`/cases/sources/${id}`, webitelCasesInputSource, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing source
			 */
			const updateSource = <TData = AxiosResponse<WebitelCasesSource>>(
				id: string,
				webitelCasesInputSource: WebitelCasesInputSource,
				params?: UpdateSourceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(`/cases/sources/${id}`, webitelCasesInputSource, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				listSources,
				createSource,
				deleteSource,
				locateSource,
				updateSource2,
				updateSource,
			};
		};
export type ListSourcesResult = AxiosResponse<WebitelCasesSourceList>;
export type CreateSourceResult = AxiosResponse<WebitelCasesSource>;
export type DeleteSourceResult = AxiosResponse<WebitelCasesSource>;
export type LocateSourceResult =
	AxiosResponse<WebitelCasesLocateSourceResponse>;
export type UpdateSource2Result = AxiosResponse<WebitelCasesSource>;
export type UpdateSourceResult = AxiosResponse<WebitelCasesSource>;

// --- footer end
