/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	EngineListQueueHook,
	EngineQueueHook,
	EngineQueueHookServiceCreateQueueHookBody,
	EngineQueueHookServicePatchQueueHookBody,
	EngineQueueHookServiceUpdateQueueHookBody,
	SearchQueueHookParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getQueueHookService =
		// --- title end
		() => {
			// --- header end
			const searchQueueHook = <TData = AxiosResponse<EngineListQueueHook>>(
				queueId: number,
				params?: SearchQueueHookParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/queues/${queueId}/hooks`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createQueueHook = <TData = AxiosResponse<EngineQueueHook>>(
				queueId: number,
				engineQueueHookServiceCreateQueueHookBody: EngineQueueHookServiceCreateQueueHookBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/call_center/queues/${queueId}/hooks`,
					engineQueueHookServiceCreateQueueHookBody,
					options,
				);
			};
			const deleteQueueHook = <TData = AxiosResponse<EngineQueueHook>>(
				queueId: number,
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(
					`/call_center/queues/${queueId}/hooks/${id}`,
					options,
				);
			};
			const readQueueHook = <TData = AxiosResponse<EngineQueueHook>>(
				queueId: number,
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/queues/${queueId}/hooks/${id}`, options);
			};
			const patchQueueHook = <TData = AxiosResponse<EngineQueueHook>>(
				queueId: number,
				id: number,
				engineQueueHookServicePatchQueueHookBody: EngineQueueHookServicePatchQueueHookBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/call_center/queues/${queueId}/hooks/${id}`,
					engineQueueHookServicePatchQueueHookBody,
					options,
				);
			};
			const updateQueueHook = <TData = AxiosResponse<EngineQueueHook>>(
				queueId: number,
				id: number,
				engineQueueHookServiceUpdateQueueHookBody: EngineQueueHookServiceUpdateQueueHookBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/call_center/queues/${queueId}/hooks/${id}`,
					engineQueueHookServiceUpdateQueueHookBody,
					options,
				);
			};

			// --- footer start
			return {
				searchQueueHook,
				createQueueHook,
				deleteQueueHook,
				readQueueHook,
				patchQueueHook,
				updateQueueHook,
			};
		};
export type SearchQueueHookResult = AxiosResponse<EngineListQueueHook>;
export type CreateQueueHookResult = AxiosResponse<EngineQueueHook>;
export type DeleteQueueHookResult = AxiosResponse<EngineQueueHook>;
export type ReadQueueHookResult = AxiosResponse<EngineQueueHook>;
export type PatchQueueHookResult = AxiosResponse<EngineQueueHook>;
export type UpdateQueueHookResult = AxiosResponse<EngineQueueHook>;

// --- footer end
