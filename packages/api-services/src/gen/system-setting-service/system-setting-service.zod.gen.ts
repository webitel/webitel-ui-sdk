/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

export const searchSystemSettingQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	name: zod
		.array(
			zod.enum([
				'empty_system_settings_name',
				'enable_omnichannel',
				'member_chunk_size',
				'amd_cancel_not_human',
				'scheme_version_limit',
				'enable_2fa',
				'export_settings',
				'search_number_length',
				'chat_ai_connection',
				'password_reg_exp',
				'password_validation_text',
				'autolink_call_to_contact',
				'period_to_playback_records',
				'is_fulltext_search_enabled',
				'wbt_hide_contact',
				'show_full_contact',
				'call_end_sound_notification',
				'call_end_push_notification',
				'chat_end_sound_notification',
				'chat_end_push_notification',
				'task_end_sound_notification',
				'task_end_push_notification',
				'push_notification_timeout',
				'labels_to_limit_contacts',
			]),
		)
		.optional()
		.describe('Filter by setting names'),
});

export const searchSystemSettingResponseItemsItemNameDefault =
	'empty_system_settings_name';

export const searchSystemSettingResponse = zod.object({
	items: zod
		.array(
			zod.object({
				id: zod.number().optional(),
				name: zod
					.enum([
						'empty_system_settings_name',
						'enable_omnichannel',
						'member_chunk_size',
						'amd_cancel_not_human',
						'scheme_version_limit',
						'enable_2fa',
						'export_settings',
						'search_number_length',
						'chat_ai_connection',
						'password_reg_exp',
						'password_validation_text',
						'autolink_call_to_contact',
						'period_to_playback_records',
						'is_fulltext_search_enabled',
						'wbt_hide_contact',
						'show_full_contact',
						'call_end_sound_notification',
						'call_end_push_notification',
						'chat_end_sound_notification',
						'chat_end_push_notification',
						'task_end_sound_notification',
						'task_end_push_notification',
						'push_notification_timeout',
						'labels_to_limit_contacts',
					])
					.default(searchSystemSettingResponseItemsItemNameDefault),
				value: zod.any().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

export const createSystemSettingBodyNameDefault = 'empty_system_settings_name';

export const createSystemSettingBody = zod.object({
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(createSystemSettingBodyNameDefault),
	value: zod.any().optional(),
});

export const createSystemSettingResponseNameDefault =
	'empty_system_settings_name';

export const createSystemSettingResponse = zod.object({
	id: zod.number().optional(),
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(createSystemSettingResponseNameDefault),
	value: zod.any().optional(),
});

export const searchAvailableSystemSettingQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
});

export const searchAvailableSystemSettingResponse = zod.object({
	items: zod
		.array(
			zod.object({
				name: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

export const deleteSystemSettingParams = zod.object({
	id: zod.number(),
});

export const deleteSystemSettingResponseNameDefault =
	'empty_system_settings_name';

export const deleteSystemSettingResponse = zod.object({
	id: zod.number().optional(),
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(deleteSystemSettingResponseNameDefault),
	value: zod.any().optional(),
});

export const readSystemSettingParams = zod.object({
	id: zod.number(),
});

export const readSystemSettingResponseNameDefault =
	'empty_system_settings_name';

export const readSystemSettingResponse = zod.object({
	id: zod.number().optional(),
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(readSystemSettingResponseNameDefault),
	value: zod.any().optional(),
});

export const patchSystemSettingParams = zod.object({
	id: zod.number(),
});

export const patchSystemSettingBody = zod.object({
	fields: zod.array(zod.string()).optional(),
	value: zod.any().optional(),
});

export const patchSystemSettingResponseNameDefault =
	'empty_system_settings_name';

export const patchSystemSettingResponse = zod.object({
	id: zod.number().optional(),
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(patchSystemSettingResponseNameDefault),
	value: zod.any().optional(),
});

export const updateSystemSettingParams = zod.object({
	id: zod.number(),
});

export const updateSystemSettingBody = zod.object({
	value: zod.any().optional(),
});

export const updateSystemSettingResponseNameDefault =
	'empty_system_settings_name';

export const updateSystemSettingResponse = zod.object({
	id: zod.number().optional(),
	name: zod
		.enum([
			'empty_system_settings_name',
			'enable_omnichannel',
			'member_chunk_size',
			'amd_cancel_not_human',
			'scheme_version_limit',
			'enable_2fa',
			'export_settings',
			'search_number_length',
			'chat_ai_connection',
			'password_reg_exp',
			'password_validation_text',
			'autolink_call_to_contact',
			'period_to_playback_records',
			'is_fulltext_search_enabled',
			'wbt_hide_contact',
			'show_full_contact',
			'call_end_sound_notification',
			'call_end_push_notification',
			'chat_end_sound_notification',
			'chat_end_push_notification',
			'task_end_sound_notification',
			'task_end_push_notification',
			'push_notification_timeout',
			'labels_to_limit_contacts',
		])
		.default(updateSystemSettingResponseNameDefault),
	value: zod.any().optional(),
});
