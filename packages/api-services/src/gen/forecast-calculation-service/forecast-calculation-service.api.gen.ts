/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ForecastCalculationServiceExecuteForecastCalculationParams,
	ForecastCalculationServiceReadForecastCalculationParams,
	ForecastCalculationServiceSearchForecastCalculationParams,
	ForecastCalculationServiceUpdateForecastCalculationBody,
	WfmCreateForecastCalculationRequest,
	WfmCreateForecastCalculationResponse,
	WfmDeleteForecastCalculationResponse,
	WfmExecuteForecastCalculationResponse,
	WfmReadForecastCalculationResponse,
	WfmSearchForecastCalculationResponse,
	WfmUpdateForecastCalculationResponse,
} from '.././_models';

// --- header start
//

export const // --- title start
	getForecastCalculationService =
		// --- title end
		() => {
			// --- header end
			const forecastCalculationServiceSearchForecastCalculation = <
				TData = AxiosResponse<WfmSearchForecastCalculationResponse>,
			>(
				params?: ForecastCalculationServiceSearchForecastCalculationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/wfm/lookups/forecast_calculation', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const forecastCalculationServiceCreateForecastCalculation = <
				TData = AxiosResponse<WfmCreateForecastCalculationResponse>,
			>(
				wfmCreateForecastCalculationRequest: WfmCreateForecastCalculationRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/wfm/lookups/forecast_calculation',
					wfmCreateForecastCalculationRequest,
					options,
				);
			};
			const forecastCalculationServiceDeleteForecastCalculation = <
				TData = AxiosResponse<WfmDeleteForecastCalculationResponse>,
			>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/wfm/lookups/forecast_calculation/${id}`, options);
			};
			const forecastCalculationServiceReadForecastCalculation = <
				TData = AxiosResponse<WfmReadForecastCalculationResponse>,
			>(
				id: string,
				params?: ForecastCalculationServiceReadForecastCalculationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/wfm/lookups/forecast_calculation/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const forecastCalculationServiceExecuteForecastCalculation = <
				TData = AxiosResponse<WfmExecuteForecastCalculationResponse>,
			>(
				id: string,
				params?: ForecastCalculationServiceExecuteForecastCalculationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/wfm/lookups/forecast_calculation/${id}/execute`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const forecastCalculationServiceUpdateForecastCalculation = <
				TData = AxiosResponse<WfmUpdateForecastCalculationResponse>,
			>(
				forecastCalculationServiceUpdateForecastCalculationBody: ForecastCalculationServiceUpdateForecastCalculationBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/wfm/lookups/forecast_calculation/item.id}',
					forecastCalculationServiceUpdateForecastCalculationBody,
					options,
				);
			};

			// --- footer start
			return {
				forecastCalculationServiceSearchForecastCalculation,
				forecastCalculationServiceCreateForecastCalculation,
				forecastCalculationServiceDeleteForecastCalculation,
				forecastCalculationServiceReadForecastCalculation,
				forecastCalculationServiceExecuteForecastCalculation,
				forecastCalculationServiceUpdateForecastCalculation,
			};
		};
export type ForecastCalculationServiceSearchForecastCalculationResult =
	AxiosResponse<WfmSearchForecastCalculationResponse>;
export type ForecastCalculationServiceCreateForecastCalculationResult =
	AxiosResponse<WfmCreateForecastCalculationResponse>;
export type ForecastCalculationServiceDeleteForecastCalculationResult =
	AxiosResponse<WfmDeleteForecastCalculationResponse>;
export type ForecastCalculationServiceReadForecastCalculationResult =
	AxiosResponse<WfmReadForecastCalculationResponse>;
export type ForecastCalculationServiceExecuteForecastCalculationResult =
	AxiosResponse<WfmExecuteForecastCalculationResponse>;
export type ForecastCalculationServiceUpdateForecastCalculationResult =
	AxiosResponse<WfmUpdateForecastCalculationResponse>;

// --- footer end
