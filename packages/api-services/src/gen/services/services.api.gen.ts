/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	CreateServiceParams,
	ListServicesParams,
	LocateServiceParams,
	UpdateService2Params,
	UpdateServiceParams,
	WebitelCasesInputCreateService,
	WebitelCasesInputService,
	WebitelCasesLocateServiceResponse,
	WebitelCasesService,
	WebitelCasesServiceList,
} from '.././_models';

// --- header start
//

export const // --- title start
	getServices =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Retrieve a list of services or search services within a catalog
			 */
			const listServices = <TData = AxiosResponse<WebitelCasesServiceList>>(
				params?: ListServicesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/cases/services', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create a new service within a catalog
			 */
			const createService = <TData = AxiosResponse<WebitelCasesService>>(
				webitelCasesInputCreateService: WebitelCasesInputCreateService,
				params?: CreateServiceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/cases/services', webitelCasesInputCreateService, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Delete a service
			 */
			const deleteService = <TData = AxiosResponse<WebitelCasesServiceList>>(
				id: string[],
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/cases/services/${id}`, options);
			};
			/**
			 * @summary Locate a service by ID
			 */
			const locateService = <
				TData = AxiosResponse<WebitelCasesLocateServiceResponse>,
			>(
				id: string,
				params?: LocateServiceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/cases/services/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing service
			 */
			const updateService2 = <TData = AxiosResponse<WebitelCasesService>>(
				id: string,
				webitelCasesInputService: WebitelCasesInputService,
				params?: UpdateService2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(`/cases/services/${id}`, webitelCasesInputService, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing service
			 */
			const updateService = <TData = AxiosResponse<WebitelCasesService>>(
				id: string,
				webitelCasesInputService: WebitelCasesInputService,
				params?: UpdateServiceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(`/cases/services/${id}`, webitelCasesInputService, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				listServices,
				createService,
				deleteService,
				locateService,
				updateService2,
				updateService,
			};
		};
export type ListServicesResult = AxiosResponse<WebitelCasesServiceList>;
export type CreateServiceResult = AxiosResponse<WebitelCasesService>;
export type DeleteServiceResult = AxiosResponse<WebitelCasesServiceList>;
export type LocateServiceResult =
	AxiosResponse<WebitelCasesLocateServiceResponse>;
export type UpdateService2Result = AxiosResponse<WebitelCasesService>;
export type UpdateServiceResult = AxiosResponse<WebitelCasesService>;

// --- footer end
