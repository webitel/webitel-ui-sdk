/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

/**
 * @summary Broadcast message send message from via to peer recipients.
 */
export const broadcastMessageBody = zod.object({
	message: zod
		.object({
			file: zod
				.object({
					id: zod.string().optional(),
					url: zod.string().optional(),
				})
				.optional(),
			keyboard: zod
				.object({
					rows: zod
						.array(
							zod.object({
								buttons: zod
									.array(
										zod.object({
											caption: zod.string().optional(),
											code: zod.string().optional(),
											text: zod.string().optional(),
											type: zod.string().optional(),
											url: zod.string().optional(),
										}),
									)
									.optional(),
							}),
						)
						.optional(),
				})
				.optional(),
			text: zod.string().optional(),
		})
		.optional(),
	peers: zod
		.array(
			zod
				.object({
					id: zod.string().optional(),
					type: zod.string().optional(),
					via: zod.string().optional(),
				})
				.describe('InputPeer identity.'),
		)
		.optional(),
	timeout: zod.string().optional(),
	variables: zod.record(zod.string(), zod.string()).optional(),
});

export const broadcastMessageResponse = zod.object({
	failure: zod
		.array(
			zod.object({
				error: zod
					.object({
						code: zod.number().optional(),
						details: zod
							.array(
								zod.object({
									'@type': zod.string().optional(),
								}),
							)
							.optional(),
						message: zod.string().optional(),
					})
					.optional(),
				peerId: zod.string().optional(),
			}),
		)
		.optional(),
	variables: zod.record(zod.string(), zod.string()).optional(),
});
