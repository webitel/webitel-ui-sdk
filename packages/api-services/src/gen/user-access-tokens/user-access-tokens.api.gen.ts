/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiUserAccessToken,
	ApiUserAccessTokenList,
	UserAccessTokensAddUserAccessTokenBody,
	UserAccessTokensAddUserAccessTokenParams,
	UserAccessTokensDeleteUserAccessTokenParams,
	UserAccessTokensGetUserAccessTokenParams,
	UserAccessTokensListUserAccessTokenParams,
	UserAccessTokensUpdateUserAccessToken2Body,
	UserAccessTokensUpdateUserAccessToken2Params,
	UserAccessTokensUpdateUserAccessTokenBody,
	UserAccessTokensUpdateUserAccessTokenParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getUserAccessTokens =
		// --- title end
		() => {
			// --- header end
			const userAccessTokensAddUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				userAccessTokensAddUserAccessTokenBody: UserAccessTokensAddUserAccessTokenBody,
				params?: UserAccessTokensAddUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/users/token.user.id}/tokens',
					userAccessTokensAddUserAccessTokenBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const userAccessTokensUpdateUserAccessToken2 = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				userAccessTokensUpdateUserAccessToken2Body: UserAccessTokensUpdateUserAccessToken2Body,
				params?: UserAccessTokensUpdateUserAccessToken2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					'/users/update.user.id}/tokens/update.id}',
					userAccessTokensUpdateUserAccessToken2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const userAccessTokensUpdateUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				userAccessTokensUpdateUserAccessTokenBody: UserAccessTokensUpdateUserAccessTokenBody,
				params?: UserAccessTokensUpdateUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/users/update.user.id}/tokens/update.id}',
					userAccessTokensUpdateUserAccessTokenBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const userAccessTokensListUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessTokenList>,
			>(
				params?: UserAccessTokensListUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/users/user.id}/tokens', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const userAccessTokensDeleteUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				id: string,
				params?: UserAccessTokensDeleteUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/users/user.id}/tokens/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const userAccessTokensGetUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				id: string,
				params?: UserAccessTokensGetUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/users/user.id}/tokens/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				userAccessTokensAddUserAccessToken,
				userAccessTokensUpdateUserAccessToken2,
				userAccessTokensUpdateUserAccessToken,
				userAccessTokensListUserAccessToken,
				userAccessTokensDeleteUserAccessToken,
				userAccessTokensGetUserAccessToken,
			};
		};
export type UserAccessTokensAddUserAccessTokenResult =
	AxiosResponse<ApiUserAccessToken>;
export type UserAccessTokensUpdateUserAccessToken2Result =
	AxiosResponse<ApiUserAccessToken>;
export type UserAccessTokensUpdateUserAccessTokenResult =
	AxiosResponse<ApiUserAccessToken>;
export type UserAccessTokensListUserAccessTokenResult =
	AxiosResponse<ApiUserAccessTokenList>;
export type UserAccessTokensDeleteUserAccessTokenResult =
	AxiosResponse<ApiUserAccessToken>;
export type UserAccessTokensGetUserAccessTokenResult =
	AxiosResponse<ApiUserAccessToken>;

// --- footer end
