/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	AddUserAccessTokenBody,
	AddUserAccessTokenParams,
	ApiUserAccessToken,
	ApiUserAccessTokenList,
	DeleteUserAccessTokenParams,
	GetUserAccessTokenParams,
	ListUserAccessTokenParams,
	UpdateUserAccessToken2Body,
	UpdateUserAccessToken2Params,
	UpdateUserAccessTokenBody,
	UpdateUserAccessTokenParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getUserAccessTokens =
		// --- title end
		() => {
			// --- header end
			const addUserAccessToken = <TData = AxiosResponse<ApiUserAccessToken>>(
				addUserAccessTokenBody: AddUserAccessTokenBody,
				params?: AddUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/users/token.user.id}/tokens',
					addUserAccessTokenBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const updateUserAccessToken2 = <
				TData = AxiosResponse<ApiUserAccessToken>,
			>(
				updateUserAccessToken2Body: UpdateUserAccessToken2Body,
				params?: UpdateUserAccessToken2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					'/users/update.user.id}/tokens/update.id}',
					updateUserAccessToken2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const updateUserAccessToken = <TData = AxiosResponse<ApiUserAccessToken>>(
				updateUserAccessTokenBody: UpdateUserAccessTokenBody,
				params?: UpdateUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/users/update.user.id}/tokens/update.id}',
					updateUserAccessTokenBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			const listUserAccessToken = <
				TData = AxiosResponse<ApiUserAccessTokenList>,
			>(
				params?: ListUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/users/user.id}/tokens', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const deleteUserAccessToken = <TData = AxiosResponse<ApiUserAccessToken>>(
				id: string,
				params?: DeleteUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/users/user.id}/tokens/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const getUserAccessToken = <TData = AxiosResponse<ApiUserAccessToken>>(
				id: string,
				params?: GetUserAccessTokenParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/users/user.id}/tokens/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				addUserAccessToken,
				updateUserAccessToken2,
				updateUserAccessToken,
				listUserAccessToken,
				deleteUserAccessToken,
				getUserAccessToken,
			};
		};
export type AddUserAccessTokenResult = AxiosResponse<ApiUserAccessToken>;
export type UpdateUserAccessToken2Result = AxiosResponse<ApiUserAccessToken>;
export type UpdateUserAccessTokenResult = AxiosResponse<ApiUserAccessToken>;
export type ListUserAccessTokenResult = AxiosResponse<ApiUserAccessTokenList>;
export type DeleteUserAccessTokenResult = AxiosResponse<ApiUserAccessToken>;
export type GetUserAccessTokenResult = AxiosResponse<ApiUserAccessToken>;

// --- footer end
