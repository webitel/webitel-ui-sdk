/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsComment,
	ContactsCommentList,
	ContactsInputComment,
	DeleteCommentParams,
	PublishCommentParams,
	SearchCommentsParams,
	UpdateCommentBody,
	UpdateCommentParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getComments =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Search for Contact Comment(s) ...
			 */
			const searchComments = <TData = AxiosResponse<ContactsCommentList>>(
				contactId: string,
				params?: SearchCommentsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/comments`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Publish comment for a Contact.
			 */
			const publishComment = <TData = AxiosResponse<ContactsComment>>(
				contactId: string,
				contactsInputComment: ContactsInputComment,
				params?: PublishCommentParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/comments`,
					contactsInputComment,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Delete Comment(s) for Contact ...
			 */
			const deleteComment = <TData = AxiosResponse<ContactsComment[]>>(
				contactId: string,
				etag: string[],
				params?: DeleteCommentParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/comments/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update (edit) specific Comment text owned
			 */
			const updateComment = <TData = AxiosResponse<ContactsComment>>(
				contactId: string,
				etag: string,
				updateCommentBody: UpdateCommentBody,
				params?: UpdateCommentParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/comments/${etag}`,
					updateCommentBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return { searchComments, publishComment, deleteComment, updateComment };
		};
export type SearchCommentsResult = AxiosResponse<ContactsCommentList>;
export type PublishCommentResult = AxiosResponse<ContactsComment>;
export type DeleteCommentResult = AxiosResponse<ContactsComment[]>;
export type UpdateCommentResult = AxiosResponse<ContactsComment>;

// --- footer end
