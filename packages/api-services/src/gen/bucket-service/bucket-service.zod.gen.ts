/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary List of Bucket
 */
export const searchBucketQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
});

export const searchBucketResponse = zod.object({
	items: zod
		.array(
			zod.object({
				description: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create Bucket
 */
export const createBucketBody = zod.object({
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
});

export const createBucketResponse = zod.object({
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary Remove Bucket
 */
export const deleteBucketParams = zod.object({
	id: zod.string(),
});

export const deleteBucketQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteBucketResponse = zod.object({
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary Bucket item
 */
export const readBucketParams = zod.object({
	id: zod.string(),
});

export const readBucketQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readBucketResponse = zod.object({
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary Update Bucket
 */
export const updateBucketParams = zod.object({
	id: zod.string(),
});

export const updateBucketBody = zod.object({
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
});

export const updateBucketResponse = zod.object({
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});
