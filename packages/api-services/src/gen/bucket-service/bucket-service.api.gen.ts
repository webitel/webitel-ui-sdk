/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DeleteBucketParams,
	EngineBucket,
	EngineBucketServiceUpdateBucketBody,
	EngineCreateBucketRequest,
	EngineListBucket,
	ReadBucketParams,
	SearchBucketParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getBucketService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of Bucket
			 */
			const searchBucket = <TData = AxiosResponse<EngineListBucket>>(
				params?: SearchBucketParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/call_center/buckets', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create Bucket
			 */
			const createBucket = <TData = AxiosResponse<EngineBucket>>(
				engineCreateBucketRequest: EngineCreateBucketRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/call_center/buckets',
					engineCreateBucketRequest,
					options,
				);
			};
			/**
			 * @summary Remove Bucket
			 */
			const deleteBucket = <TData = AxiosResponse<EngineBucket>>(
				id: string,
				params?: DeleteBucketParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/call_center/buckets/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Bucket item
			 */
			const readBucket = <TData = AxiosResponse<EngineBucket>>(
				id: string,
				params?: ReadBucketParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/buckets/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update Bucket
			 */
			const updateBucket = <TData = AxiosResponse<EngineBucket>>(
				id: string,
				engineBucketServiceUpdateBucketBody: EngineBucketServiceUpdateBucketBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/call_center/buckets/${id}`,
					engineBucketServiceUpdateBucketBody,
					options,
				);
			};

			// --- footer start
			return {
				searchBucket,
				createBucket,
				deleteBucket,
				readBucket,
				updateBucket,
			};
		};
export type SearchBucketResult = AxiosResponse<EngineListBucket>;
export type CreateBucketResult = AxiosResponse<EngineBucket>;
export type DeleteBucketResult = AxiosResponse<EngineBucket>;
export type ReadBucketResult = AxiosResponse<EngineBucket>;
export type UpdateBucketResult = AxiosResponse<EngineBucket>;

// --- footer end
