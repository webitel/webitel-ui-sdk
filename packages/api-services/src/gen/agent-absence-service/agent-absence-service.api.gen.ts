/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	AgentAbsenceServiceCreateAgentAbsenceBody,
	AgentAbsenceServiceSearchAgentAbsenceParams,
	AgentAbsenceServiceSearchAgentsAbsencesParams,
	AgentAbsenceServiceUpdateAgentAbsenceBody,
	WfmCreateAgentAbsenceResponse,
	WfmCreateAgentsAbsencesRequest,
	WfmCreateAgentsAbsencesResponse,
	WfmDeleteAgentAbsenceResponse,
	WfmReadAgentAbsenceResponse,
	WfmSearchAgentAbsenceResponse,
	WfmSearchAgentsAbsencesResponse,
	WfmUpdateAgentAbsenceResponse,
} from '.././_models';

// --- header start
//

export const // --- title start
	getAgentAbsenceService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Searches absences by filters.
			 */
			const agentAbsenceServiceSearchAgentsAbsences = <
				TData = AxiosResponse<WfmSearchAgentsAbsencesResponse>,
			>(
				params?: AgentAbsenceServiceSearchAgentsAbsencesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/wfm/agents/absences', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Creates absences for multiple specified agents.
			 */
			const agentAbsenceServiceCreateAgentsAbsences = <
				TData = AxiosResponse<WfmCreateAgentsAbsencesResponse>,
			>(
				wfmCreateAgentsAbsencesRequest: WfmCreateAgentsAbsencesRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/wfm/agents/absences',
					wfmCreateAgentsAbsencesRequest,
					options,
				);
			};
			/**
			 * @summary Searches agent absences by filters.
			 */
			const agentAbsenceServiceSearchAgentAbsence = <
				TData = AxiosResponse<WfmSearchAgentAbsenceResponse>,
			>(
				agentId: string,
				params?: AgentAbsenceServiceSearchAgentAbsenceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/wfm/agents/${agentId}/absences`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Creates one-day-absence for one agent.
			 */
			const agentAbsenceServiceCreateAgentAbsence = <
				TData = AxiosResponse<WfmCreateAgentAbsenceResponse>,
			>(
				agentId: string,
				agentAbsenceServiceCreateAgentAbsenceBody: AgentAbsenceServiceCreateAgentAbsenceBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/wfm/agents/${agentId}/absences`,
					agentAbsenceServiceCreateAgentAbsenceBody,
					options,
				);
			};
			/**
			 * @summary Deletes agent concrete absence by its id.
			 */
			const agentAbsenceServiceDeleteAgentAbsence = <
				TData = AxiosResponse<WfmDeleteAgentAbsenceResponse>,
			>(
				agentId: string,
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/wfm/agents/${agentId}/absences/${id}`, options);
			};
			/**
			 * @summary Reads one absence per agent by its id.
			 */
			const agentAbsenceServiceReadAgentAbsence = <
				TData = AxiosResponse<WfmReadAgentAbsenceResponse>,
			>(
				agentId: string,
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/wfm/agents/${agentId}/absences/${id}`, options);
			};
			/**
			 * @summary Updates agent concrete absence by its id.
			 */
			const agentAbsenceServiceUpdateAgentAbsence = <
				TData = AxiosResponse<WfmUpdateAgentAbsenceResponse>,
			>(
				agentId: string,
				agentAbsenceServiceUpdateAgentAbsenceBody: AgentAbsenceServiceUpdateAgentAbsenceBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/wfm/agents/${agentId}/absences/item.id}`,
					agentAbsenceServiceUpdateAgentAbsenceBody,
					options,
				);
			};

			// --- footer start
			return {
				agentAbsenceServiceSearchAgentsAbsences,
				agentAbsenceServiceCreateAgentsAbsences,
				agentAbsenceServiceSearchAgentAbsence,
				agentAbsenceServiceCreateAgentAbsence,
				agentAbsenceServiceDeleteAgentAbsence,
				agentAbsenceServiceReadAgentAbsence,
				agentAbsenceServiceUpdateAgentAbsence,
			};
		};
export type AgentAbsenceServiceSearchAgentsAbsencesResult =
	AxiosResponse<WfmSearchAgentsAbsencesResponse>;
export type AgentAbsenceServiceCreateAgentsAbsencesResult =
	AxiosResponse<WfmCreateAgentsAbsencesResponse>;
export type AgentAbsenceServiceSearchAgentAbsenceResult =
	AxiosResponse<WfmSearchAgentAbsenceResponse>;
export type AgentAbsenceServiceCreateAgentAbsenceResult =
	AxiosResponse<WfmCreateAgentAbsenceResponse>;
export type AgentAbsenceServiceDeleteAgentAbsenceResult =
	AxiosResponse<WfmDeleteAgentAbsenceResponse>;
export type AgentAbsenceServiceReadAgentAbsenceResult =
	AxiosResponse<WfmReadAgentAbsenceResponse>;
export type AgentAbsenceServiceUpdateAgentAbsenceResult =
	AxiosResponse<WfmUpdateAgentAbsenceResponse>;

// --- footer end
