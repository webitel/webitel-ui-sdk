/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DeleteRoutingOutboundCallParams,
	EngineCreateRoutingOutboundCallRequest,
	EngineListRoutingOutboundCall,
	EngineMovePositionRoutingOutboundCallResponse,
	EngineRoutingOutboundCall,
	EngineRoutingOutboundCallServiceMovePositionRoutingOutboundCallBody,
	EngineRoutingOutboundCallServicePatchRoutingOutboundCallBody,
	EngineRoutingOutboundCallServiceUpdateRoutingOutboundCallBody,
	ReadRoutingOutboundCallParams,
	SearchRoutingOutboundCallParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getRoutingOutboundCallService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of RoutingOutboundCall
			 */
			const searchRoutingOutboundCall = <
				TData = AxiosResponse<EngineListRoutingOutboundCall>,
			>(
				params?: SearchRoutingOutboundCallParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/routing/outbound/calls', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create RoutingOutboundCall
			 */
			const createRoutingOutboundCall = <
				TData = AxiosResponse<EngineRoutingOutboundCall>,
			>(
				engineCreateRoutingOutboundCallRequest: EngineCreateRoutingOutboundCallRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/routing/outbound/calls',
					engineCreateRoutingOutboundCallRequest,
					options,
				);
			};
			/**
			 * @summary Move RoutingOutboundCall
			 */
			const movePositionRoutingOutboundCall = <
				TData = AxiosResponse<EngineMovePositionRoutingOutboundCallResponse>,
			>(
				fromId: string,
				toId: string,
				engineRoutingOutboundCallServiceMovePositionRoutingOutboundCallBody: EngineRoutingOutboundCallServiceMovePositionRoutingOutboundCallBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/routing/outbound/calls/${fromId}/to/${toId}`,
					engineRoutingOutboundCallServiceMovePositionRoutingOutboundCallBody,
					options,
				);
			};
			/**
			 * @summary Remove RoutingOutboundCall
			 */
			const deleteRoutingOutboundCall = <
				TData = AxiosResponse<EngineRoutingOutboundCall>,
			>(
				id: string,
				params?: DeleteRoutingOutboundCallParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/routing/outbound/calls/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary RoutingOutboundCall item
			 */
			const readRoutingOutboundCall = <
				TData = AxiosResponse<EngineRoutingOutboundCall>,
			>(
				id: string,
				params?: ReadRoutingOutboundCallParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/routing/outbound/calls/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Patch RoutingOutboundCall
			 */
			const patchRoutingOutboundCall = <
				TData = AxiosResponse<EngineRoutingOutboundCall>,
			>(
				id: string,
				engineRoutingOutboundCallServicePatchRoutingOutboundCallBody: EngineRoutingOutboundCallServicePatchRoutingOutboundCallBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/routing/outbound/calls/${id}`,
					engineRoutingOutboundCallServicePatchRoutingOutboundCallBody,
					options,
				);
			};
			/**
			 * @summary Update RoutingOutboundCall
			 */
			const updateRoutingOutboundCall = <
				TData = AxiosResponse<EngineRoutingOutboundCall>,
			>(
				id: string,
				engineRoutingOutboundCallServiceUpdateRoutingOutboundCallBody: EngineRoutingOutboundCallServiceUpdateRoutingOutboundCallBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/routing/outbound/calls/${id}`,
					engineRoutingOutboundCallServiceUpdateRoutingOutboundCallBody,
					options,
				);
			};

			// --- footer start
			return {
				searchRoutingOutboundCall,
				createRoutingOutboundCall,
				movePositionRoutingOutboundCall,
				deleteRoutingOutboundCall,
				readRoutingOutboundCall,
				patchRoutingOutboundCall,
				updateRoutingOutboundCall,
			};
		};
export type SearchRoutingOutboundCallResult =
	AxiosResponse<EngineListRoutingOutboundCall>;
export type CreateRoutingOutboundCallResult =
	AxiosResponse<EngineRoutingOutboundCall>;
export type MovePositionRoutingOutboundCallResult =
	AxiosResponse<EngineMovePositionRoutingOutboundCallResponse>;
export type DeleteRoutingOutboundCallResult =
	AxiosResponse<EngineRoutingOutboundCall>;
export type ReadRoutingOutboundCallResult =
	AxiosResponse<EngineRoutingOutboundCall>;
export type PatchRoutingOutboundCallResult =
	AxiosResponse<EngineRoutingOutboundCall>;
export type UpdateRoutingOutboundCallResult =
	AxiosResponse<EngineRoutingOutboundCall>;

// --- footer end
