/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary List of RoutingOutboundCall
 */
export const searchRoutingOutboundCallQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
	name: zod.string().optional(),
	schemaId: zod.array(zod.number()).optional(),
	pattern: zod.string().optional(),
	description: zod.string().optional(),
});

export const searchRoutingOutboundCallResponse = zod.object({
	items: zod
		.array(
			zod.object({
				description: zod.string().optional(),
				disabled: zod.boolean().optional(),
				domainId: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				pattern: zod.string().optional(),
				position: zod.number().optional(),
				schema: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create RoutingOutboundCall
 */
export const createRoutingOutboundCallBody = zod.object({
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const createRoutingOutboundCallResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Move RoutingOutboundCall
 */
export const movePositionRoutingOutboundCallParams = zod.object({
	from_id: zod.string(),
	to_id: zod.string(),
});

export const movePositionRoutingOutboundCallBody = zod.object({
	domainId: zod.string().optional(),
});

export const movePositionRoutingOutboundCallResponse = zod.object({
	success: zod.boolean().optional(),
});

/**
 * @summary Remove RoutingOutboundCall
 */
export const deleteRoutingOutboundCallParams = zod.object({
	id: zod.string(),
});

export const deleteRoutingOutboundCallQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteRoutingOutboundCallResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary RoutingOutboundCall item
 */
export const readRoutingOutboundCallParams = zod.object({
	id: zod.string(),
});

export const readRoutingOutboundCallQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readRoutingOutboundCallResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Patch RoutingOutboundCall
 */
export const patchRoutingOutboundCallParams = zod.object({
	id: zod.string(),
});

export const patchRoutingOutboundCallBody = zod.object({
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const patchRoutingOutboundCallResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Update RoutingOutboundCall
 */
export const updateRoutingOutboundCallParams = zod.object({
	id: zod.string(),
});

export const updateRoutingOutboundCallBody = zod.object({
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

export const updateRoutingOutboundCallResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	disabled: zod.boolean().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	pattern: zod.string().optional(),
	schema: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});
