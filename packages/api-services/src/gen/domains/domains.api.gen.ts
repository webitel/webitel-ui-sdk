/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiCreateDomainRequest,
	ApiCreateDomainResponse,
	ApiDeleteDomainResponse,
	ApiReadDomainResponse,
	ApiSearchDomainsResponse,
	ApiUpdateDomainResponse,
	DeleteDomain2Params,
	DeleteDomainParams,
	DomainsUpdateDomainBody,
	ReadDomain2Params,
	ReadDomainParams,
	SearchDomainsParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getDomains =
		// --- title end
		() => {
			// --- header end
			const deleteDomain = <TData = AxiosResponse<ApiDeleteDomainResponse>>(
				params?: DeleteDomainParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/domain', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const readDomain = <TData = AxiosResponse<ApiReadDomainResponse>>(
				params?: ReadDomainParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/domain', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const searchDomains = <TData = AxiosResponse<ApiSearchDomainsResponse>>(
				params?: SearchDomainsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/domains', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createDomain = <TData = AxiosResponse<ApiCreateDomainResponse>>(
				apiCreateDomainRequest: ApiCreateDomainRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/domains', apiCreateDomainRequest, options);
			};
			const deleteDomain2 = <TData = AxiosResponse<ApiDeleteDomainResponse>>(
				dc: string,
				params?: DeleteDomain2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/domains/${dc}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const readDomain2 = <TData = AxiosResponse<ApiReadDomainResponse>>(
				dc: string,
				params?: ReadDomain2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/domains/${dc}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const updateDomain2 = <TData = AxiosResponse<ApiUpdateDomainResponse>>(
				domainsUpdateDomainBody: DomainsUpdateDomainBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					'/domains/domain.dc}',
					domainsUpdateDomainBody,
					options,
				);
			};
			const updateDomain = <TData = AxiosResponse<ApiUpdateDomainResponse>>(
				domainsUpdateDomainBody: DomainsUpdateDomainBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/domains/domain.dc}',
					domainsUpdateDomainBody,
					options,
				);
			};

			// --- footer start
			return {
				deleteDomain,
				readDomain,
				searchDomains,
				createDomain,
				deleteDomain2,
				readDomain2,
				updateDomain2,
				updateDomain,
			};
		};
export type DeleteDomainResult = AxiosResponse<ApiDeleteDomainResponse>;
export type ReadDomainResult = AxiosResponse<ApiReadDomainResponse>;
export type SearchDomainsResult = AxiosResponse<ApiSearchDomainsResponse>;
export type CreateDomainResult = AxiosResponse<ApiCreateDomainResponse>;
export type DeleteDomain2Result = AxiosResponse<ApiDeleteDomainResponse>;
export type ReadDomain2Result = AxiosResponse<ApiReadDomainResponse>;
export type UpdateDomain2Result = AxiosResponse<ApiUpdateDomainResponse>;
export type UpdateDomainResult = AxiosResponse<ApiUpdateDomainResponse>;

// --- footer end
