/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	CatalogGetCustomersParams,
	CatalogGetDialogsParams,
	CatalogGetHistory2Params,
	CatalogGetHistoryParams,
	CatalogGetMembersParams,
	WebitelChatChatCustomers,
	WebitelChatChatDialogs,
	WebitelChatChatMembers,
	WebitelChatChatMessages,
} from '.././_models';

// --- header start
//

export const // --- title start
	getCatalog =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Query of external chat customers
			 */
			const catalogGetCustomers = <
				TData = AxiosResponse<WebitelChatChatCustomers>,
			>(
				params?: CatalogGetCustomersParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/chat/customers', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Query of chat conversations
			 */
			const catalogGetDialogs = <TData = AxiosResponse<WebitelChatChatDialogs>>(
				params?: CatalogGetDialogsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/chat/dialogs', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Query of chat participants
			 */
			const catalogGetMembers = <TData = AxiosResponse<WebitelChatChatMembers>>(
				chatId: string,
				params?: CatalogGetMembersParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/chat/dialogs/${chatId}/members`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Query of the chat history
			 */
			const catalogGetHistory = <
				TData = AxiosResponse<WebitelChatChatMessages>,
			>(
				chatId: string,
				params?: CatalogGetHistoryParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/chat/dialogs/${chatId}/messages`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Query of the chat history
			 */
			const catalogGetHistory2 = <
				TData = AxiosResponse<WebitelChatChatMessages>,
			>(
				params?: CatalogGetHistory2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/chat/peer.type}/peer.id}/messages', {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				catalogGetCustomers,
				catalogGetDialogs,
				catalogGetMembers,
				catalogGetHistory,
				catalogGetHistory2,
			};
		};
export type CatalogGetCustomersResult = AxiosResponse<WebitelChatChatCustomers>;
export type CatalogGetDialogsResult = AxiosResponse<WebitelChatChatDialogs>;
export type CatalogGetMembersResult = AxiosResponse<WebitelChatChatMembers>;
export type CatalogGetHistoryResult = AxiosResponse<WebitelChatChatMessages>;
export type CatalogGetHistory2Result = AxiosResponse<WebitelChatChatMessages>;

// --- footer end
