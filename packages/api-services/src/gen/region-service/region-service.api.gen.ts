/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	EngineCreateRegionRequest,
	EngineListRegion,
	EngineRegion,
	EngineRegionServicePatchRegionBody,
	EngineRegionServiceUpdateRegionBody,
	SearchRegionParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getRegionService =
		// --- title end
		() => {
			// --- header end
			const searchRegion = <TData = AxiosResponse<EngineListRegion>>(
				params?: SearchRegionParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/regions', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createRegion = <TData = AxiosResponse<EngineRegion>>(
				engineCreateRegionRequest: EngineCreateRegionRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/regions', engineCreateRegionRequest, options);
			};
			const deleteRegion = <TData = AxiosResponse<EngineRegion>>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/regions/${id}`, options);
			};
			const readRegion = <TData = AxiosResponse<EngineRegion>>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/regions/${id}`, options);
			};
			const patchRegion = <TData = AxiosResponse<EngineRegion>>(
				id: string,
				engineRegionServicePatchRegionBody: EngineRegionServicePatchRegionBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/regions/${id}`,
					engineRegionServicePatchRegionBody,
					options,
				);
			};
			const updateRegion = <TData = AxiosResponse<EngineRegion>>(
				id: string,
				engineRegionServiceUpdateRegionBody: EngineRegionServiceUpdateRegionBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/regions/${id}`,
					engineRegionServiceUpdateRegionBody,
					options,
				);
			};

			// --- footer start
			return {
				searchRegion,
				createRegion,
				deleteRegion,
				readRegion,
				patchRegion,
				updateRegion,
			};
		};
export type SearchRegionResult = AxiosResponse<EngineListRegion>;
export type CreateRegionResult = AxiosResponse<EngineRegion>;
export type DeleteRegionResult = AxiosResponse<EngineRegion>;
export type ReadRegionResult = AxiosResponse<EngineRegion>;
export type PatchRegionResult = AxiosResponse<EngineRegion>;
export type UpdateRegionResult = AxiosResponse<EngineRegion>;

// --- footer end
