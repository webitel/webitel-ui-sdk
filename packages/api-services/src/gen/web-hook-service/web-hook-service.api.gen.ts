/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	EngineCreateWebHookRequest,
	EngineListWebHook,
	EngineWebHook,
	EngineWebHookServicePatchWebHookBody,
	EngineWebHookServiceUpdateWebHookBody,
	SearchWebHookParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getWebHookService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of WebHook
			 */
			const searchWebHook = <TData = AxiosResponse<EngineListWebHook>>(
				params?: SearchWebHookParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/hook', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create WebHook
			 */
			const createWebHook = <TData = AxiosResponse<EngineWebHook>>(
				engineCreateWebHookRequest: EngineCreateWebHookRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/hook', engineCreateWebHookRequest, options);
			};
			/**
			 * @summary Remove WebHook
			 */
			const deleteWebHook = <TData = AxiosResponse<EngineWebHook>>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/hook/${id}`, options);
			};
			/**
			 * @summary WebHook item
			 */
			const readWebHook = <TData = AxiosResponse<EngineWebHook>>(
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/hook/${id}`, options);
			};
			/**
			 * @summary Patch WebHook
			 */
			const patchWebHook = <TData = AxiosResponse<EngineWebHook>>(
				id: number,
				engineWebHookServicePatchWebHookBody: EngineWebHookServicePatchWebHookBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/hook/${id}`,
					engineWebHookServicePatchWebHookBody,
					options,
				);
			};
			/**
			 * @summary Update WebHook
			 */
			const updateWebHook = <TData = AxiosResponse<EngineWebHook>>(
				id: number,
				engineWebHookServiceUpdateWebHookBody: EngineWebHookServiceUpdateWebHookBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/hook/${id}`,
					engineWebHookServiceUpdateWebHookBody,
					options,
				);
			};

			// --- footer start
			return {
				searchWebHook,
				createWebHook,
				deleteWebHook,
				readWebHook,
				patchWebHook,
				updateWebHook,
			};
		};
export type SearchWebHookResult = AxiosResponse<EngineListWebHook>;
export type CreateWebHookResult = AxiosResponse<EngineWebHook>;
export type DeleteWebHookResult = AxiosResponse<EngineWebHook>;
export type ReadWebHookResult = AxiosResponse<EngineWebHook>;
export type PatchWebHookResult = AxiosResponse<EngineWebHook>;
export type UpdateWebHookResult = AxiosResponse<EngineWebHook>;

// --- footer end
