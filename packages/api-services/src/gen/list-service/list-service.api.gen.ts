/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DeleteListCommunicationParams,
	DeleteListParams,
	EngineCreateListRequest,
	EngineList,
	EngineListCommunication,
	EngineListOfList,
	EngineListOfListCommunication,
	EngineListServiceCreateListCommunicationBody,
	EngineListServiceUpdateListBody,
	EngineListServiceUpdateListCommunicationBody,
	ReadListCommunicationParams,
	ReadListParams,
	SearchListCommunicationParams,
	SearchListParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getListService =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary List of List
			 */
			const searchList = <TData = AxiosResponse<EngineListOfList>>(
				params?: SearchListParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/call_center/list', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create List
			 */
			const createList = <TData = AxiosResponse<EngineList>>(
				engineCreateListRequest: EngineCreateListRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/call_center/list',
					engineCreateListRequest,
					options,
				);
			};
			/**
			 * @summary Remove list
			 */
			const deleteList = <TData = AxiosResponse<EngineList>>(
				id: string,
				params?: DeleteListParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/call_center/list/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List item
			 */
			const readList = <TData = AxiosResponse<EngineList>>(
				id: string,
				params?: ReadListParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/list/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update list
			 */
			const updateList = <TData = AxiosResponse<EngineList>>(
				id: string,
				engineListServiceUpdateListBody: EngineListServiceUpdateListBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/call_center/list/${id}`,
					engineListServiceUpdateListBody,
					options,
				);
			};
			/**
			 * @summary List of List
			 */
			const searchListCommunication = <
				TData = AxiosResponse<EngineListOfListCommunication>,
			>(
				listId: string,
				params?: SearchListCommunicationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/list/${listId}/communication`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create ListCommunication
			 */
			const createListCommunication = <
				TData = AxiosResponse<EngineListCommunication>,
			>(
				listId: string,
				engineListServiceCreateListCommunicationBody: EngineListServiceCreateListCommunicationBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/call_center/list/${listId}/communication`,
					engineListServiceCreateListCommunicationBody,
					options,
				);
			};
			/**
			 * @summary Remove ListCommunication
			 */
			const deleteListCommunication = <
				TData = AxiosResponse<EngineListCommunication>,
			>(
				listId: string,
				id: string,
				params?: DeleteListCommunicationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/call_center/list/${listId}/communication/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List item
			 */
			const readListCommunication = <
				TData = AxiosResponse<EngineListCommunication>,
			>(
				listId: string,
				id: string,
				params?: ReadListCommunicationParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/list/${listId}/communication/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update ListCommunication
			 */
			const updateListCommunication = <
				TData = AxiosResponse<EngineListCommunication>,
			>(
				listId: string,
				id: string,
				engineListServiceUpdateListCommunicationBody: EngineListServiceUpdateListCommunicationBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/call_center/list/${listId}/communication/${id}`,
					engineListServiceUpdateListCommunicationBody,
					options,
				);
			};

			// --- footer start
			return {
				searchList,
				createList,
				deleteList,
				readList,
				updateList,
				searchListCommunication,
				createListCommunication,
				deleteListCommunication,
				readListCommunication,
				updateListCommunication,
			};
		};
export type SearchListResult = AxiosResponse<EngineListOfList>;
export type CreateListResult = AxiosResponse<EngineList>;
export type DeleteListResult = AxiosResponse<EngineList>;
export type ReadListResult = AxiosResponse<EngineList>;
export type UpdateListResult = AxiosResponse<EngineList>;
export type SearchListCommunicationResult =
	AxiosResponse<EngineListOfListCommunication>;
export type CreateListCommunicationResult =
	AxiosResponse<EngineListCommunication>;
export type DeleteListCommunicationResult =
	AxiosResponse<EngineListCommunication>;
export type ReadListCommunicationResult =
	AxiosResponse<EngineListCommunication>;
export type UpdateListCommunicationResult =
	AxiosResponse<EngineListCommunication>;

// --- footer end
