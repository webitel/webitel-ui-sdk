/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary List of List
 */
export const searchListQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
});

export const searchListResponse = zod.object({
	items: zod
		.array(
			zod.object({
				count: zod.string().optional(),
				createdAt: zod.string().optional(),
				createdBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				description: zod.string().optional(),
				domainId: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				updatedAt: zod.string().optional(),
				updatedBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create List
 */
export const createListBody = zod.object({
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
});

export const createListResponse = zod.object({
	count: zod.string().optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Remove list
 */
export const deleteListParams = zod.object({
	id: zod.string(),
});

export const deleteListQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteListResponse = zod.object({
	count: zod.string().optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary List item
 */
export const readListParams = zod.object({
	id: zod.string(),
});

export const readListQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readListResponse = zod.object({
	count: zod.string().optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Update list
 */
export const updateListParams = zod.object({
	id: zod.string(),
});

export const updateListBody = zod.object({
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	name: zod.string().optional(),
});

export const updateListResponse = zod.object({
	count: zod.string().optional(),
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary List of List
 */
export const searchListCommunicationParams = zod.object({
	list_id: zod.string(),
});

export const searchListCommunicationQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
	expireAtFrom: zod.string().optional(),
	expireAtTo: zod.string().optional(),
});

export const searchListCommunicationResponse = zod.object({
	items: zod
		.array(
			zod.object({
				description: zod.string().optional(),
				expireAt: zod.string().optional(),
				id: zod.string().optional(),
				listId: zod.string().optional(),
				number: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create ListCommunication
 */
export const createListCommunicationParams = zod.object({
	list_id: zod.string(),
});

export const createListCommunicationBody = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	number: zod.string().optional(),
});

export const createListCommunicationResponse = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	id: zod.string().optional(),
	listId: zod.string().optional(),
	number: zod.string().optional(),
});

/**
 * @summary Remove ListCommunication
 */
export const deleteListCommunicationParams = zod.object({
	list_id: zod.string(),
	id: zod.string(),
});

export const deleteListCommunicationQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteListCommunicationResponse = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	id: zod.string().optional(),
	listId: zod.string().optional(),
	number: zod.string().optional(),
});

/**
 * @summary List item
 */
export const readListCommunicationParams = zod.object({
	list_id: zod.string(),
	id: zod.string(),
});

export const readListCommunicationQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readListCommunicationResponse = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	id: zod.string().optional(),
	listId: zod.string().optional(),
	number: zod.string().optional(),
});

/**
 * @summary Update ListCommunication
 */
export const updateListCommunicationParams = zod.object({
	list_id: zod.string(),
	id: zod.string(),
});

export const updateListCommunicationBody = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	number: zod.string().optional(),
});

export const updateListCommunicationResponse = zod.object({
	description: zod.string().optional(),
	expireAt: zod.string().optional(),
	id: zod.string().optional(),
	listId: zod.string().optional(),
	number: zod.string().optional(),
});
