/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiCreateDeviceResponse,
	ApiDeleteDeviceResponse,
	ApiDevice,
	ApiDeviceAuditResponse,
	ApiListRegistrationsResponse,
	ApiReadDeviceResponse,
	ApiSearchDeviceResponse,
	ApiUpdateDeviceResponse,
	DevicesDeleteDevice2Params,
	DevicesDeleteDeviceParams,
	DevicesListRegistrationsParams,
	DevicesReadDeviceParams,
	DevicesSearchDeviceAuditParams,
	DevicesSearchDeviceParams,
	DevicesUpdateDevice2Body,
	DevicesUpdateDevice2Params,
	DevicesUpdateDeviceBody,
	DevicesUpdateDeviceParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getDevices =
		// --- title end
		() => {
			// --- header end
			const devicesDeleteDevice2 = <
				TData = AxiosResponse<ApiDeleteDeviceResponse>,
			>(
				devicesDeleteDevice2Body: string[],
				params?: DevicesDeleteDevice2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/devices', {
					data: devicesDeleteDevice2Body,
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesSearchDevice = <
				TData = AxiosResponse<ApiSearchDeviceResponse>,
			>(
				params?: DevicesSearchDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesCreateDevice = <
				TData = AxiosResponse<ApiCreateDeviceResponse>,
			>(
				apiDevice: ApiDevice,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/devices', apiDevice, options);
			};
			const devicesUpdateDevice2 = <
				TData = AxiosResponse<ApiUpdateDeviceResponse>,
			>(
				devicesUpdateDevice2Body: DevicesUpdateDevice2Body,
				params?: DevicesUpdateDevice2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch('/devices/device.id}', devicesUpdateDevice2Body, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesUpdateDevice = <
				TData = AxiosResponse<ApiUpdateDeviceResponse>,
			>(
				devicesUpdateDeviceBody: DevicesUpdateDeviceBody,
				params?: DevicesUpdateDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put('/devices/device.id}', devicesUpdateDeviceBody, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesListRegistrations = <
				TData = AxiosResponse<ApiListRegistrationsResponse>,
			>(
				params?: DevicesListRegistrationsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices/device.id}/registered', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary ----- Details (1:M) ----------------------------------------------
			 */
			const devicesSearchDeviceAudit = <
				TData = AxiosResponse<ApiDeviceAuditResponse>,
			>(
				params?: DevicesSearchDeviceAuditParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices/device.id}/users/audit', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesDeleteDevice = <
				TData = AxiosResponse<ApiDeleteDeviceResponse>,
			>(
				id: string,
				params?: DevicesDeleteDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/devices/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const devicesReadDevice = <TData = AxiosResponse<ApiReadDeviceResponse>>(
				id: string,
				params?: DevicesReadDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/devices/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				devicesDeleteDevice2,
				devicesSearchDevice,
				devicesCreateDevice,
				devicesUpdateDevice2,
				devicesUpdateDevice,
				devicesListRegistrations,
				devicesSearchDeviceAudit,
				devicesDeleteDevice,
				devicesReadDevice,
			};
		};
export type DevicesDeleteDevice2Result = AxiosResponse<ApiDeleteDeviceResponse>;
export type DevicesSearchDeviceResult = AxiosResponse<ApiSearchDeviceResponse>;
export type DevicesCreateDeviceResult = AxiosResponse<ApiCreateDeviceResponse>;
export type DevicesUpdateDevice2Result = AxiosResponse<ApiUpdateDeviceResponse>;
export type DevicesUpdateDeviceResult = AxiosResponse<ApiUpdateDeviceResponse>;
export type DevicesListRegistrationsResult =
	AxiosResponse<ApiListRegistrationsResponse>;
export type DevicesSearchDeviceAuditResult =
	AxiosResponse<ApiDeviceAuditResponse>;
export type DevicesDeleteDeviceResult = AxiosResponse<ApiDeleteDeviceResponse>;
export type DevicesReadDeviceResult = AxiosResponse<ApiReadDeviceResponse>;

// --- footer end
