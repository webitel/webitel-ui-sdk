/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiCreateDeviceResponse,
	ApiDeleteDeviceResponse,
	ApiDevice,
	ApiDeviceAuditResponse,
	ApiListRegistrationsResponse,
	ApiReadDeviceResponse,
	ApiSearchDeviceResponse,
	ApiUpdateDeviceResponse,
	DeleteDevice2Params,
	DeleteDeviceParams,
	ListRegistrationsParams,
	ReadDeviceParams,
	SearchDeviceAuditParams,
	SearchDeviceParams,
	UpdateDevice2Body,
	UpdateDevice2Params,
	UpdateDeviceBody,
	UpdateDeviceParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getDevices =
		// --- title end
		() => {
			// --- header end
			const deleteDevice2 = <TData = AxiosResponse<ApiDeleteDeviceResponse>>(
				deleteDevice2Body: string[],
				params?: DeleteDevice2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/devices', {
					data: deleteDevice2Body,
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const searchDevice = <TData = AxiosResponse<ApiSearchDeviceResponse>>(
				params?: SearchDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createDevice = <TData = AxiosResponse<ApiCreateDeviceResponse>>(
				apiDevice: ApiDevice,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/devices', apiDevice, options);
			};
			const updateDevice2 = <TData = AxiosResponse<ApiUpdateDeviceResponse>>(
				updateDevice2Body: UpdateDevice2Body,
				params?: UpdateDevice2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch('/devices/device.id}', updateDevice2Body, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const updateDevice = <TData = AxiosResponse<ApiUpdateDeviceResponse>>(
				updateDeviceBody: UpdateDeviceBody,
				params?: UpdateDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put('/devices/device.id}', updateDeviceBody, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const listRegistrations = <
				TData = AxiosResponse<ApiListRegistrationsResponse>,
			>(
				params?: ListRegistrationsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices/device.id}/registered', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary ----- Details (1:M) ----------------------------------------------
			 */
			const searchDeviceAudit = <TData = AxiosResponse<ApiDeviceAuditResponse>>(
				params?: SearchDeviceAuditParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/devices/device.id}/users/audit', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const deleteDevice = <TData = AxiosResponse<ApiDeleteDeviceResponse>>(
				id: string,
				params?: DeleteDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/devices/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const readDevice = <TData = AxiosResponse<ApiReadDeviceResponse>>(
				id: string,
				params?: ReadDeviceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/devices/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				deleteDevice2,
				searchDevice,
				createDevice,
				updateDevice2,
				updateDevice,
				listRegistrations,
				searchDeviceAudit,
				deleteDevice,
				readDevice,
			};
		};
export type DeleteDevice2Result = AxiosResponse<ApiDeleteDeviceResponse>;
export type SearchDeviceResult = AxiosResponse<ApiSearchDeviceResponse>;
export type CreateDeviceResult = AxiosResponse<ApiCreateDeviceResponse>;
export type UpdateDevice2Result = AxiosResponse<ApiUpdateDeviceResponse>;
export type UpdateDeviceResult = AxiosResponse<ApiUpdateDeviceResponse>;
export type ListRegistrationsResult =
	AxiosResponse<ApiListRegistrationsResponse>;
export type SearchDeviceAuditResult = AxiosResponse<ApiDeviceAuditResponse>;
export type DeleteDeviceResult = AxiosResponse<ApiDeleteDeviceResponse>;
export type ReadDeviceResult = AxiosResponse<ApiReadDeviceResponse>;

// --- footer end
