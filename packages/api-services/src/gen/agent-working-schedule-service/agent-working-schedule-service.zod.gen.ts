/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

export const agentWorkingScheduleServiceSearchAgentsWorkingScheduleParams =
	zod.object({
		working_schedule_id: zod.string(),
	});

export const agentWorkingScheduleServiceSearchAgentsWorkingScheduleQueryParams =
	zod.object({
		dateFrom: zod.string().optional(),
		dateTo: zod.string().optional(),
		supervisorId: zod.array(zod.string()).optional(),
		teamId: zod.array(zod.string()).optional(),
		skillId: zod.array(zod.string()).optional(),
		q: zod.string().optional(),
	});

export const agentWorkingScheduleServiceSearchAgentsWorkingScheduleResponseItemsItemScheduleItemAbsenceDefault =
	'ABSENCE_TYPE_UNSPECIFIED';

export const agentWorkingScheduleServiceSearchAgentsWorkingScheduleResponse =
	zod.object({
		holidays: zod
			.array(
				zod.object({
					date: zod.string().optional(),
					name: zod.string().optional(),
				}),
			)
			.optional(),
		items: zod
			.array(
				zod.object({
					agent: zod
						.object({
							id: zod.string().optional(),
							name: zod.string().optional(),
						})
						.optional(),
					schedule: zod
						.array(
							zod.object({
								absence: zod
									.enum([
										'ABSENCE_TYPE_UNSPECIFIED',
										'ABSENCE_TYPE_DAYOFF',
										'ABSENCE_TYPE_VACATION',
										'ABSENCE_TYPE_SICKDAY',
									])
									.default(
										agentWorkingScheduleServiceSearchAgentsWorkingScheduleResponseItemsItemScheduleItemAbsenceDefault,
									),
								date: zod.string().optional(),
								locked: zod.boolean().optional(),
								shift: zod
									.object({
										createdAt: zod.string().optional(),
										createdBy: zod
											.object({
												id: zod.string().optional(),
												name: zod.string().optional(),
											})
											.optional(),
										domainId: zod.string().optional(),
										end: zod.string().optional(),
										id: zod.string().optional(),
										pauses: zod
											.array(
												zod.object({
													cause: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
													createdAt: zod.string().optional(),
													createdBy: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
													domainId: zod.string().optional(),
													end: zod.string().optional(),
													id: zod.string().optional(),
													start: zod.string().optional(),
													updatedAt: zod.string().optional(),
													updatedBy: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
												}),
											)
											.optional(),
										skills: zod
											.array(
												zod.object({
													capacity: zod.string().optional(),
													enabled: zod.boolean().optional(),
													skill: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
												}),
											)
											.optional(),
										start: zod.string().optional(),
										updatedAt: zod.string().optional(),
										updatedBy: zod
											.object({
												id: zod.string().optional(),
												name: zod.string().optional(),
											})
											.optional(),
									})
									.optional(),
							}),
						)
						.optional(),
				}),
			)
			.optional(),
		total: zod.string().optional(),
	});

export const agentWorkingScheduleServiceCreateAgentsWorkingScheduleShiftsParams =
	zod.object({
		working_schedule_id: zod.string(),
	});

export const agentWorkingScheduleServiceCreateAgentsWorkingScheduleShiftsBody =
	zod.object({
		agents: zod
			.array(
				zod.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				}),
			)
			.optional(),
		date: zod
			.object({
				from: zod.string().optional(),
				to: zod.string().optional(),
			})
			.optional(),
		items: zod
			.record(
				zod.string(),
				zod.object({
					createdAt: zod.string().optional(),
					createdBy: zod
						.object({
							id: zod.string().optional(),
							name: zod.string().optional(),
						})
						.optional(),
					domainId: zod.string().optional(),
					end: zod.string().optional(),
					id: zod.string().optional(),
					pauses: zod
						.array(
							zod.object({
								cause: zod
									.object({
										id: zod.string().optional(),
										name: zod.string().optional(),
									})
									.optional(),
								createdAt: zod.string().optional(),
								createdBy: zod
									.object({
										id: zod.string().optional(),
										name: zod.string().optional(),
									})
									.optional(),
								domainId: zod.string().optional(),
								end: zod.string().optional(),
								id: zod.string().optional(),
								start: zod.string().optional(),
								updatedAt: zod.string().optional(),
								updatedBy: zod
									.object({
										id: zod.string().optional(),
										name: zod.string().optional(),
									})
									.optional(),
							}),
						)
						.optional(),
					skills: zod
						.array(
							zod.object({
								capacity: zod.string().optional(),
								enabled: zod.boolean().optional(),
								skill: zod
									.object({
										id: zod.string().optional(),
										name: zod.string().optional(),
									})
									.optional(),
							}),
						)
						.optional(),
					start: zod.string().optional(),
					updatedAt: zod.string().optional(),
					updatedBy: zod
						.object({
							id: zod.string().optional(),
							name: zod.string().optional(),
						})
						.optional(),
				}),
			)
			.optional()
			.describe('Map key is a day of week: 0 - Sunday, ..., 6 - Saturday.'),
	});

export const agentWorkingScheduleServiceCreateAgentsWorkingScheduleShiftsResponseItemsItemScheduleItemAbsenceDefault =
	'ABSENCE_TYPE_UNSPECIFIED';

export const agentWorkingScheduleServiceCreateAgentsWorkingScheduleShiftsResponse =
	zod.object({
		items: zod
			.array(
				zod.object({
					agent: zod
						.object({
							id: zod.string().optional(),
							name: zod.string().optional(),
						})
						.optional(),
					schedule: zod
						.array(
							zod.object({
								absence: zod
									.enum([
										'ABSENCE_TYPE_UNSPECIFIED',
										'ABSENCE_TYPE_DAYOFF',
										'ABSENCE_TYPE_VACATION',
										'ABSENCE_TYPE_SICKDAY',
									])
									.default(
										agentWorkingScheduleServiceCreateAgentsWorkingScheduleShiftsResponseItemsItemScheduleItemAbsenceDefault,
									),
								date: zod.string().optional(),
								locked: zod.boolean().optional(),
								shift: zod
									.object({
										createdAt: zod.string().optional(),
										createdBy: zod
											.object({
												id: zod.string().optional(),
												name: zod.string().optional(),
											})
											.optional(),
										domainId: zod.string().optional(),
										end: zod.string().optional(),
										id: zod.string().optional(),
										pauses: zod
											.array(
												zod.object({
													cause: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
													createdAt: zod.string().optional(),
													createdBy: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
													domainId: zod.string().optional(),
													end: zod.string().optional(),
													id: zod.string().optional(),
													start: zod.string().optional(),
													updatedAt: zod.string().optional(),
													updatedBy: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
												}),
											)
											.optional(),
										skills: zod
											.array(
												zod.object({
													capacity: zod.string().optional(),
													enabled: zod.boolean().optional(),
													skill: zod
														.object({
															id: zod.string().optional(),
															name: zod.string().optional(),
														})
														.optional(),
												}),
											)
											.optional(),
										start: zod.string().optional(),
										updatedAt: zod.string().optional(),
										updatedBy: zod
											.object({
												id: zod.string().optional(),
												name: zod.string().optional(),
											})
											.optional(),
									})
									.optional(),
							}),
						)
						.optional(),
				}),
			)
			.optional(),
	});
