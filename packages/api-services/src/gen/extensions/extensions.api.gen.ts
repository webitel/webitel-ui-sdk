/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	DataInputExtension,
	DataStructList,
	DeleteType2Params,
	DeleteTypeMixin3Params,
	ProtodataStruct,
	SearchTypeMixin3Params,
} from '.././_models';

// --- header start
//

export const // --- title start
	getExtensions =
		// --- title end
		() => {
			// --- header end
			/**
			 * returns (ExtensionList) {
			 * @summary Delete extension for types.
			 */
			const deleteType2 = <TData = AxiosResponse<DataStructList>>(
				params?: DeleteType2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/types/extensions', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * (ExtensionList) {
			 * @summary Search for type extensions.
			 */
			const searchTypeMixin3 = <TData = AxiosResponse<DataStructList>>(
				params?: SearchTypeMixin3Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/types/extensions', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * returns (ExtensionList) {
			 * @summary Delete extension for types.
			 */
			const deleteTypeMixin3 = <TData = AxiosResponse<DataStructList>>(
				repo: string[],
				params?: DeleteTypeMixin3Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/types/extensions/${repo}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * returns (Extension) {
			 * @summary Type extension details.
			 */
			const locateType = <TData = AxiosResponse<ProtodataStruct>>(
				repo: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/types/extensions/${repo}`, options);
			};
			/**
			 * returns (Extension) {
			 * @summary Create type extension.
			 */
			const createType = <TData = AxiosResponse<ProtodataStruct>>(
				repo: string,
				dataInputExtension: DataInputExtension,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/types/extensions/${repo}`,
					dataInputExtension,
					options,
				);
			};
			/**
			 * returns (Extension) {
			 * @summary Update type extension.
			 */
			const updateType = <TData = AxiosResponse<ProtodataStruct>>(
				repo: string,
				dataInputExtension: DataInputExtension,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/types/extensions/${repo}`,
					dataInputExtension,
					options,
				);
			};

			// --- footer start
			return {
				deleteType2,
				searchTypeMixin3,
				deleteTypeMixin3,
				locateType,
				createType,
				updateType,
			};
		};
export type DeleteType2Result = AxiosResponse<DataStructList>;
export type SearchTypeMixin3Result = AxiosResponse<DataStructList>;
export type DeleteTypeMixin3Result = AxiosResponse<DataStructList>;
export type LocateTypeResult = AxiosResponse<ProtodataStruct>;
export type CreateTypeResult = AxiosResponse<ProtodataStruct>;
export type UpdateTypeResult = AxiosResponse<ProtodataStruct>;

// --- footer end
