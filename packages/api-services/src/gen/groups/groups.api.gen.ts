/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	GroupsListGroupsParams,
	GroupsLocateGroupParams,
	GroupsRemoveContactsFromGroupParams,
	WebitelContactsAddContactsToGroupRequest,
	WebitelContactsContactList,
	WebitelContactsCreateGroupRequest,
	WebitelContactsGroup,
	WebitelContactsGroupList,
	WebitelContactsInputGroup,
	WebitelContactsLocateGroupResponse,
} from '.././_models';

// --- header start
//

export const // --- title start
	getGroups =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Retrieve a list of groups or search groups
			 */
			const groupsListGroups = <
				TData = AxiosResponse<WebitelContactsGroupList>,
			>(
				params?: GroupsListGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/contacts/groups', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create a new group
			 */
			const groupsCreateGroup = <TData = AxiosResponse<WebitelContactsGroup>>(
				webitelContactsCreateGroupRequest: WebitelContactsCreateGroupRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/contacts/groups',
					webitelContactsCreateGroupRequest,
					options,
				);
			};
			/**
			 * @summary Attach contacts to multiple groups
			 */
			const groupsAddContactsToGroups = <
				TData = AxiosResponse<WebitelContactsContactList>,
			>(
				webitelContactsAddContactsToGroupRequest: WebitelContactsAddContactsToGroupRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/contacts/groups/contacts:attach',
					webitelContactsAddContactsToGroupRequest,
					options,
				);
			};
			/**
			 * @summary Remove contacts from a group
			 */
			const groupsRemoveContactsFromGroup = <
				TData = AxiosResponse<WebitelContactsContactList>,
			>(
				groupId: string,
				params?: GroupsRemoveContactsFromGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/groups/${groupId}/contact`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Delete a group
			 */
			const groupsDeleteGroup = <TData = AxiosResponse<WebitelContactsGroup>>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/groups/${id}`, options);
			};
			/**
			 * @summary Locate a group by ID
			 */
			const groupsLocateGroup = <
				TData = AxiosResponse<WebitelContactsLocateGroupResponse>,
			>(
				id: string,
				params?: GroupsLocateGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/groups/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing group
			 */
			const groupsUpdateGroup2 = <TData = AxiosResponse<WebitelContactsGroup>>(
				id: string,
				webitelContactsInputGroup: WebitelContactsInputGroup,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/groups/${id}`,
					webitelContactsInputGroup,
					options,
				);
			};
			/**
			 * @summary Update an existing group
			 */
			const groupsUpdateGroup = <TData = AxiosResponse<WebitelContactsGroup>>(
				id: string,
				webitelContactsInputGroup: WebitelContactsInputGroup,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/groups/${id}`,
					webitelContactsInputGroup,
					options,
				);
			};

			// --- footer start
			return {
				groupsListGroups,
				groupsCreateGroup,
				groupsAddContactsToGroups,
				groupsRemoveContactsFromGroup,
				groupsDeleteGroup,
				groupsLocateGroup,
				groupsUpdateGroup2,
				groupsUpdateGroup,
			};
		};
export type GroupsListGroupsResult = AxiosResponse<WebitelContactsGroupList>;
export type GroupsCreateGroupResult = AxiosResponse<WebitelContactsGroup>;
export type GroupsAddContactsToGroupsResult =
	AxiosResponse<WebitelContactsContactList>;
export type GroupsRemoveContactsFromGroupResult =
	AxiosResponse<WebitelContactsContactList>;
export type GroupsDeleteGroupResult = AxiosResponse<WebitelContactsGroup>;
export type GroupsLocateGroupResult =
	AxiosResponse<WebitelContactsLocateGroupResponse>;
export type GroupsUpdateGroup2Result = AxiosResponse<WebitelContactsGroup>;
export type GroupsUpdateGroupResult = AxiosResponse<WebitelContactsGroup>;

// --- footer end
