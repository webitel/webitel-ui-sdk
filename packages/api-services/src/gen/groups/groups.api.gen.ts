/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsAddContactsToGroupRequest,
	ContactsContactList,
	ContactsCreateGroupRequest,
	ContactsGroup,
	ContactsGroupList,
	ContactsInputGroup,
	ContactsLocateGroupResponse,
	ListGroupsParams,
	LocateGroupParams,
	RemoveContactsFromGroupParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getGroups =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Retrieve a list of groups or search groups
			 */
			const listGroups = <TData = AxiosResponse<ContactsGroupList>>(
				params?: ListGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/contacts/groups', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Create a new group
			 */
			const createGroup = <TData = AxiosResponse<ContactsGroup>>(
				contactsCreateGroupRequest: ContactsCreateGroupRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/contacts/groups',
					contactsCreateGroupRequest,
					options,
				);
			};
			/**
			 * @summary Attach contacts to multiple groups
			 */
			const addContactsToGroups = <TData = AxiosResponse<ContactsContactList>>(
				contactsAddContactsToGroupRequest: ContactsAddContactsToGroupRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/contacts/groups/contacts:attach',
					contactsAddContactsToGroupRequest,
					options,
				);
			};
			/**
			 * @summary Remove contacts from a group
			 */
			const removeContactsFromGroup = <
				TData = AxiosResponse<ContactsContactList>,
			>(
				groupId: string,
				params?: RemoveContactsFromGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/groups/${groupId}/contact`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Delete a group
			 */
			const deleteGroup = <TData = AxiosResponse<ContactsGroup>>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/groups/${id}`, options);
			};
			/**
			 * @summary Locate a group by ID
			 */
			const locateGroup = <TData = AxiosResponse<ContactsLocateGroupResponse>>(
				id: string,
				params?: LocateGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/groups/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update an existing group
			 */
			const updateGroup2 = <TData = AxiosResponse<ContactsGroup>>(
				id: string,
				contactsInputGroup: ContactsInputGroup,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/groups/${id}`,
					contactsInputGroup,
					options,
				);
			};
			/**
			 * @summary Update an existing group
			 */
			const updateGroup = <TData = AxiosResponse<ContactsGroup>>(
				id: string,
				contactsInputGroup: ContactsInputGroup,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(`/contacts/groups/${id}`, contactsInputGroup, options);
			};

			// --- footer start
			return {
				listGroups,
				createGroup,
				addContactsToGroups,
				removeContactsFromGroup,
				deleteGroup,
				locateGroup,
				updateGroup2,
				updateGroup,
			};
		};
export type ListGroupsResult = AxiosResponse<ContactsGroupList>;
export type CreateGroupResult = AxiosResponse<ContactsGroup>;
export type AddContactsToGroupsResult = AxiosResponse<ContactsContactList>;
export type RemoveContactsFromGroupResult = AxiosResponse<ContactsContactList>;
export type DeleteGroupResult = AxiosResponse<ContactsGroup>;
export type LocateGroupResult = AxiosResponse<ContactsLocateGroupResponse>;
export type UpdateGroup2Result = AxiosResponse<ContactsGroup>;
export type UpdateGroupResult = AxiosResponse<ContactsGroup>;

// --- footer end
