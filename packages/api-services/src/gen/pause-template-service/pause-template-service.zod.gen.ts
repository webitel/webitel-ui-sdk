/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

export const pauseTemplateServiceSearchPauseTemplateQueryParams = zod.object({
	q: zod.string().optional(),
	page: zod.number().optional(),
	size: zod.number().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
});

export const pauseTemplateServiceSearchPauseTemplateResponse = zod.object({
	items: zod
		.array(
			zod.object({
				causes: zod
					.array(
						zod.object({
							cause: zod
								.object({
									id: zod.string().optional(),
									name: zod.string().optional(),
								})
								.optional(),
							duration: zod.string().optional(),
						}),
					)
					.optional(),
				createdAt: zod.string().optional(),
				createdBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				description: zod.string().optional(),
				domainId: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				updatedAt: zod.string().optional(),
				updatedBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

export const pauseTemplateServiceCreatePauseTemplateBody = zod.object({
	item: zod
		.object({
			causes: zod
				.array(
					zod.object({
						cause: zod
							.object({
								id: zod.string().optional(),
								name: zod.string().optional(),
							})
							.optional(),
						duration: zod.string().optional(),
					}),
				)
				.optional(),
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			domainId: zod.string().optional(),
			id: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});

export const pauseTemplateServiceCreatePauseTemplateResponse = zod.object({
	item: zod
		.object({
			causes: zod
				.array(
					zod.object({
						cause: zod
							.object({
								id: zod.string().optional(),
								name: zod.string().optional(),
							})
							.optional(),
						duration: zod.string().optional(),
					}),
				)
				.optional(),
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			domainId: zod.string().optional(),
			id: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});

export const pauseTemplateServiceDeletePauseTemplateParams = zod.object({
	id: zod.string(),
});

export const pauseTemplateServiceDeletePauseTemplateResponse = zod.object({
	id: zod.string().optional(),
});

export const pauseTemplateServiceReadPauseTemplateParams = zod.object({
	id: zod.string(),
});

export const pauseTemplateServiceReadPauseTemplateQueryParams = zod.object({
	fields: zod.array(zod.string()).optional(),
});

export const pauseTemplateServiceReadPauseTemplateResponse = zod.object({
	item: zod
		.object({
			causes: zod
				.array(
					zod.object({
						cause: zod
							.object({
								id: zod.string().optional(),
								name: zod.string().optional(),
							})
							.optional(),
						duration: zod.string().optional(),
					}),
				)
				.optional(),
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			domainId: zod.string().optional(),
			id: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});

/**
 * @summary UpdatePauseTemplateCauseBulk updates a pause template with a list of causes.
Update existing cause, create that not exists in database and delete that not exists in the list.
 */
export const pauseTemplateServiceUpdatePauseTemplateParams = zod.object({
	'item.id': zod.string(),
});

export const pauseTemplateServiceUpdatePauseTemplateBody = zod.object({
	item: zod
		.object({
			causes: zod
				.array(
					zod.object({
						cause: zod
							.object({
								id: zod.string().optional(),
								name: zod.string().optional(),
							})
							.optional(),
						duration: zod.string().optional(),
					}),
				)
				.optional(),
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			domainId: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});

export const pauseTemplateServiceUpdatePauseTemplateResponse = zod.object({
	item: zod
		.object({
			causes: zod
				.array(
					zod.object({
						cause: zod
							.object({
								id: zod.string().optional(),
								name: zod.string().optional(),
							})
							.optional(),
						duration: zod.string().optional(),
					}),
				)
				.optional(),
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			domainId: zod.string().optional(),
			id: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});
