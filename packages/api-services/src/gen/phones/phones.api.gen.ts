/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsInputPhoneNumber,
	ContactsPhoneList,
	ContactsPhoneNumber,
	DeletePhoneParams,
	DeletePhonesParams,
	ListPhonesParams,
	LocatePhoneParams,
	MergePhonesParams,
	ResetPhonesParams,
	UpdatePhone2Body,
	UpdatePhone2Params,
	UpdatePhoneBody,
	UpdatePhoneParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getPhones =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove the Contact's phone number association(s)
			 */
			const deletePhones = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				params: DeletePhonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/phones`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Search phone number(s)
			 */
			const listPhones = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				params?: ListPhonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/phones`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Associate phone number(s) with the Contact
			 */
			const mergePhones = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				contactsInputPhoneNumber: ContactsInputPhoneNumber[],
				params?: MergePhonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/phones`,
					contactsInputPhoneNumber,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Reset the Contact's phone numbers to fit given data set.
			 */
			const resetPhones = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				contactsInputPhoneNumber: ContactsInputPhoneNumber[],
				params?: ResetPhonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/phones`,
					contactsInputPhoneNumber,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Remove the Contact's phone number
			 */
			const deletePhone = <TData = AxiosResponse<ContactsPhoneNumber>>(
				contactId: string,
				etag: string,
				params?: DeletePhoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/phones/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Locate the Contact's phone number association.
			 */
			const locatePhone = <TData = AxiosResponse<ContactsPhoneNumber>>(
				contactId: string,
				etag: string,
				params?: LocatePhoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/phones/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update the Contact's phone number association details
			 */
			const updatePhone2 = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				etag: string,
				updatePhone2Body: UpdatePhone2Body,
				params?: UpdatePhone2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/phones/${etag}`,
					updatePhone2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update the Contact's phone number association details
			 */
			const updatePhone = <TData = AxiosResponse<ContactsPhoneList>>(
				contactId: string,
				etag: string,
				updatePhoneBody: UpdatePhoneBody,
				params?: UpdatePhoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/phones/${etag}`,
					updatePhoneBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				deletePhones,
				listPhones,
				mergePhones,
				resetPhones,
				deletePhone,
				locatePhone,
				updatePhone2,
				updatePhone,
			};
		};
export type DeletePhonesResult = AxiosResponse<ContactsPhoneList>;
export type ListPhonesResult = AxiosResponse<ContactsPhoneList>;
export type MergePhonesResult = AxiosResponse<ContactsPhoneList>;
export type ResetPhonesResult = AxiosResponse<ContactsPhoneList>;
export type DeletePhoneResult = AxiosResponse<ContactsPhoneNumber>;
export type LocatePhoneResult = AxiosResponse<ContactsPhoneNumber>;
export type UpdatePhone2Result = AxiosResponse<ContactsPhoneList>;
export type UpdatePhoneResult = AxiosResponse<ContactsPhoneList>;

// --- footer end
