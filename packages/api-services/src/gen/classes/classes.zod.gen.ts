/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

export const searchClassesQueryParams = zod.object({
	domain: zod
		.string()
		.optional()
		.describe('TO BE REMOVED // bound to session.domain.id'),
	class: zod.string().optional().describe("[filter]: like '%class%'"),
	fields: zod
		.array(zod.string())
		.optional()
		.describe('int64 id = 3;  // [filter]: obj.id = id\ncontrols\n\noutput'),
	sort: zod
		.array(zod.string())
		.optional()
		.describe('sort: \"field\" asc; \"!field\" desc'),
	page: zod.number().optional().describe('page number'),
	size: zod.number().optional().describe('page size'),
});

export const searchClassesResponse = zod.object({
	items: zod
		.array(
			zod.object({
				abac: zod.boolean().optional(),
				class: zod.string().optional(),
				id: zod.string().optional(),
				obac: zod.boolean().optional(),
				rbac: zod.boolean().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
	page: zod.number().optional(),
	size: zod.number().optional(),
});

export const updateClass2Params = zod.object({
	'class.id': zod.string().describe('(class::object).id'),
});

export const updateClass2Body = zod.object({
	class: zod
		.object({
			abac: zod.boolean().optional(),
			class: zod.string().optional(),
			obac: zod.boolean().optional(),
			rbac: zod.boolean().optional(),
		})
		.optional(),
	domain: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
});

export const updateClass2Response = zod.object({
	class: zod
		.object({
			abac: zod.boolean().optional(),
			class: zod.string().optional(),
			id: zod.string().optional(),
			obac: zod.boolean().optional(),
			rbac: zod.boolean().optional(),
		})
		.optional(),
});

export const updateClassParams = zod.object({
	'class.id': zod.string().describe('(class::object).id'),
});

export const updateClassBody = zod.object({
	class: zod
		.object({
			abac: zod.boolean().optional(),
			class: zod.string().optional(),
			obac: zod.boolean().optional(),
			rbac: zod.boolean().optional(),
		})
		.optional(),
	domain: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
});

export const updateClassResponse = zod.object({
	class: zod
		.object({
			abac: zod.boolean().optional(),
			class: zod.string().optional(),
			id: zod.string().optional(),
			obac: zod.boolean().optional(),
			rbac: zod.boolean().optional(),
		})
		.optional(),
});

export const readClassParams = zod.object({
	id: zod.string().describe('[filter]: obj.id = id'),
});

export const readClassQueryParams = zod.object({
	domain: zod.string().optional(),
	class: zod.string().optional().describe("[filter]: like '%class%'"),
});

export const readClassResponse = zod.object({
	class: zod
		.object({
			abac: zod.boolean().optional(),
			class: zod.string().optional(),
			id: zod.string().optional(),
			obac: zod.boolean().optional(),
			rbac: zod.boolean().optional(),
		})
		.optional(),
});
