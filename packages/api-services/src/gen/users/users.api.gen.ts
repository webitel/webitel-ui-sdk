/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiCreateUserRequest,
	ApiCreateUserResponse,
	ApiDeleteUsersResponse,
	ApiLogoutUserResponse,
	ApiReadUserResponse,
	ApiSearchUsersRequest,
	ApiSearchUsersResponse,
	ApiUser,
	ApiUsersLogoutUserBody,
	UsersDeleteUsers2Params,
	UsersDeleteUsersParams,
	UsersReadUser2Params,
	UsersReadUserParams,
	UsersSearchUsersParams,
	UsersUpdateUser2Body,
	UsersUpdateUser2Params,
	UsersUpdateUserBody,
	UsersUpdateUserParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getUsers =
		// --- title end
		() => {
			// --- header end
			const usersReadUser2 = <TData = AxiosResponse<ApiReadUserResponse>>(
				params?: UsersReadUser2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/user', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersDeleteUsers2 = <TData = AxiosResponse<ApiDeleteUsersResponse>>(
				usersDeleteUsers2Body: string[],
				params?: UsersDeleteUsers2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/users', {
					data: usersDeleteUsers2Body,
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersSearchUsers = <TData = AxiosResponse<ApiSearchUsersResponse>>(
				params?: UsersSearchUsersParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/users', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersCreateUser = <TData = AxiosResponse<ApiCreateUserResponse>>(
				apiCreateUserRequest: ApiCreateUserRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/users', apiCreateUserRequest, options);
			};
			const usersSearchUsers2 = <TData = AxiosResponse<ApiSearchUsersResponse>>(
				apiSearchUsersRequest: ApiSearchUsersRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/users/search', apiSearchUsersRequest, options);
			};
			const usersDeleteUsers = <TData = AxiosResponse<ApiDeleteUsersResponse>>(
				id: string,
				params?: UsersDeleteUsersParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/users/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersReadUser = <TData = AxiosResponse<ApiReadUserResponse>>(
				id: string,
				params?: UsersReadUserParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/users/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersLogoutUser = <TData = AxiosResponse<ApiLogoutUserResponse>>(
				id: string,
				apiUsersLogoutUserBody: ApiUsersLogoutUserBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/users/${id}/logout`,
					apiUsersLogoutUserBody,
					options,
				);
			};
			const usersUpdateUser2 = <TData = AxiosResponse<ApiUser>>(
				usersUpdateUser2Body: UsersUpdateUser2Body,
				params?: UsersUpdateUser2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch('/users/user.id}', usersUpdateUser2Body, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const usersUpdateUser = <TData = AxiosResponse<ApiUser>>(
				usersUpdateUserBody: UsersUpdateUserBody,
				params?: UsersUpdateUserParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put('/users/user.id}', usersUpdateUserBody, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				usersReadUser2,
				usersDeleteUsers2,
				usersSearchUsers,
				usersCreateUser,
				usersSearchUsers2,
				usersDeleteUsers,
				usersReadUser,
				usersLogoutUser,
				usersUpdateUser2,
				usersUpdateUser,
			};
		};
export type UsersReadUser2Result = AxiosResponse<ApiReadUserResponse>;
export type UsersDeleteUsers2Result = AxiosResponse<ApiDeleteUsersResponse>;
export type UsersSearchUsersResult = AxiosResponse<ApiSearchUsersResponse>;
export type UsersCreateUserResult = AxiosResponse<ApiCreateUserResponse>;
export type UsersSearchUsers2Result = AxiosResponse<ApiSearchUsersResponse>;
export type UsersDeleteUsersResult = AxiosResponse<ApiDeleteUsersResponse>;
export type UsersReadUserResult = AxiosResponse<ApiReadUserResponse>;
export type UsersLogoutUserResult = AxiosResponse<ApiLogoutUserResponse>;
export type UsersUpdateUser2Result = AxiosResponse<ApiUser>;
export type UsersUpdateUserResult = AxiosResponse<ApiUser>;

// --- footer end
