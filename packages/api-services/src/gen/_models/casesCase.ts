import type { CasesCaseCommentList } from './casesCaseCommentList';
import type { CasesCaseFileList } from './casesCaseFileList';
import type { CasesCaseLinkList } from './casesCaseLinkList';
import type { CasesCloseInfo } from './casesCloseInfo';
import type { CasesPriority } from './casesPriority';
import type { CasesRateInfo } from './casesRateInfo';
import type { CasesRelatedCaseList } from './casesRelatedCaseList';
import type { CasesSourceTypeLookup } from './casesSourceTypeLookup';
import type { CasesStatusCondition } from './casesStatusCondition';
import type { CasesTimingInfo } from './casesTimingInfo';
import type { GeneralExtendedLookup } from './generalExtendedLookup';
/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * service.proto
 * OpenAPI spec version: version not set
 */
import type { GeneralLookup } from './generalLookup';

/**
 * Message representing a case.
 */
export interface CasesCase {
	/** Assignee responsible for resolving the case. */
	assignee?: GeneralLookup;
	/** Author or reporter of the case. */
	author?: GeneralLookup;
	/** Close information (if applicable). */
	close?: CasesCloseInfo;
	/** Close reason group, immutable once set. */
	closeReasonGroup?: GeneralLookup;
	/** List of comments on the case. */
	comments?: CasesCaseCommentList;
	/** Contact information for the case. */
	contactInfo?: string;
	/** Creation timestamp (in milliseconds since Unix epoch). */
	createdAt?: string;
	/** Creator of the case. */
	createdBy?: GeneralLookup;
	/** Detailed description of the case. */
	description?: string;
	/** Unique etag identifier. */
	etag?: string;
	/** List of attached files. */
	files?: CasesCaseFileList;
	/** Group associated with the case. */
	group?: GeneralExtendedLookup;
	/** Unique case ID. */
	id?: string;
	/** Impacted contact (defaults to reporter if null). */
	impacted?: GeneralLookup;
	/** List of attached links. */
	links?: CasesCaseLinkList;
	/** Name of the case (may serve as an ID in docs). */
	name?: string;
	/** Planned reaction time (in milliseconds). */
	plannedReactionAt?: string;
	/** Planned resolution time (in milliseconds). */
	plannedResolveAt?: string;
	/** Priority level of the case. */
	priority?: CasesPriority;
	/** Rating information. */
	rate?: CasesRateInfo;
	/** List of related cases. */
	related?: CasesRelatedCaseList;
	/** Reporter of the issue (null if anonymous). */
	reporter?: GeneralLookup;
	roleIds?: string[];
	/** Service associated with the case. */
	service?: GeneralLookup;
	/** SLA associated with the case. */
	sla?: GeneralLookup;
	/** List of SLA conditions. */
	slaCondition?: GeneralLookup;
	/** Source of the case. */
	source?: CasesSourceTypeLookup;
	/** Current status of the case. */
	status?: GeneralLookup;
	/** Status condition from status lookup. */
	statusCondition?: CasesStatusCondition;
	/** Subject of the case. */
	subject?: string;
	/** SLA timing details. */
	timing?: CasesTimingInfo;
	/** Last update timestamp (in milliseconds since Unix epoch). */
	updatedAt?: string;
	/** Last updater of the case. */
	updatedBy?: GeneralLookup;
	/** Version number of the case. */
	ver?: number;
}
