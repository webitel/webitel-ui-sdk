/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

/**
 * @summary List of CommunicationType
 */
export const searchCommunicationTypeQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
	channel: zod
		.array(zod.enum(['Undefined', 'Phone', 'Email', 'Messaging']))
		.optional(),
	default: zod.boolean().optional(),
});

export const searchCommunicationTypeResponseItemsItemChannelDefault =
	'Undefined';

export const searchCommunicationTypeResponse = zod.object({
	items: zod
		.array(
			zod.object({
				channel: zod
					.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
					.default(searchCommunicationTypeResponseItemsItemChannelDefault),
				code: zod.string().optional(),
				default: zod.boolean().optional(),
				description: zod.string().optional(),
				domainId: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create CommunicationType
 */
export const createCommunicationTypeBodyChannelDefault = 'Undefined';

export const createCommunicationTypeBody = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(createCommunicationTypeBodyChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	name: zod.string().optional(),
});

export const createCommunicationTypeResponseChannelDefault = 'Undefined';

export const createCommunicationTypeResponse = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(createCommunicationTypeResponseChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary Remove CommunicationType
 */
export const deleteCommunicationTypeParams = zod.object({
	id: zod.string(),
});

export const deleteCommunicationTypeQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteCommunicationTypeResponseChannelDefault = 'Undefined';

export const deleteCommunicationTypeResponse = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(deleteCommunicationTypeResponseChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary CommunicationType item
 */
export const readCommunicationTypeParams = zod.object({
	id: zod.string(),
});

export const readCommunicationTypeQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readCommunicationTypeResponseChannelDefault = 'Undefined';

export const readCommunicationTypeResponse = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(readCommunicationTypeResponseChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

export const patchCommunicationTypeParams = zod.object({
	id: zod.string(),
});

export const patchCommunicationTypeBodyChannelDefault = 'Undefined';

export const patchCommunicationTypeBody = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(patchCommunicationTypeBodyChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	name: zod.string().optional(),
});

export const patchCommunicationTypeResponseChannelDefault = 'Undefined';

export const patchCommunicationTypeResponse = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(patchCommunicationTypeResponseChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});

/**
 * @summary Update CommunicationType
 */
export const updateCommunicationTypeParams = zod.object({
	id: zod.string(),
});

export const updateCommunicationTypeBodyChannelDefault = 'Undefined';

export const updateCommunicationTypeBody = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(updateCommunicationTypeBodyChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	name: zod.string().optional(),
});

export const updateCommunicationTypeResponseChannelDefault = 'Undefined';

export const updateCommunicationTypeResponse = zod.object({
	channel: zod
		.enum(['Undefined', 'Phone', 'Email', 'Messaging'])
		.default(updateCommunicationTypeResponseChannelDefault),
	code: zod.string().optional(),
	default: zod.boolean().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
});
