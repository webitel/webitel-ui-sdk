/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	WfmCreateWorkingConditionRequest,
	WfmCreateWorkingConditionResponse,
	WfmDeleteWorkingConditionResponse,
	WfmReadWorkingConditionResponse,
	WfmSearchWorkingConditionResponse,
	WfmUpdateWorkingConditionResponse,
	WorkingConditionServiceReadWorkingConditionParams,
	WorkingConditionServiceSearchWorkingConditionParams,
	WorkingConditionServiceUpdateWorkingConditionBody,
} from '.././_models';

// --- header start
//

export const // --- title start
	getWorkingConditionService =
		// --- title end
		() => {
			// --- header end
			const workingConditionServiceSearchWorkingCondition = <
				TData = AxiosResponse<WfmSearchWorkingConditionResponse>,
			>(
				params?: WorkingConditionServiceSearchWorkingConditionParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/wfm/lookups/working_conditions', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const workingConditionServiceCreateWorkingCondition = <
				TData = AxiosResponse<WfmCreateWorkingConditionResponse>,
			>(
				wfmCreateWorkingConditionRequest: WfmCreateWorkingConditionRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					'/wfm/lookups/working_conditions',
					wfmCreateWorkingConditionRequest,
					options,
				);
			};
			const workingConditionServiceDeleteWorkingCondition = <
				TData = AxiosResponse<WfmDeleteWorkingConditionResponse>,
			>(
				id: string,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/wfm/lookups/working_conditions/${id}`, options);
			};
			const workingConditionServiceReadWorkingCondition = <
				TData = AxiosResponse<WfmReadWorkingConditionResponse>,
			>(
				id: string,
				params?: WorkingConditionServiceReadWorkingConditionParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/wfm/lookups/working_conditions/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const workingConditionServiceUpdateWorkingCondition = <
				TData = AxiosResponse<WfmUpdateWorkingConditionResponse>,
			>(
				workingConditionServiceUpdateWorkingConditionBody: WorkingConditionServiceUpdateWorkingConditionBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/wfm/lookups/working_conditions/item.id}',
					workingConditionServiceUpdateWorkingConditionBody,
					options,
				);
			};

			// --- footer start
			return {
				workingConditionServiceSearchWorkingCondition,
				workingConditionServiceCreateWorkingCondition,
				workingConditionServiceDeleteWorkingCondition,
				workingConditionServiceReadWorkingCondition,
				workingConditionServiceUpdateWorkingCondition,
			};
		};
export type WorkingConditionServiceSearchWorkingConditionResult =
	AxiosResponse<WfmSearchWorkingConditionResponse>;
export type WorkingConditionServiceCreateWorkingConditionResult =
	AxiosResponse<WfmCreateWorkingConditionResponse>;
export type WorkingConditionServiceDeleteWorkingConditionResult =
	AxiosResponse<WfmDeleteWorkingConditionResponse>;
export type WorkingConditionServiceReadWorkingConditionResult =
	AxiosResponse<WfmReadWorkingConditionResponse>;
export type WorkingConditionServiceUpdateWorkingConditionResult =
	AxiosResponse<WfmUpdateWorkingConditionResponse>;

// --- footer end
