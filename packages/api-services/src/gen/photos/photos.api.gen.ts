/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsInputPhoto,
	ContactsPhoto,
	ContactsPhotoList,
	CreatePhotosParams,
	DeletePhotoParams,
	DeletePhotosParams,
	LocatePhotoParams,
	SearchPhotosParams,
	UpdatePhoto2Body,
	UpdatePhoto2Params,
	UpdatePhotoBody,
	UpdatePhotoParams,
	UpdatePhotosParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getPhotos =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove the contact's photo link(s)
			 */
			const deletePhotos = <TData = AxiosResponse<ContactsPhotoList>>(
				contactId: string,
				params: DeletePhotosParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/photos`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Search the contact's photo(s)
			 */
			const searchPhotos = <TData = AxiosResponse<ContactsPhotoList>>(
				contactId: string,
				params?: SearchPhotosParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/photos`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Link photo(s) with the contact
			 */
			const createPhotos = <TData = AxiosResponse<ContactsPhotoList>>(
				contactId: string,
				contactsInputPhoto: ContactsInputPhoto[],
				params?: CreatePhotosParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(`/contacts/${contactId}/photos`, contactsInputPhoto, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Reset the contact's photos to fit given data set.
			 */
			const updatePhotos = <TData = AxiosResponse<ContactsPhotoList>>(
				contactId: string,
				contactsInputPhoto: ContactsInputPhoto[],
				params?: UpdatePhotosParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(`/contacts/${contactId}/photos`, contactsInputPhoto, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Remove the contact's photo
			 */
			const deletePhoto = <TData = AxiosResponse<ContactsPhoto>>(
				contactId: string,
				etag: string,
				params?: DeletePhotoParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/photos/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update the contact's photo link details
			 */
			const updatePhoto2 = <TData = AxiosResponse<ContactsPhoto>>(
				contactId: string,
				etag: string,
				updatePhoto2Body: UpdatePhoto2Body,
				params?: UpdatePhoto2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/photos/${etag}`,
					updatePhoto2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update the contact's photo link details
			 */
			const updatePhoto = <TData = AxiosResponse<ContactsPhoto>>(
				contactId: string,
				etag: string,
				updatePhotoBody: UpdatePhotoBody,
				params?: UpdatePhotoParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/photos/${etag}`,
					updatePhotoBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Locate the contact's photo link.
			 */
			const locatePhoto = <TData = AxiosResponse<ContactsPhoto>>(
				contactId: string,
				id: string,
				params?: LocatePhotoParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/photos/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				deletePhotos,
				searchPhotos,
				createPhotos,
				updatePhotos,
				deletePhoto,
				updatePhoto2,
				updatePhoto,
				locatePhoto,
			};
		};
export type DeletePhotosResult = AxiosResponse<ContactsPhotoList>;
export type SearchPhotosResult = AxiosResponse<ContactsPhotoList>;
export type CreatePhotosResult = AxiosResponse<ContactsPhotoList>;
export type UpdatePhotosResult = AxiosResponse<ContactsPhotoList>;
export type DeletePhotoResult = AxiosResponse<ContactsPhoto>;
export type UpdatePhoto2Result = AxiosResponse<ContactsPhoto>;
export type UpdatePhotoResult = AxiosResponse<ContactsPhoto>;
export type LocatePhotoResult = AxiosResponse<ContactsPhoto>;

// --- footer end
