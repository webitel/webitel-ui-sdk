/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	LoggerDeleteConfigLogsRequest,
	LoggerDeleteConfigLogsResponse,
	LoggerLogs,
	LoggerServiceSearchLogByConfigIdParams,
	LoggerServiceSearchLogByRecordIdParams,
	LoggerServiceSearchLogByUserIdParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getLoggerService =
		// --- title end
		() => {
			// --- header end
			const loggerServiceDeleteConfigLogs = <
				TData = AxiosResponse<LoggerDeleteConfigLogsResponse>,
			>(
				configId: string,
				loggerDeleteConfigLogsRequest: LoggerDeleteConfigLogsRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/logger/config/${configId}/logs`, {
					data: loggerDeleteConfigLogsRequest,
					...options,
				});
			};
			const loggerServiceSearchLogByConfigId = <
				TData = AxiosResponse<LoggerLogs>,
			>(
				configId: number,
				params?: LoggerServiceSearchLogByConfigIdParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/logger/config/${configId}/logs`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const loggerServiceSearchLogByUserId = <
				TData = AxiosResponse<LoggerLogs>,
			>(
				userId: number,
				params?: LoggerServiceSearchLogByUserIdParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/logger/user/${userId}/logs`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const loggerServiceSearchLogByRecordId = <
				TData = AxiosResponse<LoggerLogs>,
			>(
				object:
					| 'cc_queue'
					| 'schema'
					| 'users'
					| 'devices'
					| 'calendars'
					| 'cc_list'
					| 'cc_team'
					| 'cc_agent'
					| 'cc_resource'
					| 'cc_resource_group'
					| 'chat_bots'
					| 'cases'
					| 'contacts'
					| 'cc_list_number'
					| 'case_comments',
				recordId: number,
				params?: LoggerServiceSearchLogByRecordIdParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/logger/${object}/record/${recordId}/logs`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				loggerServiceDeleteConfigLogs,
				loggerServiceSearchLogByConfigId,
				loggerServiceSearchLogByUserId,
				loggerServiceSearchLogByRecordId,
			};
		};
export type LoggerServiceDeleteConfigLogsResult =
	AxiosResponse<LoggerDeleteConfigLogsResponse>;
export type LoggerServiceSearchLogByConfigIdResult = AxiosResponse<LoggerLogs>;
export type LoggerServiceSearchLogByUserIdResult = AxiosResponse<LoggerLogs>;
export type LoggerServiceSearchLogByRecordIdResult = AxiosResponse<LoggerLogs>;

// --- footer end
