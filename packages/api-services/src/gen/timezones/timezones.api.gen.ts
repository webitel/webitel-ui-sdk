/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsInputTimezone,
	ContactsTimezone,
	ContactsTimezoneList,
	DeleteTimezoneParams,
	DeleteTimezonesParams,
	ListTimezonesParams,
	LocateTimezoneParams,
	MergeTimezonesParams,
	ResetTimezonesParams,
	UpdateTimezone2Body,
	UpdateTimezone2Params,
	UpdateTimezoneBody,
	UpdateTimezoneParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getTimezones =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove the Contact's timezone(s).
			 */
			const deleteTimezones = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				params: DeleteTimezonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/timezones`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List of the Contact's timezone(s).
			 */
			const listTimezones = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				params?: ListTimezonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/timezones`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Associate more timezone(s) with the Contact.
			 */
			const mergeTimezones = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				contactsInputTimezone: ContactsInputTimezone[],
				params?: MergeTimezonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/timezones`,
					contactsInputTimezone,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Resets all timezones of the contact according to the input dataset.
			 */
			const resetTimezones = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				contactsInputTimezone: ContactsInputTimezone[],
				params?: ResetTimezonesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/timezones`,
					contactsInputTimezone,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Remove the Contact's timezone association.
			 */
			const deleteTimezone = <TData = AxiosResponse<ContactsTimezone>>(
				contactId: string,
				etag: string,
				params?: DeleteTimezoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/timezones/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Locate the Contact's timezone association.
			 */
			const locateTimezone = <TData = AxiosResponse<ContactsTimezone>>(
				contactId: string,
				etag: string,
				params?: LocateTimezoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/timezones/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update the Contact's timezone details.
			 */
			const updateTimezone2 = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				etag: string,
				updateTimezone2Body: UpdateTimezone2Body,
				params?: UpdateTimezone2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/timezones/${etag}`,
					updateTimezone2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update the Contact's timezone details.
			 */
			const updateTimezone = <TData = AxiosResponse<ContactsTimezoneList>>(
				contactId: string,
				etag: string,
				updateTimezoneBody: UpdateTimezoneBody,
				params?: UpdateTimezoneParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/timezones/${etag}`,
					updateTimezoneBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				deleteTimezones,
				listTimezones,
				mergeTimezones,
				resetTimezones,
				deleteTimezone,
				locateTimezone,
				updateTimezone2,
				updateTimezone,
			};
		};
export type DeleteTimezonesResult = AxiosResponse<ContactsTimezoneList>;
export type ListTimezonesResult = AxiosResponse<ContactsTimezoneList>;
export type MergeTimezonesResult = AxiosResponse<ContactsTimezoneList>;
export type ResetTimezonesResult = AxiosResponse<ContactsTimezoneList>;
export type DeleteTimezoneResult = AxiosResponse<ContactsTimezone>;
export type LocateTimezoneResult = AxiosResponse<ContactsTimezone>;
export type UpdateTimezone2Result = AxiosResponse<ContactsTimezoneList>;
export type UpdateTimezoneResult = AxiosResponse<ContactsTimezoneList>;

// --- footer end
