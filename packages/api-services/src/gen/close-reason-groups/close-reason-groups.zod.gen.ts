/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod';

/**
 * @summary Retrieve a list of close reason groups or search close reason groups
 */
export const listCloseReasonGroupsQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	fields: zod.array(zod.string()).optional(),
	sort: zod.string().optional(),
	id: zod.array(zod.string()).optional(),
	q: zod.string().optional(),
});

export const listCloseReasonGroupsResponse = zod.object({
	items: zod
		.array(
			zod.object({
				createdAt: zod.string().optional(),
				createdBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				description: zod.string().optional(),
				id: zod.string().optional(),
				name: zod.string().optional(),
				updatedAt: zod.string().optional(),
				updatedBy: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
	page: zod.number().optional(),
});

/**
 * @summary Create a new close reason group
 */
export const createCloseReasonGroupQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved as a result.'),
});

export const createCloseReasonGroupBody = zod.object({
	description: zod.string().optional(),
	name: zod.string().optional(),
});

export const createCloseReasonGroupResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Delete a close reason group
 */
export const deleteCloseReasonGroupParams = zod.object({
	id: zod.string(),
});

export const deleteCloseReasonGroupResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Locate a close reason group by ID
 */
export const locateCloseReasonGroupParams = zod.object({
	id: zod.string(),
});

export const locateCloseReasonGroupQueryParams = zod.object({
	fields: zod.array(zod.string()).optional(),
});

export const locateCloseReasonGroupResponse = zod.object({
	closeReasonGroup: zod
		.object({
			createdAt: zod.string().optional(),
			createdBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
			description: zod.string().optional(),
			id: zod.string().optional(),
			name: zod.string().optional(),
			updatedAt: zod.string().optional(),
			updatedBy: zod
				.object({
					id: zod.string().optional(),
					name: zod.string().optional(),
				})
				.optional(),
		})
		.optional(),
});

/**
 * @summary Update an existing close reason group
 */
export const updateCloseReasonGroup2Params = zod.object({
	id: zod.string(),
});

export const updateCloseReasonGroup2QueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved as a result.'),
});

export const updateCloseReasonGroup2Body = zod.object({
	description: zod.string().optional(),
	name: zod.string().optional(),
});

export const updateCloseReasonGroup2Response = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});

/**
 * @summary Update an existing close reason group
 */
export const updateCloseReasonGroupParams = zod.object({
	id: zod.string(),
});

export const updateCloseReasonGroupQueryParams = zod.object({
	fields: zod
		.array(zod.string())
		.optional()
		.describe('Fields to be retrieved as a result.'),
});

export const updateCloseReasonGroupBody = zod.object({
	description: zod.string().optional(),
	name: zod.string().optional(),
});

export const updateCloseReasonGroupResponse = zod.object({
	createdAt: zod.string().optional(),
	createdBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	description: zod.string().optional(),
	id: zod.string().optional(),
	name: zod.string().optional(),
	updatedAt: zod.string().optional(),
	updatedBy: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
});
