/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactsInputVariable,
	ContactsVariable,
	ContactsVariableList,
	DeleteVariableParams,
	DeleteVariablesParams,
	ListVariablesParams,
	MergeVariablesParams,
	ResetVariablesParams,
	UpdateVariable2Body,
	UpdateVariable2Params,
	UpdateVariableBody,
	UpdateVariableParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getVariables =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove variable(s) of the contact
			 */
			const deleteVariables = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				params: DeleteVariablesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/variables`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List variables of the contact
			 */
			const listVariables = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				params?: ListVariablesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/variables`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update or append variables to the contact
			 */
			const mergeVariables = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				contactsInputVariable: ContactsInputVariable[],
				params?: MergeVariablesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/variables`,
					contactsInputVariable,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Reset all variables of the contact
			 */
			const resetVariables = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				contactsInputVariable: ContactsInputVariable[],
				params?: ResetVariablesParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/variables`,
					contactsInputVariable,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Remove the contact's variable by etag
			 */
			const deleteVariable = <TData = AxiosResponse<ContactsVariable>>(
				contactId: string,
				etag: string,
				params?: DeleteVariableParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/variables/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update contact variable
			 */
			const updateVariable2 = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				etag: string,
				updateVariable2Body: UpdateVariable2Body,
				params?: UpdateVariable2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/variables/${etag}`,
					updateVariable2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update contact variable
			 */
			const updateVariable = <TData = AxiosResponse<ContactsVariableList>>(
				contactId: string,
				etag: string,
				updateVariableBody: UpdateVariableBody,
				params?: UpdateVariableParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/variables/${etag}`,
					updateVariableBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				deleteVariables,
				listVariables,
				mergeVariables,
				resetVariables,
				deleteVariable,
				updateVariable2,
				updateVariable,
			};
		};
export type DeleteVariablesResult = AxiosResponse<ContactsVariableList>;
export type ListVariablesResult = AxiosResponse<ContactsVariableList>;
export type MergeVariablesResult = AxiosResponse<ContactsVariableList>;
export type ResetVariablesResult = AxiosResponse<ContactsVariableList>;
export type DeleteVariableResult = AxiosResponse<ContactsVariable>;
export type UpdateVariable2Result = AxiosResponse<ContactsVariableList>;
export type UpdateVariableResult = AxiosResponse<ContactsVariableList>;

// --- footer end
