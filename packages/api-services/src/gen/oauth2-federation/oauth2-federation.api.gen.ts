/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ApiDeleteOAuthServiceRequest,
	ApiDeleteOAuthServiceResponse,
	ApiOAuth2FederationDeleteOAuthServiceBody,
	ApiOAuth2FederationUpdateOAuthServiceBody,
	ApiOAuthService,
	ApiSearchOAuthServiceResponse,
	OAuth2FederationLocateOAuthServiceParams,
	OAuth2FederationSearchOAuthServiceParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getOauth2Federation =
		// --- title end
		() => {
			// --- header end
			const oAuth2FederationDeleteOAuthService = <
				TData = AxiosResponse<ApiDeleteOAuthServiceResponse>,
			>(
				apiDeleteOAuthServiceRequest: ApiDeleteOAuthServiceRequest,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete('/oauth/apps', {
					data: apiDeleteOAuthServiceRequest,
					...options,
				});
			};
			const oAuth2FederationSearchOAuthService = <
				TData = AxiosResponse<ApiSearchOAuthServiceResponse>,
			>(
				params?: OAuth2FederationSearchOAuthServiceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/oauth/apps', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const oAuth2FederationCreateOAuthService = <
				TData = AxiosResponse<ApiOAuthService>,
			>(
				apiOAuthService: ApiOAuthService,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post('/oauth/apps', apiOAuthService, options);
			};
			const oAuth2FederationUpdateOAuthService2 = <
				TData = AxiosResponse<ApiOAuthService>,
			>(
				apiOAuth2FederationUpdateOAuthServiceBody: ApiOAuth2FederationUpdateOAuthServiceBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					'/oauth/apps/changes.id}',
					apiOAuth2FederationUpdateOAuthServiceBody,
					options,
				);
			};
			const oAuth2FederationUpdateOAuthService = <
				TData = AxiosResponse<ApiOAuthService>,
			>(
				apiOAuth2FederationUpdateOAuthServiceBody: ApiOAuth2FederationUpdateOAuthServiceBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					'/oauth/apps/changes.id}',
					apiOAuth2FederationUpdateOAuthServiceBody,
					options,
				);
			};
			const oAuth2FederationDeleteOAuthService2 = <
				TData = AxiosResponse<ApiDeleteOAuthServiceResponse>,
			>(
				id: string[],
				apiOAuth2FederationDeleteOAuthServiceBody: ApiOAuth2FederationDeleteOAuthServiceBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/oauth/apps/${id}`, {
					data: apiOAuth2FederationDeleteOAuthServiceBody,
					...options,
				});
			};
			const oAuth2FederationLocateOAuthService = <
				TData = AxiosResponse<ApiOAuthService>,
			>(
				id: string[],
				params?: OAuth2FederationLocateOAuthServiceParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/oauth/apps/${id}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};

			// --- footer start
			return {
				oAuth2FederationDeleteOAuthService,
				oAuth2FederationSearchOAuthService,
				oAuth2FederationCreateOAuthService,
				oAuth2FederationUpdateOAuthService2,
				oAuth2FederationUpdateOAuthService,
				oAuth2FederationDeleteOAuthService2,
				oAuth2FederationLocateOAuthService,
			};
		};
export type OAuth2FederationDeleteOAuthServiceResult =
	AxiosResponse<ApiDeleteOAuthServiceResponse>;
export type OAuth2FederationSearchOAuthServiceResult =
	AxiosResponse<ApiSearchOAuthServiceResponse>;
export type OAuth2FederationCreateOAuthServiceResult =
	AxiosResponse<ApiOAuthService>;
export type OAuth2FederationUpdateOAuthService2Result =
	AxiosResponse<ApiOAuthService>;
export type OAuth2FederationUpdateOAuthServiceResult =
	AxiosResponse<ApiOAuthService>;
export type OAuth2FederationDeleteOAuthService2Result =
	AxiosResponse<ApiDeleteOAuthServiceResponse>;
export type OAuth2FederationLocateOAuthServiceResult =
	AxiosResponse<ApiOAuthService>;

// --- footer end
