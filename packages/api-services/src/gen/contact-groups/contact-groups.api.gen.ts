/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	ContactGroupsDeleteContactGroupParams,
	ContactGroupsDeleteContactGroupsParams,
	ContactGroupsListContactGroupsParams,
	ContactGroupsLocateContactGroupParams,
	ContactGroupsMergeContactGroupsParams,
	ContactGroupsResetContactGroupsParams,
	ContactGroupsUpdateContactGroup2Body,
	ContactGroupsUpdateContactGroup2Params,
	ContactGroupsUpdateContactGroupBody,
	ContactGroupsUpdateContactGroupParams,
	WebitelContactsContactGroup,
	WebitelContactsContactGroupList,
	WebitelContactsInputContactGroup,
} from '.././_models';

// --- header start
//

export const // --- title start
	getContactGroups =
		// --- title end
		() => {
			// --- header end
			/**
			 * @summary Remove the Contact's group(s).
			 */
			const contactGroupsDeleteContactGroups = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				params: ContactGroupsDeleteContactGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/groups`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary List of the Contact's group(s).
			 */
			const contactGroupsListContactGroups = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				params?: ContactGroupsListContactGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/groups`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Associate more group(s) with the Contact.
			 */
			const contactGroupsMergeContactGroups = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				webitelContactsInputContactGroup: WebitelContactsInputContactGroup[],
				params?: ContactGroupsMergeContactGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/contacts/${contactId}/groups`,
					webitelContactsInputContactGroup,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Resets all groups of the contact according to the input dataset.
			 */
			const contactGroupsResetContactGroups = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				webitelContactsInputContactGroup: WebitelContactsInputContactGroup[],
				params?: ContactGroupsResetContactGroupsParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/groups`,
					webitelContactsInputContactGroup,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Remove the Contact's group association.
			 */
			const contactGroupsDeleteContactGroup = <
				TData = AxiosResponse<WebitelContactsContactGroup>,
			>(
				contactId: string,
				etag: string,
				params?: ContactGroupsDeleteContactGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(`/contacts/${contactId}/groups/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Locate the Contact's group association.
			 */
			const contactGroupsLocateContactGroup = <
				TData = AxiosResponse<WebitelContactsContactGroup>,
			>(
				contactId: string,
				etag: string,
				params?: ContactGroupsLocateContactGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/contacts/${contactId}/groups/${etag}`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			/**
			 * @summary Update the Contact's group details.
			 */
			const contactGroupsUpdateContactGroup2 = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				etag: string,
				contactGroupsUpdateContactGroup2Body: ContactGroupsUpdateContactGroup2Body,
				params?: ContactGroupsUpdateContactGroup2Params,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/contacts/${contactId}/groups/${etag}`,
					contactGroupsUpdateContactGroup2Body,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};
			/**
			 * @summary Update the Contact's group details.
			 */
			const contactGroupsUpdateContactGroup = <
				TData = AxiosResponse<WebitelContactsContactGroupList>,
			>(
				contactId: string,
				etag: string,
				contactGroupsUpdateContactGroupBody: ContactGroupsUpdateContactGroupBody,
				params?: ContactGroupsUpdateContactGroupParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/contacts/${contactId}/groups/${etag}`,
					contactGroupsUpdateContactGroupBody,
					{
						...options,
						params: { ...params, ...options?.params },
					},
				);
			};

			// --- footer start
			return {
				contactGroupsDeleteContactGroups,
				contactGroupsListContactGroups,
				contactGroupsMergeContactGroups,
				contactGroupsResetContactGroups,
				contactGroupsDeleteContactGroup,
				contactGroupsLocateContactGroup,
				contactGroupsUpdateContactGroup2,
				contactGroupsUpdateContactGroup,
			};
		};
export type ContactGroupsDeleteContactGroupsResult =
	AxiosResponse<WebitelContactsContactGroupList>;
export type ContactGroupsListContactGroupsResult =
	AxiosResponse<WebitelContactsContactGroupList>;
export type ContactGroupsMergeContactGroupsResult =
	AxiosResponse<WebitelContactsContactGroupList>;
export type ContactGroupsResetContactGroupsResult =
	AxiosResponse<WebitelContactsContactGroupList>;
export type ContactGroupsDeleteContactGroupResult =
	AxiosResponse<WebitelContactsContactGroup>;
export type ContactGroupsLocateContactGroupResult =
	AxiosResponse<WebitelContactsContactGroup>;
export type ContactGroupsUpdateContactGroup2Result =
	AxiosResponse<WebitelContactsContactGroupList>;
export type ContactGroupsUpdateContactGroupResult =
	AxiosResponse<WebitelContactsContactGroupList>;

// --- footer end
