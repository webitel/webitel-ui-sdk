/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import axios from '@aliasedDeps/api-services/axios';

import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
	EngineListTeamTrigger,
	EngineRunTeamTriggerResponse,
	EngineTeamTrigger,
	EngineTeamTriggerServiceCreateTeamTriggerBody,
	EngineTeamTriggerServicePatchTeamTriggerBody,
	EngineTeamTriggerServiceRunTeamTriggerBody,
	EngineTeamTriggerServiceUpdateTeamTriggerBody,
	SearchAgentTriggerParams,
	SearchTeamTriggerParams,
} from '.././_models';

// --- header start
//

export const // --- title start
	getTeamTriggerService =
		// --- title end
		() => {
			// --- header end
			const searchAgentTrigger = <TData = AxiosResponse<EngineListTeamTrigger>>(
				params?: SearchAgentTriggerParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get('/call_center/teams/triggers/agent', {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const runTeamTrigger = <
				TData = AxiosResponse<EngineRunTeamTriggerResponse>,
			>(
				triggerId: number,
				engineTeamTriggerServiceRunTeamTriggerBody: EngineTeamTriggerServiceRunTeamTriggerBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/call_center/teams/triggers/${triggerId}`,
					engineTeamTriggerServiceRunTeamTriggerBody,
					options,
				);
			};
			const searchTeamTrigger = <TData = AxiosResponse<EngineListTeamTrigger>>(
				teamId: string,
				params?: SearchTeamTriggerParams,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(`/call_center/teams/${teamId}/triggers`, {
					...options,
					params: { ...params, ...options?.params },
				});
			};
			const createTeamTrigger = <TData = AxiosResponse<EngineTeamTrigger>>(
				teamId: string,
				engineTeamTriggerServiceCreateTeamTriggerBody: EngineTeamTriggerServiceCreateTeamTriggerBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.post(
					`/call_center/teams/${teamId}/triggers`,
					engineTeamTriggerServiceCreateTeamTriggerBody,
					options,
				);
			};
			const deleteTeamTrigger = <TData = AxiosResponse<EngineTeamTrigger>>(
				teamId: string,
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.delete(
					`/call_center/teams/${teamId}/triggers/${id}`,
					options,
				);
			};
			const readTeamTrigger = <TData = AxiosResponse<EngineTeamTrigger>>(
				teamId: string,
				id: number,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.get(
					`/call_center/teams/${teamId}/triggers/${id}`,
					options,
				);
			};
			const patchTeamTrigger = <TData = AxiosResponse<EngineTeamTrigger>>(
				teamId: string,
				id: number,
				engineTeamTriggerServicePatchTeamTriggerBody: EngineTeamTriggerServicePatchTeamTriggerBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.patch(
					`/call_center/teams/${teamId}/triggers/${id}`,
					engineTeamTriggerServicePatchTeamTriggerBody,
					options,
				);
			};
			const updateTeamTrigger = <TData = AxiosResponse<EngineTeamTrigger>>(
				teamId: string,
				id: number,
				engineTeamTriggerServiceUpdateTeamTriggerBody: EngineTeamTriggerServiceUpdateTeamTriggerBody,
				options?: AxiosRequestConfig,
			): Promise<TData> => {
				return axios.put(
					`/call_center/teams/${teamId}/triggers/${id}`,
					engineTeamTriggerServiceUpdateTeamTriggerBody,
					options,
				);
			};

			// --- footer start
			return {
				searchAgentTrigger,
				runTeamTrigger,
				searchTeamTrigger,
				createTeamTrigger,
				deleteTeamTrigger,
				readTeamTrigger,
				patchTeamTrigger,
				updateTeamTrigger,
			};
		};
export type SearchAgentTriggerResult = AxiosResponse<EngineListTeamTrigger>;
export type RunTeamTriggerResult = AxiosResponse<EngineRunTeamTriggerResponse>;
export type SearchTeamTriggerResult = AxiosResponse<EngineListTeamTrigger>;
export type CreateTeamTriggerResult = AxiosResponse<EngineTeamTrigger>;
export type DeleteTeamTriggerResult = AxiosResponse<EngineTeamTrigger>;
export type ReadTeamTriggerResult = AxiosResponse<EngineTeamTrigger>;
export type PatchTeamTriggerResult = AxiosResponse<EngineTeamTrigger>;
export type UpdateTeamTriggerResult = AxiosResponse<EngineTeamTrigger>;

// --- footer end
