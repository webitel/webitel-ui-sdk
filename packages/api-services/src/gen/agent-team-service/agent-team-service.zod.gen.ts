/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Webitel API
 * OpenAPI spec version: 24.04.0
 */
import { z as zod } from 'zod/v4';

/**
 * @summary List of AgentTeam
 */
export const searchAgentTeamQueryParams = zod.object({
	page: zod.number().optional(),
	size: zod.number().optional(),
	q: zod.string().optional(),
	sort: zod.string().optional(),
	fields: zod.array(zod.string()).optional(),
	id: zod.array(zod.number()).optional(),
	strategy: zod.array(zod.string()).optional(),
	adminId: zod.array(zod.number()).optional(),
});

export const searchAgentTeamResponse = zod.object({
	items: zod
		.array(
			zod.object({
				admin: zod
					.array(
						zod.object({
							id: zod.string().optional(),
							name: zod.string().optional(),
						}),
					)
					.optional(),
				callTimeout: zod.number().optional(),
				description: zod.string().optional(),
				domainId: zod.string().optional(),
				forecastCalculation: zod
					.object({
						id: zod.string().optional(),
						name: zod.string().optional(),
					})
					.optional(),
				id: zod.string().optional(),
				inviteChatTimeout: zod.number().optional(),
				maxNoAnswer: zod.number().optional(),
				name: zod.string().optional(),
				noAnswerDelayTime: zod.number().optional(),
				screenControl: zod.boolean().optional(),
				strategy: zod.string().optional(),
				taskAcceptTimeout: zod.number().optional(),
				updatedAt: zod.string().optional(),
				wrapUpTime: zod.number().optional(),
			}),
		)
		.optional(),
	next: zod.boolean().optional(),
});

/**
 * @summary Create AgentTeam
 */
export const createAgentTeamBody = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	wrapUpTime: zod.number().optional(),
});

export const createAgentTeamResponse = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	id: zod.string().optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	updatedAt: zod.string().optional(),
	wrapUpTime: zod.number().optional(),
});

/**
 * @summary Remove AgentTeam
 */
export const deleteAgentTeamParams = zod.object({
	id: zod.string(),
});

export const deleteAgentTeamQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const deleteAgentTeamResponse = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	id: zod.string().optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	updatedAt: zod.string().optional(),
	wrapUpTime: zod.number().optional(),
});

/**
 * @summary AgentTeam item
 */
export const readAgentTeamParams = zod.object({
	id: zod.string(),
});

export const readAgentTeamQueryParams = zod.object({
	domainId: zod.string().optional(),
});

export const readAgentTeamResponse = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	id: zod.string().optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	updatedAt: zod.string().optional(),
	wrapUpTime: zod.number().optional(),
});

/**
 * @summary Update AgentTeam
 */
export const updateAgentTeamParams = zod.object({
	id: zod.string(),
});

export const updateAgentTeamBody = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	wrapUpTime: zod.number().optional(),
});

export const updateAgentTeamResponse = zod.object({
	admin: zod
		.array(
			zod.object({
				id: zod.string().optional(),
				name: zod.string().optional(),
			}),
		)
		.optional(),
	callTimeout: zod.number().optional(),
	description: zod.string().optional(),
	domainId: zod.string().optional(),
	forecastCalculation: zod
		.object({
			id: zod.string().optional(),
			name: zod.string().optional(),
		})
		.optional(),
	id: zod.string().optional(),
	inviteChatTimeout: zod.number().optional(),
	maxNoAnswer: zod.number().optional(),
	name: zod.string().optional(),
	noAnswerDelayTime: zod.number().optional(),
	screenControl: zod.boolean().optional(),
	strategy: zod.string().optional(),
	taskAcceptTimeout: zod.number().optional(),
	updatedAt: zod.string().optional(),
	wrapUpTime: zod.number().optional(),
});
