// https://stackoverflow.com/a/17181946/17782185
// https://stackoverflow.com/a/49192800/17782185
@use "sass:selector";

//@mixin optional-at-root($sel) {
//  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
//    @content;
//  }
//}
@mixin optional-at-root($sel) {
  @if & {
    @at-root #{selector.append(&, $sel)} {
      @content;
    }
  } @else {
    @at-root #{$sel} {
      @content;
    }
  }
}

$vendors: (':-webkit', '-moz', ':-moz', '-ms');

@mixin wt-placeholder($style: '') {
  @each $vendor in $vendors {
    @include optional-at-root(':#{$vendor}-input-placeholder') {
      font: inherit;
      transition: var(--transition);

      @if ($style == 'error') {
        color: var(--wt-text-field-placeholder-error-color);
      } @else if ($style == 'disabled') {
        color: var(--wt-text-field-placeholder-disabled-color);
      } @else {
        color: var(--wt-text-field-placeholder-color);
      }

      @content;
    }
  }
}

/*
  Classes for direct extending in placeholder-like elements styling
   (e.g. vue-multiselect .multiselect__placeholder which is technically a span)
*/
%wt-placeholder {
  transition: var(--transition);
  font: inherit;
  color: var(--wt-text-field-placeholder-color);
}

%wt-placeholder--disabled {
  @extend %wt-placeholder;
  color: var(--wt-text-field-placeholder-disabled-color);
}

%wt-placeholder--error {
  @extend %wt-placeholder;
  color: var(--wt-text-field-placeholder-error-color);
}
